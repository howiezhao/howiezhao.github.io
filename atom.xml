<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Howie&#39;s Notes</title>
  
  <subtitle>Machine Learning and Cyber Security</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://howiezhao.github.io/"/>
  <updated>2019-07-29T05:09:00.844Z</updated>
  <id>https://howiezhao.github.io/</id>
  
  <author>
    <name>Howie Zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ADB小记</title>
    <link href="https://howiezhao.github.io/2019/07/29/adb/"/>
    <id>https://howiezhao.github.io/2019/07/29/adb/</id>
    <published>2019-07-29T04:56:04.000Z</published>
    <updated>2019-07-29T05:09:00.844Z</updated>
    
    <content type="html"><![CDATA[<h2 id="相关问题"><a href="#相关问题" class="headerlink" title="相关问题"></a>相关问题</h2><h3 id="error-device-still-connecting"><a href="#error-device-still-connecting" class="headerlink" title="error: device still connecting"></a>error: device still connecting</h3><p>输入<code>adb shell</code>时显示<code>error: device still connecting</code>，一般可通过：关闭<strong>开发者模式</strong>然后重新打开<strong>开发者模式</strong>，接着开启<strong>USB调试</strong>并重新和电脑配对，即可解决。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;相关问题&quot;&gt;&lt;a href=&quot;#相关问题&quot; class=&quot;headerlink&quot; title=&quot;相关问题&quot;&gt;&lt;/a&gt;相关问题&lt;/h2&gt;&lt;h3 id=&quot;error-device-still-connecting&quot;&gt;&lt;a href=&quot;#error-device-sti
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Android" scheme="https://howiezhao.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>关于Windows的代理设置</title>
    <link href="https://howiezhao.github.io/2019/07/29/about-the-proxy-settings-for-windows/"/>
    <id>https://howiezhao.github.io/2019/07/29/about-the-proxy-settings-for-windows/</id>
    <published>2019-07-29T04:21:18.000Z</published>
    <updated>2019-07-29T04:52:40.009Z</updated>
    
    <content type="html"><![CDATA[<p>Windows的<strong>系统代理</strong>使用的其实是<strong>IE的代理设置</strong>，此外，对于<strong>绝大多数</strong>的应用程序而言，它们默认使用的也是IE的代理设置，比如，Chrome、Firefox、Microsoft Store等。因此，如果想让绝大多数的应用程序使用代理，一个简单的方法是直接设置IE的代理（即系统代理）。不过，对于一小部分没有使用IE代理设置的应用程序，比如Android Studio等，你可能需要单独设置它们的代理（一般在软件的设置项中）。</p><p>值得注意的是，同为应用程序的<strong>Shell</strong>（包括<strong>命令提示符</strong>和<strong>PowerShell</strong>）就没有使用IE的代理设置，它们各自有自己的代理设置。具体而言，要为命令提示符设置代理，可使用如下两条命令：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">set HTTP_PROXY=http://user:password@proxy.domain.com:port</span><br><span class="line">set HTTPS_PROXY=https://user:password@proxy.domain.com:port</span><br></pre></td></tr></table></figure></p><p>而要为PowerShell设置代理则要使用<a href="">这个脚本</a>。</p><p>最后，对于Shell中运行的程序，有一部分使用的是IE的代理设置，比如<code>pip</code>、<code>git</code>、<code>npm</code>等，另一部分则使用的是Shell的代理设置，比如<code>curl</code>等。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Windows的&lt;strong&gt;系统代理&lt;/strong&gt;使用的其实是&lt;strong&gt;IE的代理设置&lt;/strong&gt;，此外，对于&lt;strong&gt;绝大多数&lt;/strong&gt;的应用程序而言，它们默认使用的也是IE的代理设置，比如，Chrome、Firefox、Microsof
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Windows" scheme="https://howiezhao.github.io/tags/Windows/"/>
    
  </entry>
  
  <entry>
    <title>Nexus/Pixel相关问题解决</title>
    <link href="https://howiezhao.github.io/2019/07/21/nexus-pixel-problem/"/>
    <id>https://howiezhao.github.io/2019/07/21/nexus-pixel-problem/</id>
    <published>2019-07-21T02:15:55.000Z</published>
    <updated>2019-07-29T05:40:28.445Z</updated>
    
    <content type="html"><![CDATA[<h2 id="移动网络-Wifi出现叹号或叉号"><a href="#移动网络-Wifi出现叹号或叉号" class="headerlink" title="移动网络/Wifi出现叹号或叉号"></a>移动网络/Wifi出现叹号或叉号</h2><p>Captive Portal是从Android 5开始引入的一项新功能，其主要用于检测网络连接是否正常，当用户连接网络后，系统会通过HTTP访问一个Google的服务器，若返回200状态码，则表示用户可能处在一个需要登录认证的网络环境中；若返回204状态码，则表示网络连接正常；若连接超时，则表示网络连接不正常，此时网络图标会显示一个叹号或叉号。</p><p>显然，Google的服务器是连接不上的，我们可以通过修改服务器地址来解决此问题。具体而言，连接ADB，针对不同的系统版本，下方分别给出了相关命令：</p><p>Android 9.0/8.1/8.0/7.1.2/7.1.1：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings put global captive_portal_https_url https://www.google.cn/generate_204</span><br></pre></td></tr></table></figure></p><p>Android 7.1/7.0：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings delete global captive_portal_server  </span><br><span class="line">adb shell settings put global captive_portal_detection_enabled 0</span><br></pre></td></tr></table></figure></p><p>Android 5.0-6.x：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">adb shell settings put global captive_portal_server www.google.cn</span><br></pre></td></tr></table></figure></p><p>执行之后，开启飞行模式，接着关闭飞行模式即可。<br><a id="more"></a></p><h2 id="搜索不到WiFi"><a href="#搜索不到WiFi" class="headerlink" title="搜索不到WiFi"></a>搜索不到WiFi</h2><p>因为美国2.4GHz频段的WiFi信道为1-11，而中国2.4GHz频段的WiFi信道为1-13，所以当2.4GHz频段的WiFi信道位于12或13时，美版的Nexus/Pixel会搜索不到WiFi，此时可通过重启路由器，使其自动更换信道，或进入路由器设置页面，将信道改为11以内任意信道即可。</p><h2 id="4G信号问题"><a href="#4G信号问题" class="headerlink" title="4G信号问题"></a>4G信号问题</h2><p>由于联通的网络制式一直采用的是国际通用的网络制式，所以Nexus/Pixel可以完美支持联通2G/3G/4G。</p><p>移动的3G网络制式采用的是自主研发的技术，所以Nexus/Pixel并不支持移动3G，然而移动4G网络制式采用的是自主研发和国际通用并行的方式，所以Nexus/Pixel只支持部分移动4G频段。</p><p>简单来说，Nexus/Pixel完美支持联通2G/3G/4G，支持移动2G，不支持移动3G，部分支持移动4G（具体表现为在城市有4G网络，在农村没有4G网络），电信2G/3G/4G可通过破解（本文不讨论这点）实现支持。</p><h2 id="Google（即负一屏）无法使用"><a href="#Google（即负一屏）无法使用" class="headerlink" title="Google（即负一屏）无法使用"></a>Google（即负一屏）无法使用</h2><h2 id="接听电话时黑屏，且无法点亮屏幕以挂断电话（插耳机时一切正常）"><a href="#接听电话时黑屏，且无法点亮屏幕以挂断电话（插耳机时一切正常）" class="headerlink" title="接听电话时黑屏，且无法点亮屏幕以挂断电话（插耳机时一切正常）"></a>接听电话时黑屏，且无法点亮屏幕以挂断电话（插耳机时一切正常）</h2><p>严格来说，这不算是Nexus/Pixel特有的问题，究其原因是距离感应器坏了，可通过设置使用电源键挂断电话，具体方法为在<strong>设置</strong> —&gt; <strong>辅助功能/无障碍</strong>中开启<strong>按电源按钮结束通话</strong>。</p><h2 id="蓝牙传输失败，显示不支持此内容"><a href="#蓝牙传输失败，显示不支持此内容" class="headerlink" title="蓝牙传输失败，显示不支持此内容"></a>蓝牙传输失败，显示不支持此内容</h2><p>由于版权问题，原生Android不支持传输以<code>.apk</code>结尾的文件，可通过将其改为<code>.jpg</code>结尾传输。</p><h2 id="Google-Play商店更新应用卡住"><a href="#Google-Play商店更新应用卡住" class="headerlink" title="Google Play商店更新应用卡住"></a>Google Play商店更新应用卡住</h2><p>在Android 9.0之前，Play商店是通过<strong>下载管理器</strong>下载应用的，出现这种情况可以直接将<strong>下载管理器</strong>强行停止，然后重新启动Play商店即可更新应用。在Android 9.0之后，可直接将Play商店强行停止再重新启动即可。</p><h2 id="系统无法更新"><a href="#系统无法更新" class="headerlink" title="系统无法更新"></a>系统无法更新</h2><p>具体表现为<strong>系统更新</strong>处永远显示<strong>正在安装系统更新</strong>，一般来说，这是由于网络原因引起的，目前并没有一个稳定的解决办法，建议直接下载新系统镜像并线刷。你可以在<a href="https://developers.google.cn/android/images" target="_blank" rel="noopener">这个官方地址</a>找到有关Nexus/Pixel的所有出厂镜像，其中也附带有详细的安装方法。</p><p>具体而言，你需要先解锁Bootloader，然后连接ADB，紧接着执行<code>adb reboot bootloader</code>进入fastboot模式，最后执行相应系统的<code>flash-all</code>脚本即可。</p><h2 id="Pixel-Pixel-XL-Verizon版解锁Bootloader教程"><a href="#Pixel-Pixel-XL-Verizon版解锁Bootloader教程" class="headerlink" title="Pixel/Pixel XL Verizon版解锁Bootloader教程"></a>Pixel/Pixel XL Verizon版解锁Bootloader教程</h2><p>教程来源自xda上的一篇<a href="https://www.xda-developers.com/unlock-bootloader-verizon-google-pixel-xl/" target="_blank" rel="noopener">文章</a>，具体步骤如下：</p><ol><li>从您的设备中删除Google帐户和任何类型的屏幕锁定（指纹，PIN，图案等）。</li><li>从您的设备中取出SIM卡。</li><li>重置您的设备。在设置向导中，跳过所有内容，不要连接到WiFi，不要添加指纹或任何类型的屏幕锁定。</li><li>转到开发人员选项并启用USB调试。</li><li>将手机连接到PC。</li><li>在adb目录中打开CMD并输入：<code>adb shell pm uninstall --user 0 com.android.phone</code></li><li>重启您的设备。</li><li>连接到WiFi，打开Chrome并转到google.com（或任何网站）。</li><li>转到开发人员选项并启用OEM解锁。</li><li>重启到bootloader并通过CMD运行：<code>fastboot oem unlock</code>或<code>fastboot flashing unlock</code>。</li><li>完成。</li></ol>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;移动网络-Wifi出现叹号或叉号&quot;&gt;&lt;a href=&quot;#移动网络-Wifi出现叹号或叉号&quot; class=&quot;headerlink&quot; title=&quot;移动网络/Wifi出现叹号或叉号&quot;&gt;&lt;/a&gt;移动网络/Wifi出现叹号或叉号&lt;/h2&gt;&lt;p&gt;Captive Portal是从Android 5开始引入的一项新功能，其主要用于检测网络连接是否正常，当用户连接网络后，系统会通过HTTP访问一个Google的服务器，若返回200状态码，则表示用户可能处在一个需要登录认证的网络环境中；若返回204状态码，则表示网络连接正常；若连接超时，则表示网络连接不正常，此时网络图标会显示一个叹号或叉号。&lt;/p&gt;
&lt;p&gt;显然，Google的服务器是连接不上的，我们可以通过修改服务器地址来解决此问题。具体而言，连接ADB，针对不同的系统版本，下方分别给出了相关命令：&lt;/p&gt;
&lt;p&gt;Android 9.0/8.1/8.0/7.1.2/7.1.1：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell settings put global captive_portal_https_url https://www.google.cn/generate_204&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Android 7.1/7.0：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell settings delete global captive_portal_server  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;adb shell settings put global captive_portal_detection_enabled 0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Android 5.0-6.x：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;adb shell settings put global captive_portal_server www.google.cn&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;执行之后，开启飞行模式，接着关闭飞行模式即可。&lt;br&gt;
    
    </summary>
    
      <category term="Bug" scheme="https://howiezhao.github.io/categories/Bug/"/>
    
    
      <category term="Android" scheme="https://howiezhao.github.io/tags/Android/"/>
    
      <category term="硬件" scheme="https://howiezhao.github.io/tags/%E7%A1%AC%E4%BB%B6/"/>
    
  </entry>
  
  <entry>
    <title>GCC小记</title>
    <link href="https://howiezhao.github.io/2019/04/18/gcc/"/>
    <id>https://howiezhao.github.io/2019/04/18/gcc/</id>
    <published>2019-04-18T09:42:24.000Z</published>
    <updated>2019-04-18T09:55:48.418Z</updated>
    
    <content type="html"><![CDATA[<p>GCC一般有两层意思，大的意思是指GNU Compiler Collection（即GNU编译器套装），小的意思是指GNU C Compiler（即GNU C语言编译器），在本文中，我默认大写的GCC指大的意思，小写的gcc指小的意思。</p><p>使用gcc编译C语言源代码的一般格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ gcc test.c -o <span class="built_in">test</span></span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="常用参数"><a href="#常用参数" class="headerlink" title="常用参数"></a>常用参数</h2><p>Linux下<code>gcc</code>命令常见的参数及其含义如下所示：</p><ul><li><code>--help</code>：显示帮助信息</li><li><code>-o</code>：指定生成的文件名，若不指定，则默认生成a.out</li><li><code>-E</code>：生成<code>.i</code>格式的预处理文件</li><li><code>-S</code>：生成<code>.s</code>格式的汇编文件</li><li><code>-c</code>：生成<code>.o</code>格式的二进制文件</li><li><code>-save-temps</code>：保留所有生成的中间文件</li><li><code>-g</code>：生成必要的符号信息，为调试而用</li><li><code>-ggdb</code>：生成可特供于gdb使用的调试信息</li><li><code>-gstabs</code>：生成stabs格式的调试信息</li><li><code>-Wall</code>：显示所有常用的警告信息，即Warning all</li><li><code>-m32</code>：指定生成32位程序</li><li><code>-Os</code>：为减小代码大小而进行优化，即Optimizers small</li><li><code>-nostdinc</code>：不使用标准库</li><li><code>-fno-stack-protector</code>：不生成用于检测缓冲区溢出的代码</li><li><code>-I&lt;dir&gt;</code>：添加搜索头文件的路径</li><li><code>-fno-builtin</code>：除非用<code>__builtin_</code>前缀，否则不进行<code>builtin</code>函数的优化</li></ul><h2 id="跨平台"><a href="#跨平台" class="headerlink" title="跨平台"></a>跨平台</h2><p>为了在Windows中使用GCC，诞生了<a href="http://www.mingw.org/" target="_blank" rel="noopener"><strong>MinGW</strong></a> 项目，即Minimalist GNU for Windows(适用于Windows的极简GNU)，它是将GCC编译器和GNU Binutils移植到Win32平台下的产物，又被称为mingw32。另有可用于产生32位及64位Windows可执行文件的<a href="https://mingw-w64.org/doku.php/start" target="_blank" rel="noopener"><strong>MinGW-w64</strong></a>项目，是从原MinGW项目产生的分支。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;GCC一般有两层意思，大的意思是指GNU Compiler Collection（即GNU编译器套装），小的意思是指GNU C Compiler（即GNU C语言编译器），在本文中，我默认大写的GCC指大的意思，小写的gcc指小的意思。&lt;/p&gt;
&lt;p&gt;使用gcc编译C语言源代码的一般格式如下：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$ gcc test.c -o &lt;span class=&quot;built_in&quot;&gt;test&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>QEMU小记</title>
    <link href="https://howiezhao.github.io/2019/04/18/qemu/"/>
    <id>https://howiezhao.github.io/2019/04/18/qemu/</id>
    <published>2019-04-18T09:17:11.000Z</published>
    <updated>2019-04-18T09:41:04.506Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://www.qemu.org/" target="_blank" rel="noopener">QEMU</a>是Linux中使用最广的虚拟机，其便于调试的特性也适合于系统开发者。</p><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>使用<code>sudo apt install qemu</code>即可在Ubuntu中安装QEMU，安装完成后直接输入<code>qemu</code>来验证是否成功安装，如果出错，可再输入<code>qemu-system-i386</code>来验证其是否成功安装，若成功，可建立如下所示的软链接，以方便日后使用。<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo ln -s /usr/bin/qemu-system-i386 /usr/bin/qemu</span><br></pre></td></tr></table></figure></p><p>值得注意的是，QEMU的启动需要有图形界面，若未安装图形界面，则会报错：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Could not initialize SDL(No available video device) - exiting</span><br></pre></td></tr></table></figure></p><a id="more"></a><h2 id="运行"><a href="#运行" class="headerlink" title="运行"></a>运行</h2><p>使用QEMU运行一个虚拟机的命令格式为<code>qemu [options] [disk_image]</code>，其中disk_image即硬盘镜像文件。其常用的参数如下：</p><ul><li><code>-hda file</code>：使用file作为硬盘0的镜像文件。</li><li><code>-m megs</code>：设定虚拟内存为megs M字节，默认为128M字节。</li><li><code>-smp n</code>：设置为有n个CPU的SMP系统。</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://www.qemu.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;QEMU&lt;/a&gt;是Linux中使用最广的虚拟机，其便于调试的特性也适合于系统开发者。&lt;/p&gt;
&lt;h2 id=&quot;安装&quot;&gt;&lt;a href=&quot;#安装&quot; class=&quot;headerlink&quot; title=&quot;安装&quot;&gt;&lt;/a&gt;安装&lt;/h2&gt;&lt;p&gt;使用&lt;code&gt;sudo apt install qemu&lt;/code&gt;即可在Ubuntu中安装QEMU，安装完成后直接输入&lt;code&gt;qemu&lt;/code&gt;来验证是否成功安装，如果出错，可再输入&lt;code&gt;qemu-system-i386&lt;/code&gt;来验证其是否成功安装，若成功，可建立如下所示的软链接，以方便日后使用。&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sudo ln -s /usr/bin/qemu-system-i386 /usr/bin/qemu&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;值得注意的是，QEMU的启动需要有图形界面，若未安装图形界面，则会报错：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;Could not initialize SDL(No available video device) - exiting&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>Makefile小记</title>
    <link href="https://howiezhao.github.io/2019/04/18/makefile/"/>
    <id>https://howiezhao.github.io/2019/04/18/makefile/</id>
    <published>2019-04-18T04:40:39.000Z</published>
    <updated>2019-04-18T08:31:18.678Z</updated>
    
    <content type="html"><![CDATA[<p>Linux中使用最广的构建工具是<strong>make</strong>，而make会读取<strong>Makefile</strong>文件中的配置信息来完成构建，一个简单的Makefile文件如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">editor : main.o text.o</span><br><span class="line">    gcc -o editor main.o text.o</span><br><span class="line">main.o : main.c def.h</span><br><span class="line">    gcc -c main.c  <span class="comment">#-c参数指定生成.o文件</span></span><br><span class="line">text.o : text.c com.h</span><br><span class="line">    gcc -c text.c</span><br><span class="line">install : editor</span><br><span class="line">    mv editor /usr/<span class="built_in">local</span></span><br></pre></td></tr></table></figure></p><p>具体而言，冒号前面为<strong>target</strong>，即要生成的文件；冒号后面为<strong>dependencies</strong>，即被依赖的文件；每一个<strong>target:dependencies对</strong>的下一行为要执行的<strong>命令</strong>（注意要以Tab键起首）。当make不带参数时，默认执行第一个target。target也可以是要求make要完成的动作，执行这种target后并不能得到和target同名的文件，因此，也称做<strong>phony target</strong>（即伪target），如第7行所示。dependencies也可以为空，如常用的target为<code>clean</code>时，就没有依赖，只有命令，一般用于清理工作。</p><p>当输入<code>make</code>或<code>make editor</code>，即可开始构建。若<code>editor</code>这个target文件不存在，或者<code>main.o</code>、<code>text.o</code>这两个依赖文件被修改，都会导致make调用其下的命令<code>gcc -o editor main.o text.o</code>；接下来，由于引用到<code>main.o</code>和<code>text.o</code>，make会检查<code>main.o</code>的依赖<code>main.c</code>、<code>def.h</code>有无更新，如果有，则执行其下的命令<code>gcc -c main.c</code>；同理，也适用于<code>text.o</code>。当输入<code>make install</code>，make会检查install的依赖<code>editor</code>是否是最新，如果是，则执行其下的命令<code>mv editor /usr/local</code>。<br><a id="more"></a></p><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><p>Makefile中以<code>#</code>开头的均为注释。</p><h2 id="回声"><a href="#回声" class="headerlink" title="回声"></a>回声</h2><p>正常情况下，make会打印每条命令，然后再执行，这就叫做<strong>回声</strong>。在命令的前面加上<code>@</code>，就可以关闭回声。由于在构建过程中，需要了解当前在执行哪条命令，所以通常只在注释和纯显示的echo命令前面加上<code>@</code>。</p><h2 id="内置目标名"><a href="#内置目标名" class="headerlink" title="内置目标名"></a>内置目标名</h2><p><strong>内置目标名</strong>指示了如果某些名称作为target（目标名）出现，则具有特殊含义，常用的如下所示：</p><ul><li><code>.PHONY</code>：明确声明伪目标</li><li><code>.SUFFIXES</code>：消除默认后缀规则</li><li><code>.DELETE_ON_ERROR</code>：如果遇到错误（或make中断）则删除目标文件</li></ul><p>更多的内置目标名可以参考<a href="https://www.gnu.org/software/make/manual/html_node/Special-Targets.html#Special-Targets" target="_blank" rel="noopener">make官方手册</a>。</p><h2 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h2><p>Makefile中也可以使用变量，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">TXT = Hello World</span><br><span class="line"><span class="built_in">test</span>:</span><br><span class="line">    <span class="built_in">echo</span> $(TXT)</span><br></pre></td></tr></table></figure></p><p>这类似于C语言中的宏，按照传统，变量名一般大写，使用变量时要放在<code>$()</code>之中。</p><p>有时，变量的值可能指向另一个变量，比如：<code>V1 = $(V2)</code>，这时会出现一个问题，V1的值到底在定义时扩展（静态扩展），还是在运行时扩展（动态扩展）？如果V2的值是动态变化的，这两种扩展方式的结果可能会差异很大。为了解决类似问题，Makefile一共提供了四个赋值运算符，如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">VARIABLE = value</span><br><span class="line"><span class="comment"># 在运行时扩展，允许递归扩展。</span></span><br><span class="line"></span><br><span class="line">VARIABLE := value</span><br><span class="line"><span class="comment"># 在定义时扩展。</span></span><br><span class="line"></span><br><span class="line">VARIABLE ?= value</span><br><span class="line"><span class="comment"># 只有在该变量为空时才设置值。</span></span><br><span class="line"></span><br><span class="line">VARIABLE += value</span><br><span class="line"><span class="comment"># 将值追加到变量的尾端。</span></span><br></pre></td></tr></table></figure></p><h2 id="内置变量"><a href="#内置变量" class="headerlink" title="内置变量"></a>内置变量</h2><p>Makefile提供了一系列的内置变量，常见的如下所示：</p><ul><li><code>$(CC)</code>：指向当前使用的编译器</li></ul><p>更多的内置变量可以参考<a href="https://www.gnu.org/software/make/manual/html_node/Implicit-Variables.html" target="_blank" rel="noopener">make官方手册</a>。</p><h2 id="自动变量"><a href="#自动变量" class="headerlink" title="自动变量"></a>自动变量</h2><h2 id="判断"><a href="#判断" class="headerlink" title="判断"></a>判断</h2><p>使用条件判断，可以让make根据运行时的不同情况选择不同的执行分支。如下所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ifeq ($(CC),gcc)</span><br><span class="line">  libs=$(libs_for_gcc)</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">  libs=$(normal_libs)</span><br><span class="line">endif</span><br></pre></td></tr></table></figure></p><p>上面代码判断当前编译器是否为gcc，然后指定不同的库文件。其中<code>ifeq</code>比较参数<code>arg1</code>和<code>arg2</code>是否相同，类似的，<code>ifneq</code>比较参数<code>arg1</code>和<code>arg2</code>是否不相同。</p><p>除此之外，还有<code>ifdef</code>判断变量是否被定义，<code>ifndef</code>判断变量是否没有被定义。</p><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><p>Makefile中还内置了许多函数，可供调用，格式如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="keyword">function</span> arguments)</span><br><span class="line"><span class="comment"># 或者</span></span><br><span class="line"><span class="variable">$&#123;function arguments&#125;</span></span><br></pre></td></tr></table></figure></p><p>常用的函数有：</p><ul><li><code>$(shell)</code>：用来执行shell命令</li><li><code>$(wildcard)</code>：用来在Makefile中，替换Bash的通配符。</li><li><code>$(patsubst)</code>：用于模式匹配的替换，语法为<code>$(patsubst &lt;pattern&gt;,&lt;replacement&gt;,&lt;text&gt;)</code></li><li><code>$(filter)</code>：</li><li><code>$(addsuffix)</code>：</li><li><code>$(addprefix)</code>：</li><li><code>$(if)</code>：</li><li><code>$(foreach)</code>：</li><li><code>$(call)</code>：唯一一个可以用来创建新的参数化的函数，语法为<code>$(call &lt;expression&gt;,&lt;parm1&gt;,&lt;parm2&gt;,...,&lt;parmn&gt;)</code>，值得注意的是，call函数在处理参数时，第2个及其之后的参数中的空格会被保留，因而在向call函数提供参数时，最安全的做法是去除所有多余的空格，避免造成一些奇怪的效果。</li></ul><p>相关示例如下：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># shell函数用法</span></span><br><span class="line">contents := $(shell cat foo) <span class="comment"># 将foo文件中的内容赋值给contents</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># call函数用法</span></span><br><span class="line">reverse =  $(2) $(1)</span><br><span class="line">foo = $(call reverse,a,b) <span class="comment"># 最终foo的值为b a</span></span><br></pre></td></tr></table></figure></p><p>更多的内置函数可以参考<a href="https://www.gnu.org/software/make/manual/html_node/Functions.html" target="_blank" rel="noopener">make官方手册</a></p><h2 id="引用其它的Makefile"><a href="#引用其它的Makefile" class="headerlink" title="引用其它的Makefile"></a>引用其它的Makefile</h2><p>在Makefile中可以使用<code>include</code>关键字把别的Makefile包含进来，这很像C语言的<code>#include</code>，被包含的文件会原模原样的放在当前文件的包含位置。<code>include</code>的语法是：<code>include &lt;filename&gt;</code>，其中被包含的Makefile文件通常以<code>.mk</code>结尾。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Linux中使用最广的构建工具是&lt;strong&gt;make&lt;/strong&gt;，而make会读取&lt;strong&gt;Makefile&lt;/strong&gt;文件中的配置信息来完成构建，一个简单的Makefile文件如下所示：&lt;br&gt;&lt;figure class=&quot;highlight bash&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;editor : main.o text.o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gcc -o editor main.o text.o&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;main.o : main.c def.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gcc -c main.c  &lt;span class=&quot;comment&quot;&gt;#-c参数指定生成.o文件&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;text.o : text.c com.h&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    gcc -c text.c&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;install : editor&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    mv editor /usr/&lt;span class=&quot;built_in&quot;&gt;local&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;具体而言，冒号前面为&lt;strong&gt;target&lt;/strong&gt;，即要生成的文件；冒号后面为&lt;strong&gt;dependencies&lt;/strong&gt;，即被依赖的文件；每一个&lt;strong&gt;target:dependencies对&lt;/strong&gt;的下一行为要执行的&lt;strong&gt;命令&lt;/strong&gt;（注意要以Tab键起首）。当make不带参数时，默认执行第一个target。target也可以是要求make要完成的动作，执行这种target后并不能得到和target同名的文件，因此，也称做&lt;strong&gt;phony target&lt;/strong&gt;（即伪target），如第7行所示。dependencies也可以为空，如常用的target为&lt;code&gt;clean&lt;/code&gt;时，就没有依赖，只有命令，一般用于清理工作。&lt;/p&gt;
&lt;p&gt;当输入&lt;code&gt;make&lt;/code&gt;或&lt;code&gt;make editor&lt;/code&gt;，即可开始构建。若&lt;code&gt;editor&lt;/code&gt;这个target文件不存在，或者&lt;code&gt;main.o&lt;/code&gt;、&lt;code&gt;text.o&lt;/code&gt;这两个依赖文件被修改，都会导致make调用其下的命令&lt;code&gt;gcc -o editor main.o text.o&lt;/code&gt;；接下来，由于引用到&lt;code&gt;main.o&lt;/code&gt;和&lt;code&gt;text.o&lt;/code&gt;，make会检查&lt;code&gt;main.o&lt;/code&gt;的依赖&lt;code&gt;main.c&lt;/code&gt;、&lt;code&gt;def.h&lt;/code&gt;有无更新，如果有，则执行其下的命令&lt;code&gt;gcc -c main.c&lt;/code&gt;；同理，也适用于&lt;code&gt;text.o&lt;/code&gt;。当输入&lt;code&gt;make install&lt;/code&gt;，make会检查install的依赖&lt;code&gt;editor&lt;/code&gt;是否是最新，如果是，则执行其下的命令&lt;code&gt;mv editor /usr/local&lt;/code&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>对比几种文件共享协议</title>
    <link href="https://howiezhao.github.io/2019/04/17/file-sharing-protocol/"/>
    <id>https://howiezhao.github.io/2019/04/17/file-sharing-protocol/</id>
    <published>2019-04-17T10:07:32.000Z</published>
    <updated>2019-04-17T15:24:33.596Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SMB"><a href="#SMB" class="headerlink" title="SMB"></a>SMB</h2><p><strong>SMB</strong>全称Server Message Block（即服务器消息块），又称Common Internet File System（即网络文件共享系统），所以也常被缩写为<strong>SMB/CIFS</strong>。</p><h2 id="FTP"><a href="#FTP" class="headerlink" title="FTP"></a>FTP</h2><h2 id="NFS"><a href="#NFS" class="headerlink" title="NFS"></a>NFS</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;SMB&quot;&gt;&lt;a href=&quot;#SMB&quot; class=&quot;headerlink&quot; title=&quot;SMB&quot;&gt;&lt;/a&gt;SMB&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;SMB&lt;/strong&gt;全称Server Message Block（即服务器消息块），又称Common Inter
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>Android刷机指南</title>
    <link href="https://howiezhao.github.io/2019/03/23/android-shuaji-guide/"/>
    <id>https://howiezhao.github.io/2019/03/23/android-shuaji-guide/</id>
    <published>2019-03-23T03:42:58.000Z</published>
    <updated>2019-07-22T13:18:26.295Z</updated>
    
    <content type="html"><![CDATA[<h2 id="名词解释"><a href="#名词解释" class="headerlink" title="名词解释"></a>名词解释</h2><h3 id="软重启与硬重启"><a href="#软重启与硬重启" class="headerlink" title="软重启与硬重启"></a>软重启与硬重启</h3><p><strong>软重启</strong>（又称<strong>热重启</strong>）是指从操作系统层面上关机再开机，而<strong>硬重启</strong>（又称<strong>冷重启</strong>）是指直接关掉电源再开机。类似的，也有<strong>软（热）关机</strong>和<strong>硬（冷）关机</strong>，其区别类似于在Windows“开始”菜单中点击关机和直接关掉主机电源的区别。一般而言，软（热）关机对设备更好。<br><a id="more"></a></p><h3 id="Bootloader-fastboot-Recovery"><a href="#Bootloader-fastboot-Recovery" class="headerlink" title="Bootloader/fastboot/Recovery"></a>Bootloader/fastboot/Recovery</h3><h3 id="Full-OTA-Image与Factory-Image"><a href="#Full-OTA-Image与Factory-Image" class="headerlink" title="Full OTA Image与Factory Image"></a>Full OTA Image与Factory Image</h3><h2 id="刷机流程"><a href="#刷机流程" class="headerlink" title="刷机流程"></a>刷机流程</h2><ol><li>提前备份必要的数据（下载的音乐、视频，QQ、微信的聊天记录，通话记录、短信、通讯录，相册等），尽量保持电量满。</li><li>恢复出厂设置（亦或，取消所有安全机制，如屏幕锁定等，并退出Google账号。）。</li><li>在开发者选项中开启USB调试。</li><li>解锁Bootloader（需要的话）。</li><li>刷入第三方Recovery，如TWRP。<a href="https://twrp.me/" target="_blank" rel="noopener">https://twrp.me/</a></li><li>从TWRP中安装第三方ROM，顺便root。</li></ol><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题"></a>常见问题</h2><h3 id="开机无限进入TWRP"><a href="#开机无限进入TWRP" class="headerlink" title="开机无限进入TWRP"></a>开机无限进入TWRP</h3><p>碰到这种情况，你可能需要格式化Data分区。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;名词解释&quot;&gt;&lt;a href=&quot;#名词解释&quot; class=&quot;headerlink&quot; title=&quot;名词解释&quot;&gt;&lt;/a&gt;名词解释&lt;/h2&gt;&lt;h3 id=&quot;软重启与硬重启&quot;&gt;&lt;a href=&quot;#软重启与硬重启&quot; class=&quot;headerlink&quot; title=&quot;软重启与硬重启&quot;&gt;&lt;/a&gt;软重启与硬重启&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;软重启&lt;/strong&gt;（又称&lt;strong&gt;热重启&lt;/strong&gt;）是指从操作系统层面上关机再开机，而&lt;strong&gt;硬重启&lt;/strong&gt;（又称&lt;strong&gt;冷重启&lt;/strong&gt;）是指直接关掉电源再开机。类似的，也有&lt;strong&gt;软（热）关机&lt;/strong&gt;和&lt;strong&gt;硬（冷）关机&lt;/strong&gt;，其区别类似于在Windows“开始”菜单中点击关机和直接关掉主机电源的区别。一般而言，软（热）关机对设备更好。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Android" scheme="https://howiezhao.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>汇编语言小记</title>
    <link href="https://howiezhao.github.io/2019/03/09/assembly/"/>
    <id>https://howiezhao.github.io/2019/03/09/assembly/</id>
    <published>2019-03-09T09:41:13.000Z</published>
    <updated>2019-06-09T00:12:18.573Z</updated>
    
    <content type="html"><![CDATA[<p><strong>汇编语言</strong>（Assembly Language，简称<strong>ASM</strong>）由<strong>汇编指令</strong>、<strong>伪指令</strong>和<strong>其他符号</strong>组成，其中汇编指令有对应的机器码，而伪指令和其他符号没有对应的机器码，仅由汇编器识别执行。</p><h2 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h2><p>汇编语言是依赖底层CPU架构的，不同的CPU架构拥有不同的汇编语言，比如，常用于PC的<strong>x86汇编</strong>和常用于嵌入式设备的<strong>ARM汇编</strong>。由于x86架构又分为16位、32位、64位等，其相应的汇编也有稍许不同。本文主要以32位x86汇编为例做简要介绍。<br><a id="more"></a></p><h2 id="寄存器"><a href="#寄存器" class="headerlink" title="寄存器"></a>寄存器</h2><p>汇编语言的大部分指令都是直接操作CPU中的寄存器的，所以有必要了解以下x86架构的CPU中常见的寄存器。</p><p>16位x86CPU中常见的寄存器有：</p><ul><li>通用寄存器（<strong>8个</strong>）：<ul><li>数据寄存器：<ul><li>AX：累加寄存器，Accumulator</li><li>BX：基址寄存器，Base</li><li>CX：计数寄存器，Count</li><li>DX：数据寄存器，Data</li></ul></li><li>指针寄存器：<ul><li>SP：堆栈指针寄存器，Stack Pointer</li><li>BP：基址指针寄存器，Base Pointer</li></ul></li><li>变址寄存器：<ul><li>SI：源变址寄存器，Source Index</li><li>DI：目的变址寄存器，Destinatin Index</li></ul></li></ul></li><li>段寄存器：<ul><li>CS：代码段寄存器，Code Segment</li><li>DS：数据段寄存器，Data Segment</li><li>SS：堆栈段寄存器，Stack Segment</li><li>ES：附加段寄存器，Extra Segment</li></ul></li><li>控制寄存器：<ul><li>IP：指令指针寄存器，Instruction Pointer</li><li>FLAGS：标志寄存器</li></ul></li></ul><p>为了保证兼容性，AX、BX、CX、DX这四个寄存器都可分为两个可独立使用的8位寄存器来用，如AX可分为<strong>AH</strong>和<strong>AL</strong>，其中AH代表高（High）8位，AL代表低（Low）8位，其他3个也是如此。</p><p>32位x86CPU在16位的基础上增加了一些寄存器，那些和原来作用相同的寄存器一般会在前面加上<code>E</code>，其中常见的寄存器有：</p><ul><li>通用寄存器（<strong>8个</strong>）：EAX、EBX、ECX、EDX、ESP、EBP、ESI、EDI</li><li>段寄存器：CS、DS、SS、ES、FS、GS，增加的FS、GS和ES一样，属于附加段寄存器</li><li>指令指针寄存器：EIP</li><li>标志寄存器：EFLAGS</li><li>系统表寄存器：GDTR、LDTR、IDTR、TR</li><li>控制寄存器：CR0、CR1、CR2、CR3、CR4</li><li>调试寄存器：DR0、DR1、DR2、DR3、DR4、DR5、DR6、DR7</li><li>测试寄存器：TR0、TR1、TR2、TR3、TR4、TR5、TR6、TR7</li></ul><p>类似的，64位又在32位的基础上增加了一些寄存器，那些和原来作用相同的寄存器一般会将前面的<code>E</code>改为<code>R</code>，其中常见的寄存器有：</p><ul><li>通用寄存器（<strong>16个</strong>）：RAX、RBX、RCX、RDX、RSP、RBP、RSI、RDI、R8、R9、R10、R11、R12、R13、R14、R15</li><li>指令指针寄存器：RIP</li><li>标志寄存器：RFLAGS</li></ul><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><p>常见的汇编指令如下：</p><ul><li><code>mov</code>：传送指令，两个操作对象的位数应该一致，如<code>mov eax,ebx</code>，表示将EBX的值送入EAX中。8086CPU不支持将数据直接送入段寄存器的操作，要想实现此功能，只能用一个寄存器来进行中转。</li><li><code>add</code>：加法指令，两个操作对象的位数应该一致，如<code>add eax,ebx</code>，表示将EAX和EBX相加，其值赋给EAX。</li><li><code>sub</code>：减法指令，如<code>sub eax,ebx</code>，表示用EAX减EBX，其值赋给EAX。</li><li><code>push</code>：</li><li><code>pop</code>：</li><li><code>jmp</code>：跳转指令，属于转移指令，如<code>jmp 2AE3:3</code>，表示将CS设为2AE3H，将IP设为0003H，CPU将从CS:IP（即2AE33H）处读取指令；<code>jmp eax</code>表示将EAX的值赋给IP，CS保持不变。</li><li><code>jnz</code>：条件跳转指令，检查EFLAGS标志寄存器中的ZF位（零标志位）是否为0，若不为0，则跳转。</li><li><code>jz</code>：条件跳转指令，检查EFLAGS标志寄存器中的ZF位（零标志位）是否为0，若为0，则跳转。</li><li><code>in</code>：从I/O端口读取内容，如<code>in al,21H</code>，表示从21H端口读取内容到AL中。</li><li><code>out</code>：向I/O端口写入内容，如<code>out 21H,al</code>，表示将AL的值写入到21H端口中。</li><li><code>xor</code>：按位异或运算，即相同为0，不同为1，如<code>xor eax,ebx</code>，表示将EAX和EBX按位异或，其值赋给EAX。对同一个值进行异或，会使其得0，汇编中常用这种方法得到0，如<code>xor eax,eax</code>。</li><li><code>or</code>：按位或运算，如<code>or eax,ebx</code>，表示将EAX和EBX按位或，其值赋给EAX。</li></ul><p>注意：汇编指令和寄存器名称不区分大小写。</p><h2 id="伪指令"><a href="#伪指令" class="headerlink" title="伪指令"></a>伪指令</h2><p>伪指令依赖于具体的汇编器，这里我们以GNU中的as汇编器（gas）为例，讲述常见的伪指令及其含义：</p><ul><li><code>.set</code>：为变量设置一个值，如<code>.set CR0_PE_ON, 0x1</code>。</li><li><code>.globl</code>或<code>.global</code>：设置外部链接，使其在其他文件中可被调用，如<code>.globl start</code>。</li><li><code>.code16</code>：生成16位汇编代码。</li><li><code>.code32</code>：生成32位汇编代码。</li><li><code>.p2align</code>：</li><li><code>.word</code>：</li><li><code>.long</code>：</li></ul><p>想要了解更多的伪指令可以参考<a href="https://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops" target="_blank" rel="noopener">gas的官方文档</a>。</p><h2 id="标号"><a href="#标号" class="headerlink" title="标号"></a>标号</h2><p>标号代表一个地址，类似于高级语言中的函数，在需要时可以使用跳转指令跳转到标号处执行，利用标号还可以实现死循环，如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">spin:</span><br><span class="line">    jmp spin</span><br></pre></td></tr></table></figure></p><h2 id="风格"><a href="#风格" class="headerlink" title="风格"></a>风格</h2><p>x86汇编语言的两大风格分别是<strong>Intel风格</strong>和<strong>AT&amp;T风格</strong>，分别被Microsoft和GNU所采用，两种风格的详细区别如下表所示：</p><table><thead><tr><th>项目</th><th>Intel风格</th><th>AT&amp;T风格</th></tr></thead><tbody><tr><td>操作数顺序</td><td>目标操作数在前，如<code>mov eax,8</code></td><td>源操作数在前，如<code>movl $8,%eax</code></td></tr><tr><td>寄存器名字</td><td>原样，如<code>mov eax,8</code></td><td>加<code>%</code>前缀，如<code>movl $8,%eax</code></td></tr><tr><td>立即数</td><td>原样，如<code>mov eax,8</code></td><td>加<code>$</code>前缀，如<code>movl $8,%eax</code></td></tr><tr><td>16进制立即数</td><td>用后缀<code>b</code>与<code>h</code>分别表示二进制与十六进制，对于16进制字母开头的要加前缀<code>0</code></td><td>加前缀<code>0x</code></td></tr><tr><td>访问内存长度的表示</td><td>前缀<code>byte ptr</code>，<code>word ptr</code>，<code>dword ptr</code></td><td>后缀<code>b</code>、<code>w</code>、<code>l</code>表示字节、字、长型</td></tr><tr><td>引用全局或静态变量var的值</td><td>[_var]</td><td>_var</td></tr><tr><td>引用全局或静态变量var的地址</td><td>_var</td><td>$_var</td></tr><tr><td>寄存器间址</td><td>[reg]</td><td>(%reg)</td></tr><tr><td>寄存器变址寻址</td><td>[reg + _x]</td><td>_x(%reg)</td></tr><tr><td>立即数变址寻址</td><td>[reg + 1]</td><td>1(%reg)</td></tr><tr><td>整数数组寻址</td><td>[eax*4 + array]</td><td>_array (,%eax, 4)</td></tr><tr><td>注释</td><td>:注释以英文分号开头</td><td>#注释以井号开头</td></tr></tbody></table><p>本文的书写风格以Intel风格为主。</p><h2 id="内联汇编"><a href="#内联汇编" class="headerlink" title="内联汇编"></a>内联汇编</h2><p>内联汇编（Inline Assembly）是指在C代码中嵌入汇编代码，显然，其语法是由具体的C编译器所决定的，这里主要以GNU中的gcc编译器为例简述其语法。</p><h2 id="更多"><a href="#更多" class="headerlink" title="更多"></a>更多</h2><p>要了解汇编语言更多的知识，可以阅读王爽的<a href="https://book.douban.com/subject/25726019/" target="_blank" rel="noopener">《汇编语言》</a>一书，这本书基于16位的8086CPU来讲解汇编，虽然处理器已过时，但思想永不褪色。</p><p>其次，<a href="https://www.ibm.com/developerworks/cn/linux/l-assembly/index.html" target="_blank" rel="noopener">Linux汇编语言开发指南</a>，也是一篇不错的介绍文章。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;汇编语言&lt;/strong&gt;（Assembly Language，简称&lt;strong&gt;ASM&lt;/strong&gt;）由&lt;strong&gt;汇编指令&lt;/strong&gt;、&lt;strong&gt;伪指令&lt;/strong&gt;和&lt;strong&gt;其他符号&lt;/strong&gt;组成，其中汇编指令有对应的机器码，而伪指令和其他符号没有对应的机器码，仅由汇编器识别执行。&lt;/p&gt;
&lt;h2 id=&quot;架构&quot;&gt;&lt;a href=&quot;#架构&quot; class=&quot;headerlink&quot; title=&quot;架构&quot;&gt;&lt;/a&gt;架构&lt;/h2&gt;&lt;p&gt;汇编语言是依赖底层CPU架构的，不同的CPU架构拥有不同的汇编语言，比如，常用于PC的&lt;strong&gt;x86汇编&lt;/strong&gt;和常用于嵌入式设备的&lt;strong&gt;ARM汇编&lt;/strong&gt;。由于x86架构又分为16位、32位、64位等，其相应的汇编也有稍许不同。本文主要以32位x86汇编为例做简要介绍。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>成为黑客高手的必备技能</title>
    <link href="https://howiezhao.github.io/2019/02/25/hacker-essential-skills/"/>
    <id>https://howiezhao.github.io/2019/02/25/hacker-essential-skills/</id>
    <published>2019-02-25T12:39:30.000Z</published>
    <updated>2019-02-25T14:51:36.435Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自<a href="https://null-byte.wonderhowto.com/how-to/essential-skills-becoming-master-hacker-0154509/" target="_blank" rel="noopener">https://null-byte.wonderhowto.com/how-to/essential-skills-becoming-master-hacker-0154509/</a> ，正文如下：</p><p>我的许多有抱负的黑客写信给我，都问同样的问题。“我需要什么技能才能成为一个好的黑客？”</p><p>由于黑客是最熟练的信息技术学科之一，因此需要广泛的IT技术和技术知识。要真正成为一名优秀的黑客，必须掌握许多技能。如果你没有我在此列出的所有技能，请不要气馁，可以将此列表作为你在不久的将来学习和掌握所需内容的起点。<br><a id="more"></a><br><img src="https://img.wonderhowto.com/img/original/78/70/63533756748235/0/635337567482357870.jpg" alt=""><br>这是我进入这个精英IT行业的万神殿所需技能的概述列表。我将这些技能分为三类，以帮助你从一个级别转到另一个级别，更容易掌握基本技能、中级技能和无形技能，并提供了指向Null Byte相关文章的链接，供你了解。</p><h2 id="基本技能"><a href="#基本技能" class="headerlink" title="基本技能"></a>基本技能</h2><p>这些是每个黑客在尝试破解之前应该知道的基础知识。一旦掌握了本节中的所有内容，就可以进入中间层。</p><h3 id="基本的计算机技能"><a href="#基本的计算机技能" class="headerlink" title="基本的计算机技能"></a>基本的计算机技能</h3><p>不用说，要成为一名黑客，你需要一些基本的计算机技能。这些技能超出了创建Word文档或浏览Internet的能力。你需要能够在Windows中使用命令行，编辑注册表以及设置网络参数。</p><p>许多这些基本技能可以在像A+这样的基础计算机技能课程中获得。</p><h3 id="网络技能"><a href="#网络技能" class="headerlink" title="网络技能"></a>网络技能</h3><p>你需要了解网络的基础知识，例如以下内容。</p><ul><li>DHCP</li><li>NAT</li><li>子网划分</li><li>IPv4</li><li>IPv6</li><li>公有和私有IP</li><li>DNS</li><li>路由器和交换机</li><li>VLANs</li><li>OSI模型</li><li>MAC寻址</li><li>ARP</li></ul><p>由于我们经常利用这些技术，你越了解它们的工作方式，你就会越成功。请注意，我没有编写下面的两个指南，但它们非常有用，并涵盖了上面提到的一些网络基础知识。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hacker-fundamentals-tale-two-standards-0133727/" target="_blank" rel="noopener">黑客基础：两个标准的故事</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hacker-fundamentals-everymans-guide-network-packets-are-routed-across-web-0134491/" target="_blank" rel="noopener">一般人的网络数据包路由指南</a></li></ul><h3 id="Linux技能"><a href="#Linux技能" class="headerlink" title="Linux技能"></a>Linux技能</h3><p>发展Linux技能对于成为黑客是非常关键的。我们用作黑客的几乎所有工具都是为Linux开发的，Linux为我们提供了使用Windows时没有的功能。</p><p>如果你需要提高你的Linux技能，或者你刚开始使用Linux，请查看下面我的Linux初学者系列。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/linux-basics/" target="_blank" rel="noopener">针对有抱负的黑客的Linux基础知识</a></li></ul><h3 id="Wireshark或Tcpdump"><a href="#Wireshark或Tcpdump" class="headerlink" title="Wireshark或Tcpdump"></a>Wireshark或Tcpdump</h3><p>Wireshark是使用最广泛的嗅探器/协议分析器，而tcpdump是命令行嗅探器/协议分析器。两者在分析TCP/IP流量和攻击方面都非常有用。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/spy-your-buddys-network-traffic-intro-wireshark-and-osi-model-0133807/" target="_blank" rel="noopener">Wireshark和OSI模型介绍</a></li><li><a href="https://null-byte.wonderhowto.com/news/8-wireshark-filters-every-wiretapper-uses-spy-web-conversations-and-surfing-habits-0134508/" target="_blank" rel="noopener">Wireshark过滤器</a></li></ul><h3 id="虚拟化"><a href="#虚拟化" class="headerlink" title="虚拟化"></a>虚拟化</h3><p>你需要熟练使用其中一个虚拟化软件包，如<a href="https://www.virtualbox.org/" target="_blank" rel="noopener">VirtualBox</a>或<a href="https://www.vmware.com/products/workstation-pro.html" target="_blank" rel="noopener">VMWare Workstation</a>。理想情况下，你需要一个安全的环境来练习你的黑客攻击行为，之后才能将它们带出现实世界。虚拟环境为你提供了一个安全的环境，可以在使用它们之前测试和优化你的黑客攻击。</p><h3 id="安全概念与技术"><a href="#安全概念与技术" class="headerlink" title="安全概念与技术"></a>安全概念与技术</h3><p>优秀的黑客了解安全概念和技术。克服安全管理员建立的障碍的唯一方法是熟悉它们。黑客必须了解诸如PKI（公钥基础架构），SSL（安全套接层），IDS（入侵检测系统），防火墙等等。</p><p>黑客初学者可以在Security+等基本安全课程中获得许多这些技能。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/snort/" target="_blank" rel="noopener">如何读写Snort规则来躲避IDS</a></li></ul><h3 id="无线技术"><a href="#无线技术" class="headerlink" title="无线技术"></a>无线技术</h3><p>为了能够破解无线，你必须首先了解它的工作原理。诸如加密算法（WEP，WPA，WPA2），四次握手和WPS之类的东西。此外，理解诸如连接和认证协议以及无线技术的法律约束等。</p><p>要开始学习，请查看以下有关无线术语和技术入门的指南，然后阅读我们的Wi-Fi黑客指南集，了解有关各种加密算法的详细信息以及每种黑客如何工作的示例。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-wi-fi-getting-started-with-terms-technologies-0147659/" target="_blank" rel="noopener">Wi-Fi术语和技术入门</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/wi-fi-hacking/" target="_blank" rel="noopener">有抱负的黑客入侵Wi-Fi指南</a></li></ul><h2 id="中级技能"><a href="#中级技能" class="headerlink" title="中级技能"></a>中级技能</h2><p>这是事情变得有趣的地方，你真正开始感受到你作为黑客的能力。知道所有这些将允许你进入更直观的黑客攻击所有镜头 - 而不是其他一些黑客。</p><h3 id="编写脚本"><a href="#编写脚本" class="headerlink" title="编写脚本"></a>编写脚本</h3><p>如果没有<a href="https://null-byte.wonderhowto.com/how-to/scripting/" target="_blank" rel="noopener">编写脚本的技能</a>，黑客将被降级为使用其他黑客工具。这限制了你的效率。每天都会有一个新工具失效，因为安全管理员提出了防御措施。</p><p>要开发自己独特的工具，你需要至少熟练掌握一种脚本语言，包括BASH shell。这些应该包括Perl，Python或Ruby之一。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-perl-scripting-for-aspiring-hacker-part-1-0151750/" target="_blank" rel="noopener">针对有抱负的黑客的Perl脚本</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-scripting-for-aspiring-hacker-part-1-bash-basics-0149422/" target="_blank" rel="noopener">为有抱负的黑客编写脚本，第1部分：BASH基础知识</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-scripting-for-aspiring-hacker-part-2-conditional-statements-0149695/" target="_blank" rel="noopener">为有抱负的黑客编写脚本，第2部分：条件语句</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-scripting-for-aspiring-hacker-part-3-windows-powershell-0151075/" target="_blank" rel="noopener">为有抱负的黑客编写脚本，第3部分：Windows PowerShell</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-ultimate-list-hacking-scripts-for-metasploits-meterpreter-0149339/" target="_blank" rel="noopener">Metasploit中Meterpreter的黑客脚本终极列表</a></li></ul><h3 id="数据库技能"><a href="#数据库技能" class="headerlink" title="数据库技能"></a>数据库技能</h3><p>如果你希望能够熟练地<a href="https://null-byte.wonderhowto.com/how-to/db-hacking/" target="_blank" rel="noopener">破解数据库</a>，则需要了解数据库及其工作原理。这包括SQL语言。我还建议掌握一个主要的DBMS，如SQL Server，Oracle或MySQL。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-databases-terms-technologies-you-need-know-before-getting-started-0148773/" target="_blank" rel="noopener">入门前需要了解的术语和技术</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-databases-hunting-for-microsofts-sql-server-0148993/" target="_blank" rel="noopener">寻找微软的SQL Server</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-databases-cracking-sql-server-passwords-owning-server-0149636/" target="_blank" rel="noopener">破解SQL Server密码并拥有服务器</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-databases-hacking-mysql-online-databases-with-sqlmap-0150368/" target="_blank" rel="noopener">使用Sqlmap攻击MySQL在线数据库</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-databases-extracting-data-from-online-databases-using-sqlmap-0150688/" target="_blank" rel="noopener">使用Sqlmap从在线数据库中提取数据</a></li></ul><h3 id="Web应用程序"><a href="#Web应用程序" class="headerlink" title="Web应用程序"></a>Web应用程序</h3><p>Web应用程序可能是近年来黑客最肥沃的土壤。你对Web应用程序如何工作以及它们背后的数据库了解得越多，你就会越成功。此外，你可能需要建立自己的网站以进行网络钓鱼和其他恶意目的。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-clone-any-website-using-httrack-0152420/" target="_blank" rel="noopener">如何使用HTTrack克隆任何网站</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-spoof-dns-lan-redirect-traffic-your-fake-website-0151620/" target="_blank" rel="noopener">如何将流量重定向到假网站</a></li></ul><h3 id="取证"><a href="#取证" class="headerlink" title="取证"></a>取证</h3><p>要成为好黑客，一定不要被抓住！你不能成为一名坐在牢房里5年的职业黑客。你对数字取证的了解越多，就越能避免和规避检测。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-digital-forensics-for-aspiring-hacker-part-1-tools-techniques-0149732/" target="_blank" rel="noopener">数字取证，第1部分：工具和技术</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-digital-forensics-for-aspiring-hacker-part-2-network-forensics-0149958/" target="_blank" rel="noopener">数字取证，第2部分：网络取证</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-digital-forensics-for-aspiring-hacker-part-3-recovering-deleted-files-0149868/" target="_blank" rel="noopener">数字取证，第3部分：恢复已删除的文件</a></li><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-digital-forensics-for-aspiring-hacker-part-4-evading-detection-while-dosing-0150445/" target="_blank" rel="noopener">数字取证，第4部分：DoSing时的逃避检测</a></li></ul><h3 id="高级TCP-IP"><a href="#高级TCP-IP" class="headerlink" title="高级TCP/IP"></a>高级TCP/IP</h3><p>黑客初学者必须了解TCP/IP基础知识，但要升级到中级，你必须了解TCP/IP协议栈和字段的详细信息。这些包括TCP和IP数据包中的每个字段（flags，window，df，tos，seq，ack等）如何被操纵并用于对抗受害者系统以启用中间人攻击等。</p><h3 id="加密"><a href="#加密" class="headerlink" title="加密"></a>加密</h3><p>虽然要成为一个好的黑客不需要成为一个密码学家，但是你越了解每种密码算法的优缺点，就越有可能打败它。此外，黑客还可以利用密码学来隐藏他们的活动并逃避检测。</p><h3 id="逆向工程"><a href="#逆向工程" class="headerlink" title="逆向工程"></a>逆向工程</h3><p>通过逆向工程，你可以打开一个恶意软件并使用其他功能重新构建它。就像在软件工程中一样，没有人从头开始构建新的应用程序。几乎每个新漏洞或恶意软件都使用其他现有恶意软件中的组件。</p><p>此外，逆向工程使黑客能够利用现有漏洞并更改其签名，以便它可以绕过IDS和<a href="https://null-byte.wonderhowto.com/how-to/evading-av-software/" target="_blank" rel="noopener">防病毒检测</a>。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-change-signature-metasploit-payloads-evade-antivirus-detection-0149867/" target="_blank" rel="noopener">如何更改Metasploit有效载荷签名以避免防病毒检测</a></li></ul><h2 id="无形技能"><a href="#无形技能" class="headerlink" title="无形技能"></a>无形技能</h2><p>除了所有这些计算机技能外，成功的黑客还必须具备一些无形技能。这些包括以下内容。</p><h3 id="创造性地思考"><a href="#创造性地思考" class="headerlink" title="创造性地思考"></a>创造性地思考</h3><p>黑客攻击系统总是有办法的，而且有很多方法可以实现。一个好的黑客可以创造性地思考同一个黑客的多种方法。</p><ul><li><a href="https://null-byte.wonderhowto.com/how-to/social-engineering/" target="_blank" rel="noopener">Null Byte的社会工程学指南</a></li><li><a href="https://null-byte.wonderhowto.com/forum/cryptolocker-innovative-creative-hack-0151753/" target="_blank" rel="noopener">CryptoLocker：一个创新和创造性的黑客</a></li></ul><h3 id="解决问题的能力"><a href="#解决问题的能力" class="headerlink" title="解决问题的能力"></a>解决问题的能力</h3><p>黑客总是遇到看似无法解决的问题。这就要求黑客习惯于分析性思维和解决问题。这通常要求黑客准确地诊断出问题所在，然后将问题分解为不同的组件。这是伴随着许多小时的练习而来的能力之一。</p><ul><li><a href="https://null-byte.wonderhowto.com/forum/problem-solving-is-essential-hacker-skill-0150882/" target="_blank" rel="noopener">解决问题是一项必不可少的黑客技能</a></li></ul><h3 id="坚持"><a href="#坚持" class="headerlink" title="坚持"></a>坚持</h3><p>黑客必须坚持不懈。如果你一开始失败了，请再试一次。如果再失败，请提出一种新的方法并重试。只有坚持不懈，你才能破解最安全的系统。</p><ul><li><a href="https://null-byte.wonderhowto.com/forum/so-you-want-be-hacker-0148983/" target="_blank" rel="noopener">那么……你想成为黑客吗？</a></li></ul><p>我希望这能给你一些指导，让你了解你需要学习和掌握什么，才能提升到黑客的中级水平。在未来的一篇文章中，我将讨论你需要掌握什么才能提升到高级或大师级的黑客，所以请记着回来，我的新手黑客们！</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/essential-skills-becoming-master-hacker-0154509/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://null-byte.wonderhowto.com/how-to/essential-skills-becoming-master-hacker-0154509/&lt;/a&gt; ，正文如下：&lt;/p&gt;
&lt;p&gt;我的许多有抱负的黑客写信给我，都问同样的问题。“我需要什么技能才能成为一个好的黑客？”&lt;/p&gt;
&lt;p&gt;由于黑客是最熟练的信息技术学科之一，因此需要广泛的IT技术和技术知识。要真正成为一名优秀的黑客，必须掌握许多技能。如果你没有我在此列出的所有技能，请不要气馁，可以将此列表作为你在不久的将来学习和掌握所需内容的起点。&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://howiezhao.github.io/categories/Translation/"/>
    
    
  </entry>
  
  <entry>
    <title>白帽子VPS选购指南</title>
    <link href="https://howiezhao.github.io/2019/02/25/whitehat-vps/"/>
    <id>https://howiezhao.github.io/2019/02/25/whitehat-vps/</id>
    <published>2019-02-25T10:17:38.000Z</published>
    <updated>2019-02-25T10:22:43.658Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自<a href="https://null-byte.wonderhowto.com/how-to/white-hats-guide-choosing-virtual-private-server-0183135/" target="_blank" rel="noopener">https://null-byte.wonderhowto.com/how-to/white-hats-guide-choosing-virtual-private-server-0183135/</a> ，正文如下：</p><p>从受信任的VPS进行网络钓鱼活动和托管Metasploit会话对于任何专业安全研究人员，渗透测试人员或白帽黑客都很重要。但是，可供选择的VPS非常有限，因为大多数提供商对任何类型的黑客都有零容忍政策，无论好坏。在研究了数十种产品之后，我们选出了5个理想的产品，非常适合Null Byte读者。<br><a id="more"></a><br>首先要理解的事情是……什么是VPS？嗯，它代表虚拟专用服务器，是许多用户认为的专用或私有服务器的虚拟化形式，即使它安装在同时运行多个操作系统的物理计算机上。VPS最常用于在线托管网站。</p><p>当我们从提供商处购买VPS时，我们实际上是在一个有着许多虚拟服务器的功能强大的高性能物理机器上“租用”一个分区。每个VPS都连接到互联网，使个人客户能够使用不同的操作系统，并提供对操作系统的完全root访问权限。每个客户（或服务器管理员）独立于共享VPS公司提供的物理计算机上的其他客户运营。</p><ul><li>不要错过：<a href="https://null-byte.wonderhowto.com/news/what-is-white-hat-hacker-0166878/" target="_blank" rel="noopener">什么是白帽黑客？</a></li></ul><p>从本质上讲，虚拟专用服务器是我们可以从世界上任何连接互联网的设备远程控制的计算机。这给了我们很大的能力。对于远程服务器而言，下面是它可以完成的一些事情：</p><ul><li>创建VPN连接</li><li>托管网络钓鱼站点</li><li>进行暴力攻击</li><li>创建IRC机器人</li><li>服务器代理</li><li>托管有效载荷</li><li>使用端口扫描器</li><li>创建蜜罐</li><li>托管Metasploit会话</li></ul><p>为了做到这一点，从我们的研究来看，<a href="https://bulletshield.su/" target="_blank" rel="noopener">BulletShield</a>是迄今为止最好的白帽和渗透测试人员的VPS提供商，紧随其后的是<a href="https://buyvm.net/" target="_blank" rel="noopener">BuyVM</a>和<a href="https://www.clientvps.com/" target="_blank" rel="noopener">ClientVPS</a>。亚军是<a href="https://vpsdime.com/" target="_blank" rel="noopener">VPSDime</a>和<a href="https://onehostcloud.hosting/" target="_blank" rel="noopener">OneHost Cloud</a>。你可以在下面的图表中看到原因，但跳到下面可以深入研究每个比较点的含义。<br><img src="https://img.wonderhowto.com/img/36/31/63655508941243/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="图表"></p><h2 id="关键比较点"><a href="#关键比较点" class="headerlink" title="关键比较点"></a>关键比较点</h2><p>网上有几个VPS对比图表，但没有一个对我来说是与渗透测试人员和白帽子有所联系的。在大多数专业的渗透测试场景中，我们需要在几天内启动VPS来托管有效载荷，接收泄漏数据或执行网络钓鱼攻击。</p><p>无论VPS提供商是否提供实时技术支持，难以理解的硬件规格或过多的操作系统选择都很重要。理想情况下，我们希望使用比特币（BTC）从位于尊重隐私的国家的VPS提供商处快速购买最新的Debian版本。</p><p>在比较本文中介绍的VPS提供商时，我试图尽可能客观公正。本文中没有VPS提供商付费参与比较图表。我使用下面的标准来得出上面的图表。</p><ul><li>不要错过：<a href="https://smartphones.gadgethacks.com/how-to/binance-101-sell-your-stellar-ripple-other-alt-coins-for-bitcoin-ethereum-0182373/" target="_blank" rel="noopener">如何在比特币和以太坊中出售你的Stellar，Ripple和其他替代币？</a></li></ul><h3 id="最好的价钱（Best-Price）"><a href="#最好的价钱（Best-Price）" class="headerlink" title="最好的价钱（Best Price）"></a>最好的价钱（Best Price）</h3><p>我相信定价透明度。这意味着提供商完全诚实地说他们的月费是多少。我的图表中列出的价格可能并不总是反映出给定提供商在主页上公布的价格。我的图表中的价格是计算所有强制性和隐藏费用后的结账价格。这些也是我在网站上找到的最便宜的VPS计划的价格。在大多数情况下，这通常有着512 MB的RAM和1个CPU内核。</p><h3 id="渗透测试人员友好型（Pentester-Friendly）"><a href="#渗透测试人员友好型（Pentester-Friendly）" class="headerlink" title="渗透测试人员友好型（Pentester-Friendly）"></a>渗透测试人员友好型（Pentester-Friendly）</h3><p>服务条款（ToS）和可接受的使用政策（AUP）可能是进入此比较图表的最高优先项。虽然最初考虑了数十个VPS提供商，但大多数明确禁止或阻止端口扫描器，有效载荷分发，网络钓鱼和（或）任何类型的黑客攻击。除了少数例外，这会立即取消VPS提供商在比较图表中的资格。</p><p>IT专业人员，安全研究人员和自学成才的白帽黑客在远程服务器上做了大量工作。对我来说很重要的是，这里的VPS提供商保留了最符合Null Byte受众需求的ToS政策。我的图表中的VPS提供商是少数几个没有完全敌视“黑客攻击”的ToS政策的提供商。</p><p>那些被认为是对渗透测试人员友好的提供商并没有在他们的ToS中明确声明允许“黑客攻击”（或任何相关术语）。没有一个VPS提供商会这样做。大多数这些提供商要么没有提及他们的ToS中的黑客攻击，要么他们的网站上根本没有提供ToS。这被认为表明黑客攻击活动非常不受欢迎，但可能不会导致帐户终止。</p><h3 id="请求个人信息（Requests-Personal-Info）"><a href="#请求个人信息（Requests-Personal-Info）" class="headerlink" title="请求个人信息（Requests Personal Info）"></a>请求个人信息（Requests Personal Info）</h3><p>向任何网站提交我们的真实姓名，地址，电话号码和其他个人身份信息都是不可取的。即使匿名不是你的首要任务，VPS提供商仍有一天可能会受到攻击，并且所有客户数据都会在网上泄露。</p><p>购买VPS订阅是理想的匿名完成，因为没有人知道我们在研究或渗透测试期间会遇到什么麻烦。对于你购买的服务器上发生的事情，有朝一日可能会对VPS提供商采取法律行动，因此最好将有关你自己的少量信息存储在提供商的客户数据库中。</p><p>在大多数情况下，我发现在注册期间可以提交一个完全虚假的姓名，地址和电话号码，但我并不认为这是提供商的“好功能”。向任何合法公司提交虚假信息几乎肯定会违反提供商的服务条款并导致帐户立即终止。</p><p>VPS提供商要求的电子邮件地址不属于“个人信息”，因为匿名获取一次性电子邮件地址很容易。毕竟VPS提供商需要建立与客户沟通的有效方法。</p><h3 id="接受比特币付款（Accepts-BTC-Payments）"><a href="#接受比特币付款（Accepts-BTC-Payments）" class="headerlink" title="接受比特币付款（Accepts BTC Payments）"></a>接受比特币付款（Accepts BTC Payments）</h3><p>如果获得比特币（BTC）不是障碍，这可能是你的首选付款方式。目前大多数提供商都接受比特币，但使用匿名加密货币的好处大部分都被VPS提供商对个人身份信息的请求所抵消。我发现使用比特币进行在线购物比使用信用卡更快更方便。</p><h3 id="接受预付信用卡（Accepts-Prepaid-Credit-Cards）"><a href="#接受预付信用卡（Accepts-Prepaid-Credit-Cards）" class="headerlink" title="接受预付信用卡（Accepts Prepaid Credit Cards）"></a>接受预付信用卡（Accepts Prepaid Credit Cards）</h3><p>获取比特币进行匿名交易可能很困难。用现金购买<a href="https://null-byte.wonderhowto.com/how-to/securely-anonymously-spend-money-online-0131351/" target="_blank" rel="noopener">预付卡或一次性借记卡</a>可能更方便。如果没有使用预付借记卡实际提交付款，很难验证这一点。在大多数情况下，我能够联系客户服务代表，并从他们那里获得有关使用预付卡进行交易的直接答复。</p><h3 id="Tor友好型网站（Tor-Friendly-Website）"><a href="#Tor友好型网站（Tor-Friendly-Website）" class="headerlink" title="Tor友好型网站（Tor-Friendly Website）"></a>Tor友好型网站（Tor-Friendly Website）</h3><p>如果你通过安全的VPN连接使用信用卡进行在线购买或通过Tor匿名进行在线购买，VPS提供商有时会暂停你的帐户。联系客户支持并解决暂停可能需要数天时间。</p><p>我使用同一个常用的Firefox浏览器通过Tor浏览了每个站点。要求访问者填写验证码以查看其网站或处理结帐的提供商被标记为对希望保持匿名的用户不友好。这并不意味着可以通过Tor进行事务处理。在查看这些网站时，我只尽可能地进入结账过程，而不实际提交付款。</p><ul><li>不要错过：<a href="https://null-byte.wonderhowto.com/how-to/access-dark-web-while-staying-anonymous-with-tor-0179341/" target="_blank" rel="noopener">如何使用Tor匿名的访问暗网？</a></li></ul><h3 id="公司总部所在国（Company-HQ’s-Country）"><a href="#公司总部所在国（Company-HQ’s-Country）" class="headerlink" title="公司总部所在国（Company HQ’s Country）"></a>公司总部所在国（Company HQ’s Country）</h3><p>认为提供安全加密交易的公司将与当局充分<a href="https://www.theregister.co.uk/2011/09/26/hidemyass_lulzsec_controversy/" target="_blank" rel="noopener">合作以捕获黑客</a>并不是不切实际的。VPS的IP地址是否来自尊重隐私的国家并不总是重要的。如果向你提供VPS的公司位于美国或英国，他们很可能会毫不犹豫地将你的个人信息交给任何权威人士。</p><p>进一步涉及隐私问题，<a href="https://zh.wikipedia.org/wiki/%E8%8B%B1%E7%BE%8E%E5%8D%94%E5%AE%9A" target="_blank" rel="noopener">UKUSA协议</a>是英国，美国，澳大利亚，加拿大和新西兰之间的协议，旨在合作收集，分析和共享情报。这个群体的成员被称为<a href="https://zh.wikipedia.org/wiki/%E4%BA%94%E7%9C%BC%E8%81%AF%E7%9B%9F" target="_blank" rel="noopener">五眼联盟</a>。这些国家因拥有侵犯隐私的法律和政策而臭名昭著。</p><p>在最尊重隐私的国家选择VPS提供商可能不是最优先考虑的问题，但至少考虑具有<a href="https://nomadcapitalist.com/2013/12/15/top-5-best-countries-host-website-data-privacy/" target="_blank" rel="noopener">良好隐私法律的国家</a>的提供商是有意义的。</p><h3 id="离岸解决方案（Offshore-Solutions）"><a href="#离岸解决方案（Offshore-Solutions）" class="headerlink" title="离岸解决方案（Offshore Solutions）"></a>离岸解决方案（Offshore Solutions）</h3><p>“离岸VPS”意味着服务器位于公司的国家边界位置之外，并且可能允许一定程度的自由裁量权。这对你作为渗透测试人员以及你受委托保护的公司非常重要，因为你可能会收到不应共享或泄露的妥协和敏感信息。我们鼓励读者独立询问VPS提供商，以确定他们的离岸解决方案是否适合你。</p><p>提供商指出，提供离岸解决方案通常要付出一定的代价。不应该假设他们最便宜的VPS解决方案也是其离岸选项的价格。</p><h2 id="1、BulletShield"><a href="#1、BulletShield" class="headerlink" title="1、BulletShield"></a>1、BulletShield</h2><p><a href="https://bulletshield.su/" target="_blank" rel="noopener">BulletShield</a>是我的首选，是Null Byte读者的最佳VPS提供商。BulletShield在注册账户或准备提交比特币交易时不要求任何类型的个人信息。他们还强制要求比特币交易，并且没有明确禁止任何渗透测试活动的ToS。<br><img src="https://img.wonderhowto.com/img/36/93/63655505111133/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="BulletShield"><br>缺点是他们不接受预付信用卡，最便宜的价格有点贵，但如果你重视隐私，价格不一定是主要考虑因素。</p><p>在涉及公司总部时，BulletShield不会透露这些信息。快速域名搜索显示，它是由加拿大公司Tucows Domains Inc.购买的，是从位于西印度群岛偏远岛屿的Charlestown购买的。但是，这并不意味着这就是BulletShield的总部所在地，这只是域名注册商BulletShield使用注册域名的地方。</p><p>他们提供离岸解决方案和Tor友好型网站，使BulletShield整体处于领先地位。但是，一位客户服务代表向我提到“渗透测试”是“仅允许……防弹服务”，这可能是成本方面的问题。</p><ul><li>ToS：无可用</li><li>AUP：无可用</li><li>隐私：无可用</li></ul><h2 id="2、BuyVM"><a href="#2、BuyVM" class="headerlink" title="2、BuyVM"></a>2、BuyVM</h2><p><a href="https://buyvm.net/" target="_blank" rel="noopener">BuyVM</a>是允许合法渗透测试的亚军，如果公司或相关人员给出明确和合法的书面同意。一位代表证实了这一点，他们说“他们需要一份来自法律团队的完整文件，代表有关目标的授权书”。<br><img src="https://img.wonderhowto.com/img/33/95/63655505142883/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="BuyVM"><br>他们的起价确实提升了他们的排名，VPS解决方案每月只需2.42美元。但是，他们确实要求你提供个人信息，并且为了注册帐户，“帐户详细信息必须与付款方式提供的信息相符”，这可能意味着匿名预付卡将无法使用。不过，比特币是可以被接受的。</p><p>虽然他们确实有一个Tor友好的网站，但他们总部设在加拿大，并不提供离岸解决方案，这可能是负面的，取决于你使用VPS的目的。</p><ul><li>ToS：<a href="https://buyvm.net/terms-of-service/" target="_blank" rel="noopener">链接</a></li><li>AUP：<a href="https://buyvm.net/acceptable-use-policy/" target="_blank" rel="noopener">链接</a></li><li>隐私：<a href="https://buyvm.net/privacy-policy/" target="_blank" rel="noopener">链接</a></li></ul><h2 id="3、ClientVPS"><a href="#3、ClientVPS" class="headerlink" title="3、ClientVPS"></a>3、ClientVPS</h2><p><a href="https://www.clientvps.com/" target="_blank" rel="noopener">ClientVPS</a>有一个ToS，即你所执行的任何导致对人身或财产“受到伤害”，侵犯版权等的行为都要你自己承担全部责任。<br><img src="https://img.wonderhowto.com/img/69/58/63655505152117/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="ClientVPS"><br>总的来说，他们的价格是最昂贵的，但亮点包括接受比特币（预付Visa尚卡不清楚），拥有Tor友好的网站，总部设在俄罗斯（信息请求经常被忽略），并提供离岸解决方案，所有这些都巩固了其目前在排名中的地位。</p><p>除了高昂的价格外，其他缺点包括他们缺乏有关合法渗透测试的信息（他们没有回复我的询问），他们确实要求你提供个人数据。</p><ul><li>ToS：<a href="https://www.clientvps.com/terms-of-service" target="_blank" rel="noopener">链接</a></li><li>AUP：无公开链接</li><li>隐私：<a href="https://www.clientvps.com/privacy-policy" target="_blank" rel="noopener">链接</a></li></ul><h2 id="4、VPSDime"><a href="#4、VPSDime" class="headerlink" title="4、VPSDime"></a>4、VPSDime</h2><p><a href="https://vpsdime.com/" target="_blank" rel="noopener">VPSDime</a>不是一个非常理想的选择，因为它们没有比特币支付选项，不允许客户匿名查看他们的网站，也没有任何离岸VPS解决方案。但是，他们的ToS只是明确禁止“端口扫描”。他们没有提及渗透测试，漏洞扫描，网络钓鱼或其他常见的渗透活动。<br><img src="https://img.wonderhowto.com/img/00/36/63655505163524/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="VPSDime"><br>当询问澄清他们的合法渗透测试政策时，他们没有回复我的电子邮件。他们的ToS太模糊了，我无法确定是否允许这样的（合法）活动。出于这个原因，我建议读者在使用他们的服务之前联系VPSDime澄清。</p><p>虽然VPSDime没有明显的好处，但它们是最便宜的选择之一。</p><ul><li>ToS：<a href="https://vpsdime.com/tos.html" target="_blank" rel="noopener">链接</a></li><li>AUP：<a href="https://vpsdime.com/aup.html" target="_blank" rel="noopener">链接</a></li><li>隐私：<a href="https://vpsdime.com/privacy.html" target="_blank" rel="noopener">链接</a></li></ul><h2 id="5、OneHost-Cloud"><a href="#5、OneHost-Cloud" class="headerlink" title="5、OneHost Cloud"></a>5、OneHost Cloud</h2><p><a href="https://onehostcloud.hosting/" target="_blank" rel="noopener">OneHost Cloud</a>是我能找到的唯一提供Kali Linux VPS和渗透测试解决方案的VPS提供商。他们的价格仅为每月6.59美元，这是该提供商的另一个主要好处，并且他们接受比特币付款。<br><img src="https://img.wonderhowto.com/img/55/35/63655505173336/0/white-hats-guide-choosing-virtual-private-server.w1456.jpg" alt="OneHost Cloud"><br>对于那些不打算在未经同意的情况下非法扫描网站或入侵实体的白帽子来说，OneHost Cloud<br>似乎是最佳选择。毕竟如果它们提供Kali解决方案但不允许合法的渗透测试，那么对于客户来说也会非常混乱。但是，当我询问合法渗透测试时，他们只是回答：</p><blockquote><p>来自此地址的所有未来电子邮件都将被阻止。</p></blockquote><p>这是在没有任何理由或解释的情况下发给我的。出于这个原因，OneHost Cloud排在最后，我建议读者在执行任何类型的渗透测试之前，独立地向OneHost Cloud询问他们的ToS策略。</p><p>该提供商的其他缺点是要求提供个人信息；位于英国伦敦；没有匿名网站；并且缺乏有关离岸解决方案和预付卡的信息。</p><ul><li>ToS：<a href="https://onehostcloud.hosting/legal/" target="_blank" rel="noopener">链接</a></li><li>AUP：无公开链接</li><li>隐私：<a href="https://onehostcloud.hosting/privacy-policy/" target="_blank" rel="noopener">链接</a></li></ul><h2 id="意见"><a href="#意见" class="headerlink" title="意见"></a>意见</h2><p>专业和独立渗透测试人员的选择是非常有限的。大多数VPS提供商都有检测系统，如果检测到任何类型的扫描，网络钓鱼或垃圾邮件，它们会自动暂停客户帐户。在我们的测试计划中，可能需要数天才能解决暂停并造成重大挫折。</p><p>选择愿意与我们合作以更好地保护公司网站的提供商是至关重要的。如果你是一个专业的渗透测试者，或者只是一个希望以安全和匿名的方式加强技能的新手黑客，那么选择最能满足你需求并获得乐趣的提供商。</p><ul><li>不要错过：<a href="https://null-byte.wonderhowto.com/how-to/hack-anyones-wi-fi-password-using-birthday-card-part-1-creating-payload-0183043/" target="_blank" rel="noopener">如何使用生日卡片破解任何人的Wi-Fi密码？</a></li></ul><h2 id="一些评论"><a href="#一些评论" class="headerlink" title="一些评论"></a>一些评论</h2><p>Pulkit Singhania：</p><blockquote><p>Cloudsigma实际上也是一个不错的选择。<br>  他们提供免费的vps，没有任何登录或任何注册的免费，但只有一个小时。<br>  我亲自尝试过，它提供2GB内存和50GB硬盘，最高可达25兆字节/秒的互联网流量。<br>  如果你使用公司电子邮件注册，则可免费试用7天</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/white-hats-guide-choosing-virtual-private-server-0183135/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://null-byte.wonderhowto.com/how-to/white-hats-guide-choosing-virtual-private-server-0183135/&lt;/a&gt; ，正文如下：&lt;/p&gt;
&lt;p&gt;从受信任的VPS进行网络钓鱼活动和托管Metasploit会话对于任何专业安全研究人员，渗透测试人员或白帽黑客都很重要。但是，可供选择的VPS非常有限，因为大多数提供商对任何类型的黑客都有零容忍政策，无论好坏。在研究了数十种产品之后，我们选出了5个理想的产品，非常适合Null Byte读者。&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://howiezhao.github.io/categories/Translation/"/>
    
    
  </entry>
  
  <entry>
    <title>安装Kali Linux后要做的10件事</title>
    <link href="https://howiezhao.github.io/2019/02/25/after-kali/"/>
    <id>https://howiezhao.github.io/2019/02/25/after-kali/</id>
    <published>2019-02-25T09:45:28.000Z</published>
    <updated>2019-02-25T10:01:50.552Z</updated>
    
    <content type="html"><![CDATA[<p>本文翻译自<a href="https://null-byte.wonderhowto.com/how-to/top-10-things-do-after-installing-kali-linux-0186450/" target="_blank" rel="noopener">https://null-byte.wonderhowto.com/how-to/top-10-things-do-after-installing-kali-linux-0186450/</a> ，正文如下：</p><p>默认情况下，对于完成日常的渗透测试，<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-getting-started-with-kali-your-new-hacking-system-0151631/" target="_blank" rel="noopener">Kali Linux</a>可能没有你所需的一切。但通过一些提示，技巧和应用程序，我们可以像专业的白帽子一样快速开始使用Kali。</p><p>大多数Linux发行版都是高度可定制的。这使得个性化你的渗透测试发行版有点令人生畏。只需几个命令，我们就可以自动执行任务，安装我们喜欢的软件，创建其他用户帐户，正确配置匿名软件，以及优化我们与终端的互动。我们可以采取一些措施来改善与操作系统的交互。<br><a id="more"></a><br><div class="video-container"><iframe src="//www.youtube.com/embed/8VL0K0rFgxw" frameborder="0" allowfullscreen></iframe></div></p><h2 id="1、安装Git"><a href="#1、安装Git" class="headerlink" title="1、安装Git"></a>1、安装Git</h2><p><a href="https://git-scm.com/" target="_blank" rel="noopener">Git</a>是一个开源软件版本控制应用程序。它可以用于协作共享和编辑代码，但在Null Byte中通常被引用作为复制（或“<a href="https://www.git-scm.com/docs/git-clone" target="_blank" rel="noopener">克隆</a>”）GitHub上的代码存储库的主要工具。Git是渗透测试人员必备的工具，他们希望将自己的工具集扩展到默认Kali存储库中可用的工具集之外。</p><p>可以使用下面的<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-linux-basics-for-aspiring-hacker-part-5-installing-new-software-0147591/" target="_blank" rel="noopener">apt-get</a>命令安装Git。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-get install git</span><br></pre></td></tr></table></figure></p><h2 id="2、配置Bash别名"><a href="#2、配置Bash别名" class="headerlink" title="2、配置Bash别名"></a>2、配置Bash别名</h2><p>Bash别名非常适合创建自定义命令行快捷方式。例如，我们可以重新分配<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-linux-basics-for-aspiring-hacker-part-2-creating-directories-files-0147234/" target="_blank" rel="noopener">ls</a>命令以自动使用我们最喜欢的参数。下面是正常<strong>ls</strong>输出的示例。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"></span><br><span class="line"> androidbins.txt                                      folder-pictures.png     smtp.cracked         text-x-generic.png</span><br><span class="line"> bogus_gmail.creds                                    folder.png              smtp.list            Windows-10</span><br><span class="line"> dumpzilla-b3075d1960874ce82ea76a5be9f58602afb61c39   package-x-generic.png   text-x-generic.ico  &apos;Windows 10 Icons&apos;</span><br></pre></td></tr></table></figure></p><p>在创建<strong>ls</strong>别名后再次输出的示例。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">ls</span><br><span class="line"></span><br><span class="line">total 220K</span><br><span class="line">-rw-------  1 root root  15K Aug 24  2015  folder-pictures.png</span><br><span class="line">-rw-------  1 root root 8.7K Aug 24  2015  folder.png</span><br><span class="line">-rw-------  1 root root  11K Aug 24  2015  package-x-generic.png</span><br><span class="line">-rw-------  1 root root 5.5K Sep  3  2015  text-x-generic.png</span><br><span class="line">drwxr-xr-x 12 root root 4.0K May 31 00:44 &apos;Windows 10 Icons&apos;/</span><br><span class="line">drwxr-xr-x 18 root root 4.0K May 31 00:44  Windows-10/</span><br><span class="line">-rwxr-x---  1 root root 103K May 31 00:49  text-x-generic.ico*</span><br><span class="line">drwxr-xr-x  5 root root 4.0K Jun 11 21:57  dumpzilla-b3075d1960874ce82ea76a5be9f58602afb61c39/</span><br><span class="line">-rw-r--r--  1 root root   52 Jul  5 18:13  bogus_gmail.creds</span><br><span class="line">-rw-r--r--  1 root root  15K Jul  5 18:28  smtp.list</span><br><span class="line">-rw-r--r--  1 root root  181 Jul  5 18:43  smtp.cracked</span><br><span class="line">-rw-r--r--  1 root root  23K Jul 23 18:18  androidbins.txt</span><br><span class="line">drwxr-xr-x  5 root root 4.0K Jul 23 19:22  ./</span><br><span class="line">drwxr-xr-x 23 root root 4.0K Aug  9 04:25  ../</span><br></pre></td></tr></table></figure></p><p>我们得到了更详细的输出。<strong>ls</strong>命令现在自动使用<strong>-l</strong>，<strong>-a</strong>，<strong>-t</strong>，<strong>-h</strong>和<strong>-r</strong>参数。所有这些参数都将指示<strong>ls</strong>使用列表（<strong>-l</strong>）格式，列出所有（<strong>-a</strong>）文件——包括隐藏文件——并以人类可读（<strong>-h</strong>）的格式打印文件大小（例如，1K，234M，5G）。</p><p>我的别名还将按修改时间（<strong>-t</strong>）对输出进行排序，并反转（<strong>-r</strong>）列表的顺序，以便最近修改的文件出现在终端的底部。这个参数集合是我个人的<strong>ls</strong>偏好，但你的可能会有所不同。</p><p>要创建别名，请使用<strong>nano</strong>或你喜欢的文本编辑器打开/root/.bash_aliases。添加以下行以创建别名。</p><ul><li>不要错过：<a href="https://null-byte.wonderhowto.com/how-to/intro-vim-unix-text-editor-every-hacker-should-be-familiar-with-0174674/" target="_blank" rel="noopener">Vim简介，每个黑客都应该知道的Unix文本编辑器</a></li></ul><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alias ls=&apos;ls --color=always -rthla&apos;</span><br></pre></td></tr></table></figure><p>我们还可以进一步向.bash_aliases文件添加更复杂的函数。下面是一个简单的函数示例，旨在使Kali保持最新状态。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">function apt-updater &#123;</span><br><span class="line">    apt-get update &amp;&amp;</span><br><span class="line">    apt-get dist-upgrade -Vy &amp;&amp;</span><br><span class="line">    apt-get autoremove -y &amp;&amp;</span><br><span class="line">    apt-get autoclean &amp;&amp;</span><br><span class="line">    apt-get clean &amp;&amp;</span><br><span class="line">    reboot</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>保存对.bash_aliases文件所做的更改后，打开一个新终端以使更改生效。运行新创建的<strong>apt-updater</strong>函数将调用一系列<strong>apt-get</strong>命令，这些命令将自动更新和维护你的系统。如果先前的命令失败，＆符号（<strong>&amp;&amp;</strong>）确保该函数不会继续执行以下命令。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">apt-updater</span><br></pre></td></tr></table></figure></p><p>有关Bash别名的更多信息，请查看Kody的“<a href="https://null-byte.wonderhowto.com/how-to/mac-for-hackers-set-up-macos-system-for-wi-fi-packet-capturing-0186354/" target="_blank" rel="noopener">为Wi-Fi数据包捕获设置MacOS系统</a>”一文。</p><h2 id="3、创建一个新的低权限用户"><a href="#3、创建一个新的低权限用户" class="headerlink" title="3、创建一个新的低权限用户"></a>3、创建一个新的低权限用户</h2><p>许多应用程序（如Chromium浏览器和Tor浏览器）都不应该以root用户身份打开或使用。此类应用程序在很大程度上依赖于低级别权限来提供某种程度的安全性。某些用户为这些活动创建低特权用户帐户可能是有益的。</p><p>Takhion的“<a href="https://null-byte.wonderhowto.com/how-to/install-lock-down-kali-linux-for-safe-desktop-use-0184531/#jump-step2" target="_blank" rel="noopener">锁定Kali Linux以用于安全桌面使用</a>”一文中详细介绍了这一概念，因此请务必查看帮助。</p><h2 id="4、安装一个终端复用器"><a href="#4、安装一个终端复用器" class="headerlink" title="4、安装一个终端复用器"></a>4、安装一个终端复用器</h2><p>复用器是一种平铺终端仿真器，允许我们在一个窗口内打开多个终端会话。这样做的主要好处是能够立即看到我们所有打开的终端会话，而不是将窗口叠加在一起。以下是复用器示例。<br><img src="https://img.wonderhowto.com/img/10/19/63669458451029/0/top-10-things-do-after-installing-kali-linux.w1456.jpg" alt="复用器"><br>有许多值得注意的复用器。如上面的屏幕截图所示，<a href="https://github.com/gnunn1/tilix" target="_blank" rel="noopener">Tilix</a>是一个开源且可靠的选项。替代方案包括<a href="https://github.com/tmux/tmux/" target="_blank" rel="noopener">tmux</a>和<a href="https://savannah.gnu.org/projects/screen" target="_blank" rel="noopener">screen</a>。</p><p>Tilix可在Kali的APT存储库中使用，可以使用以下命令进行安装。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">apt-get install tilix</span><br><span class="line"></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">The following additional packages will be installed:</span><br><span class="line">  libgtkd-3-0 libphobos2-ldc-shared78 libvted-3-0 tilix-common</span><br><span class="line">Suggested packages:</span><br><span class="line">  python-nautilus</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  libgtkd-3-0 libphobos2-ldc-shared78 libvted-3-0 tilix tilix-common</span><br><span class="line">0 upgraded, 5 newly installed, 0 to remove and 466 not upgraded.</span><br><span class="line">Need to get 10.7 MB of archives.</span><br><span class="line">After this operation, 49.1 MB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br></pre></td></tr></table></figure></p><p>亚马逊推荐：<a href="https://www.amazon.cn/dp/B00BQTWC0U" target="_blank" rel="noopener">William E. Shotts Jr.撰写的“Linux命令行大全”</a></p><h2 id="5、安装你喜爱的黑客工具"><a href="#5、安装你喜爱的黑客工具" class="headerlink" title="5、安装你喜爱的黑客工具"></a>5、安装你喜爱的黑客工具</h2><p>某些版本的Kali面向极简主义的渗透测试者，他们不希望预先安装数百个黑客工具。这意味着我们必须手动安装我们喜欢的工具。我们使用的工具类型根据我们的技能和专业领域而有所不同，但以下是一些流行的黑客工具。</p><ul><li><a href="https://www.aircrack-ng.org/" target="_blank" rel="noopener">Aircrack-ng</a>：无线<a href="https://null-byte.wonderhowto.com/how-to/hack-wi-fi-getting-started-with-aircrack-ng-suite-wi-fi-hacking-tools-0147893/" target="_blank" rel="noopener">WEP/WPA破解实用程序</a>。</li><li><a href="https://beefproject.com/" target="_blank" rel="noopener">BeEF</a>：通过Web应用程序的浏览器<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-web-browsers-with-beef-0159961/" target="_blank" rel="noopener">漏洞利用框架</a>。</li><li><a href="https://portswigger.net/burp/" target="_blank" rel="noopener">Burp Suite</a>：专为<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-hack-web-apps-part-4-hacking-form-authentication-with-burp-suite-0163642/" target="_blank" rel="noopener">Web应用程序安全性</a>而设计的图形应用。</li><li><a href="https://github.com/vanhauser-thc/thc-hydra" target="_blank" rel="noopener">Hydra</a>：登录<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-crack-online-web-form-passwords-with-thc-hydra-burp-suite-0160643/" target="_blank" rel="noopener">密码暴力破解</a>实用程序。</li><li><a href="https://cirt.net/Nikto2" target="_blank" rel="noopener">Nikto</a>：Web<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-find-vulnerabilities-for-any-website-using-nikto-0151729/" target="_blank" rel="noopener">服务器安全扫描器</a>。</li><li><a href="https://www.paterva.com/web7/" target="_blank" rel="noopener">Maltego</a>：开源取证和情报收集。</li><li><a href="https://nmap.org/" target="_blank" rel="noopener">Nmap</a>：端口扫描器和<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-advanced-nmap-for-reconnaissance-0151619/" target="_blank" rel="noopener">网络映射器</a>。</li><li><a href="https://www.wireshark.org/download.html" target="_blank" rel="noopener">Wireshark</a>：用于<a href="https://null-byte.wonderhowto.com/news/8-wireshark-filters-every-wiretapper-uses-spy-web-conversations-and-surfing-habits-0134508/" target="_blank" rel="noopener">网络流量分析</a>的图形应用程序。</li></ul><p>可以使用以下命令安装这些工具。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line">apt-get install maltego metasploit-framework burpsuite wireshark aircrack-ng hydra nmap beef-xss nikto</span><br><span class="line"></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">hydra is already the newest version (8.6-1kali1).</span><br><span class="line"></span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  beef-xss binfmt-support burpsuite fastjar fonts-droid-fallback fonts-lato</span><br><span class="line">  fonts-noto-mono ghostscript gsfonts imagemagick imagemagick-6-common</span><br><span class="line">  imagemagick-6.q16 jarwrapper java-wrappers javascript-common libc-ares2</span><br><span class="line">  libcupsfilters1 libcupsimage2 libdjvulibre-text libdjvulibre21 libdouble-conversion1</span><br><span class="line">  libfftw3-double3 libgmp-dev libgmpxx4ldbl libgs9 libgs9-common libhttp-parser2.8</span><br><span class="line">  libijs-0.35 libilmbase23 libjbig2dec0 libjs-jquery libjs-jquery-easing</span><br><span class="line">  libjs-jquery-fancybox libjs-jquery-mousewheel libjs-jquery-ui libjs-source-map</span><br><span class="line">  libjs-uglify libjxr-tools libjxr0 liblqr-1-0 liblua5.2-0 libmagickcore-6.q16-6</span><br><span class="line">  libmagickcore-6.q16-6-extra libmagickwand-6.q16-6 libnetpbm10 libnl-route-3-200</span><br><span class="line">  libopenexr23 libpaper-utils libpaper1 libpcre2-16-0 libqt5core5a libqt5dbus5</span><br><span class="line">  libqt5gui5 libqt5multimedia5 libqt5multimedia5-plugins libqt5multimediagsttools5</span><br><span class="line">  libqt5multimediawidgets5 libqt5network5 libqt5opengl5 libqt5printsupport5 libqt5svg5</span><br><span class="line">  libqt5widgets5 libruby2.5 libsbc1 libsmi2ldbl libspandsp2 libssh-gcrypt-4 libuv1</span><br><span class="line">  libwhisker2-perl libwireshark-data libwireshark11 libwiretap8 libwmf0.2-7</span><br><span class="line">  libwscodecs2 libwsutil9 libxcb-icccm4 libxcb-image0 libxcb-keysyms1 libxcb-randr0</span><br><span class="line">  libxcb-render-util0 libxcb-xinerama0 libxcb-xkb1 libxkbcommon-x11-0 libyaml-0-2</span><br><span class="line">  maltego netpbm nikto nodejs nodejs-doc openjdk-8-jre openjdk-8-jre-headless</span><br><span class="line">  qt5-gtk-platformtheme qttranslations5-l10n rake ruby ruby-addressable ruby-ansi</span><br><span class="line">  ruby-atomic ruby-buftok ruby-celluloid ruby-celluloid-io ruby-daemons</span><br><span class="line">  ruby-dataobjects ruby-dataobjects-mysql ruby-dataobjects-postgres</span><br><span class="line">  ruby-dataobjects-sqlite3 ruby-dev ruby-did-you-mean ruby-diff-lcs ruby-dm-core</span><br><span class="line">  ruby-dm-do-adapter ruby-dm-migrations ruby-dm-serializer ruby-dm-sqlite-adapter</span><br><span class="line">  ruby-docile ruby-domain-name ruby-em-websocket ruby-equalizer ruby-erubis</span><br><span class="line">  ruby-eventmachine ruby-execjs ruby-faraday ruby-geoip ruby-hitimes ruby-http</span><br><span class="line">  ruby-http-cookie ruby-http-form-data ruby-http-parser.rb ruby-json ruby-librex</span><br><span class="line">  ruby-libv8 ruby-memoizable ruby-mime-types ruby-mime-types-data ruby-minitest</span><br><span class="line">  ruby-mojo-magick ruby-msfrpc-client ruby-msgpack ruby-multi-json ruby-multipart-post</span><br><span class="line">  ruby-naught ruby-net-telnet ruby-nio4r ruby-oj ruby-parseconfig ruby-power-assert</span><br><span class="line">  ruby-public-suffix ruby-qr4r ruby-rack ruby-rack-protection ruby-ref ruby-rqrcode</span><br><span class="line">  ruby-rspec-expectations ruby-rspec-support ruby-rubydns ruby-simple-oauth</span><br><span class="line">  ruby-simplecov ruby-simplecov-html ruby-sinatra ruby-sqlite3 ruby-term-ansicolor</span><br><span class="line">  ruby-test-unit ruby-therubyracer ruby-thread-safe ruby-tilt ruby-timers ruby-tins</span><br><span class="line">  ruby-twitter ruby-uglifier ruby-unf ruby-unf-ext ruby-xmlrpc ruby-zip ruby2.5</span><br><span class="line">  ruby2.5-dev ruby2.5-doc rubygems-integration thin wireshark wireshark-common</span><br><span class="line">  wireshark-qt zip</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">  aircrack-ng libcups2 libnl-3-200 libnl-genl-3-200 libxkbcommon0 metasploit-framework</span><br><span class="line">  nmap nmap-common</span><br><span class="line">8 upgraded, 182 newly installed, 0 to remove and 458 not upgraded.</span><br><span class="line">Need to get 381 MB of archives.</span><br><span class="line">After this operation, 616 MB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br></pre></td></tr></table></figure></p><h2 id="6、安装最新版本的Tor"><a href="#6、安装最新版本的Tor" class="headerlink" title="6、安装最新版本的Tor"></a>6、安装最新版本的Tor</h2><p>Tor可以在Kali的存储库中使用，但匿名软件应该直接从源代码获取（torproject.org）。此外，Kali的Tor版本无法可靠地维护或更新。这意味着我们可能会缺少关键的稳定性和安全性更新。</p><p>将Tor项目存储库添加到APT存储库列表中。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo &apos;deb https://deb.torproject.org/torproject.org stretch main</span><br><span class="line">deb-src https://deb.torproject.org/torproject.org stretch main&apos; &gt; /etc/apt/sources.list.d/tor.list</span><br></pre></td></tr></table></figure></p><p>然后，下载<a href="https://www.torproject.org/docs/debian.html.en" target="_blank" rel="noopener">Tor Project包签名密钥</a>并将其导入APT密钥环。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">wget -O- https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc | sudo apt-key add -</span><br><span class="line"></span><br><span class="line">--2019-02-18 19:28:23--  https://deb.torproject.org/torproject.org/A3C4F0F979CAA22CDBA8F512EE8CBC9E886DDD89.asc</span><br><span class="line">Resolving deb.torproject.org (deb.torproject.org)... 138.201.14.197</span><br><span class="line">Connecting to deb.torproject.org (deb.torproject.org)|138.201.14.197|:443... connected.</span><br><span class="line">HTTP request sent, awaiting response... 200 OK</span><br><span class="line">Length: 19665 (19K) [text/plain]</span><br><span class="line">Saving to: ‘STDOUT’</span><br><span class="line"></span><br><span class="line">-                                              100%[=================================================================================================&gt;]  19.20K  47.5KB/s    in 0.4s</span><br><span class="line"></span><br><span class="line">2019-02-18 19:28:25 (47.5 KB/s) - written to stdout [19665/19665]</span><br><span class="line"></span><br><span class="line">OK</span><br></pre></td></tr></table></figure></p><p>将签名密钥添加到密钥环后，您将看到“OK”输出。接下来，使用以下apt-get命令更新APT。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">apt-get update</span><br><span class="line"></span><br><span class="line">Hit:1 http://downloads.metasploit.com/data/releases/metasploit-framework/apt lucid InRelease</span><br><span class="line">Get:2 https://deb.torproject.org/torproject.org stretch InRelease [4,965 B]</span><br><span class="line">Get:4 https://deb.torproject.org/torproject.org stretch/main Sources [1,169 B]</span><br><span class="line">Get:5 https://deb.torproject.org/torproject.org stretch/main amd64 Packages [2,400 B]</span><br><span class="line">Hit:3 http://archive-3.kali.org/kali kali-rolling InRelease</span><br><span class="line">Fetched 8,534 B in 8s (1,091 B/s)</span><br><span class="line">Reading package lists... Done</span><br></pre></td></tr></table></figure></p><p>使用以下命令安装Tor，你就完成了。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">apt-get install tor deb.torproject.org-keyring</span><br><span class="line"></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">Suggested packages:</span><br><span class="line">  mixmaster torbrowser-launcher socat tor-arm apparmor-utils obfs4proxy</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">  deb.torproject.org-keyring</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">  tor</span><br></pre></td></tr></table></figure></p><h2 id="7、使用Syncthing配置文件共享"><a href="#7、使用Syncthing配置文件共享" class="headerlink" title="7、使用Syncthing配置文件共享"></a>7、使用Syncthing配置文件共享</h2><p>由<a href="https://twitter.com/jakobborg" target="_blank" rel="noopener">Jakob Borg</a>创建的<a href="https://github.com/syncthing/syncthing" target="_blank" rel="noopener">Syncthing</a>是一种<a href="https://github.com/syncthing/syncthing/releases/" target="_blank" rel="noopener">跨平台</a>，私有，轻量级文件同步（Dropbox）替代方案。作为渗透测试人员，在<a href="https://null-byte.wonderhowto.com/how-to/white-hats-guide-choosing-virtual-private-server-0183135/" target="_blank" rel="noopener">VPS</a>和本地Kali机器之间传输按键日志，屏幕截图，网络摄像头录像和<a href="https://null-byte.wonderhowto.com/how-to/hacking-windows-10-capture-exfiltrate-screenshots-remotely-0183646/#jump-step4" target="_blank" rel="noopener">敏感的战利品文件</a>可能是一项令人沮丧的任务。Syncthing使安全的文件共享完全无痛。</p><p>我在前一篇文章中介绍了<a href="https://null-byte.wonderhowto.com/how-to/securely-sync-files-between-two-machines-using-syncthing-0185999/" target="_blank" rel="noopener">Syncthing的安装和配置</a>。读者应参考该详细的分步指南。</p><h2 id="8、安装代码编辑器"><a href="#8、安装代码编辑器" class="headerlink" title="8、安装代码编辑器"></a>8、安装代码编辑器</h2><p><a href="https://atom.io/" target="_blank" rel="noopener">Atom</a>是一个免费的，开源的，功能丰富且高度可定制的文本编辑器。其功能包括实时协作共享代码，直观的编码自动补全功能，以及<a href="https://atom.io/packages" target="_blank" rel="noopener">安装软件包</a>的能力，这些都进一步增强了Atom的多功能性。其他值得注意的文本编辑包括<a href="https://wiki.geany.org/doku.php" target="_blank" rel="noopener">Geany</a>和<a href="https://wiki.gnome.org/Apps/Gedit" target="_blank" rel="noopener">Gedit</a>。</p><p>要安装Atom，请访问他们的网站并下载最新的<a href="https://atom.io/download/deb" target="_blank" rel="noopener">Debian安装程序</a>。接下来，使用下面的apt-get命令打开终端并安装所需的依赖项。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">apt-get install gvfs gvfs-common gvfs-daemons gvfs-libs gconf-service gconf2 gconf2-common gvfs-bin psmisc</span><br><span class="line"></span><br><span class="line">Reading package lists... Done</span><br><span class="line">Building dependency tree</span><br><span class="line">Reading state information... Done</span><br><span class="line">Correcting dependencies... Done</span><br><span class="line">The following NEW packages will be installed:</span><br><span class="line">   gconf-service (3.2.6-4.1)</span><br><span class="line">   gconf2 (3.2.6-4.1)</span><br><span class="line">   gconf2-common (3.2.6-4.1)</span><br><span class="line">   gvfs-bin (1.36.2-1)</span><br><span class="line">   libgconf-2-4 (3.2.6-4.1)</span><br><span class="line">   psmisc (23.1-1+b1)</span><br><span class="line">The following packages will be upgraded:</span><br><span class="line">   gvfs (1.36.1-1 =&gt; 1.36.2-1)</span><br><span class="line">   gvfs-common (1.36.1-1 =&gt; 1.36.2-1)</span><br><span class="line">   gvfs-daemons (1.36.1-1 =&gt; 1.36.2-1)</span><br><span class="line">   gvfs-libs (1.36.1-1 =&gt; 1.36.2-1)</span><br><span class="line">4 upgraded, 6 newly installed, 0 to remove and 462 not upgraded.</span><br><span class="line">1 not fully installed or removed.</span><br><span class="line">Need to get 3,317 kB of archives.</span><br><span class="line">After this operation, 8,909 kB of additional disk space will be used.</span><br><span class="line">Do you want to continue? [Y/n] y</span><br></pre></td></tr></table></figure></p><p>最后，使用命令行包管理器<strong>dpkg</strong>和install（<strong>-i</strong>）参数。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">dpkg -i ~/Downloads/atom-amd64.deb</span><br><span class="line"></span><br><span class="line">(Reading database ... 191882 files and directories currently installed.)</span><br><span class="line">Preparing to unpack atom-amd64.deb ...</span><br><span class="line">Unpacking atom (1.29.0) over (1.29.0) ...</span><br><span class="line">Setting up atom (1.29.0) ...</span><br><span class="line">Processing triggers for desktop-file-utils (0.23-3) ...</span><br><span class="line">Processing triggers for mime-support (3.60) ...</span><br></pre></td></tr></table></figure></p><p>完成后，Atom将显示在“应用程序”菜单中。<br><img src="https://img.wonderhowto.com/img/original/05/68/63669459068404/0/636694590684040568.jpg" alt="Atom"></p><h2 id="9、克隆橡皮鸭（Rubber-Ducky）编码器"><a href="#9、克隆橡皮鸭（Rubber-Ducky）编码器" class="headerlink" title="9、克隆橡皮鸭（Rubber Ducky）编码器"></a>9、克隆橡皮鸭（Rubber Ducky）编码器</h2><p>USB橡皮鸭是臭名昭著的按键注入工具。利用<a href="https://ducktoolkit.com/" target="_blank" rel="noopener">DuckToolKit网站</a>可以很容易地创建<a href="https://null-byte.wonderhowto.com/how-to/use-usb-rubber-ducky-disable-antivirus-software-install-ransomware-0180418/#jump-step2" target="_blank" rel="noopener">ducky payloads</a>，但作为一个渗透测试人员，与随机网站共享客户信息是不安全的。将有效载荷内容上载到第三方网站可能很危险。</p><p>相反，我们可以使用<strong>Git</strong>克隆USB橡皮鸭<a href="https://github.com/hak5darren/USB-Rubber-Ducky" target="_blank" rel="noopener">存储库</a>并在本地编码有效载荷。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/hak5darren/USB-Rubber-Ducky</span><br><span class="line"></span><br><span class="line">Cloning into &apos;USB-Rubber-Ducky&apos;...</span><br><span class="line">remote: Counting objects: 1657, done.</span><br><span class="line">remote: Total 1657 (delta 0), reused 0 (delta 0), pack-reused 1657</span><br><span class="line">Receiving objects: 100% (1657/1657), 31.88 MiB | 162.00 KiB/s, done.</span><br><span class="line">Resolving deltas: 100% (745/745), done.</span><br><span class="line">Checking out files: 100% (1509/1509), done.</span><br></pre></td></tr></table></figure></p><p>然后，将当前目录更改（<a href="https://null-byte.wonderhowto.com/how-to/hack-like-pro-linux-basics-for-aspiring-hacker-part-2-creating-directories-files-0147234/" target="_blank" rel="noopener">cd</a>）为USB-Rubber-Ducky/Encoder/ 目录，并使用以下<strong>java</strong>命令开始编码没有第三方网站的<a href="https://www.hak5.org/gear/duck/writing-your-first-usb-rubber-ducky-payload" target="_blank" rel="noopener">ducky payloads</a>。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cd USB-Rubber-Ducky/Encoder/</span><br><span class="line">java -jar encoder.jar -i input_payload.txt -o inject.bin</span><br></pre></td></tr></table></figure></p><h2 id="10、更改SSH密钥和默认密码"><a href="#10、更改SSH密钥和默认密码" class="headerlink" title="10、更改SSH密钥和默认密码"></a>10、更改SSH密钥和默认密码</h2><p>每个Kali Linux安装的默认密码都是相同的（toor），这使得自动化攻击非常容易。此外，当你通过SSH控制树莓派之类的东西时，默认的SSH密钥可以允许攻击者拦截你的通信。</p><p>要更改SSH密钥，请首先切换目录。执行以下两个命令将重置SSH密钥的默认值。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd /etc/ssh/</span><br><span class="line">dpkg-reconfigure openssh-server</span><br><span class="line"></span><br><span class="line">rescue-ssh.target is a disabled or a static unit, not starting it.</span><br></pre></td></tr></table></figure></p><p>现在，对于你的Kali系统密码，输入<strong>passwd root</strong>，然后输入你的新密码。然后，重新输入以确认。如果你未以root用户身份登录，则可能会在执行此操作之前询问你当前的密码。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">passwd root</span><br><span class="line"></span><br><span class="line">Enter new UNIX password:</span><br><span class="line">Retype new UNIX password:</span><br><span class="line">passwd: password updated successfully</span><br></pre></td></tr></table></figure></p><h2 id="安装Kali后你做的第一件事是什么？"><a href="#安装Kali后你做的第一件事是什么？" class="headerlink" title="安装Kali后你做的第一件事是什么？"></a>安装Kali后你做的第一件事是什么？</h2><p>我们都有不同程度的兴趣，技能和经验水平。这使得编写完整的安装后步骤列表变得棘手。我错过了任何关键步骤吗？你如何个性化和定制新安装的Kali？请务必在下面发表评论。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;本文翻译自&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/top-10-things-do-after-installing-kali-linux-0186450/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://null-byte.wonderhowto.com/how-to/top-10-things-do-after-installing-kali-linux-0186450/&lt;/a&gt; ，正文如下：&lt;/p&gt;
&lt;p&gt;默认情况下，对于完成日常的渗透测试，&lt;a href=&quot;https://null-byte.wonderhowto.com/how-to/hack-like-pro-getting-started-with-kali-your-new-hacking-system-0151631/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Kali Linux&lt;/a&gt;可能没有你所需的一切。但通过一些提示，技巧和应用程序，我们可以像专业的白帽子一样快速开始使用Kali。&lt;/p&gt;
&lt;p&gt;大多数Linux发行版都是高度可定制的。这使得个性化你的渗透测试发行版有点令人生畏。只需几个命令，我们就可以自动执行任务，安装我们喜欢的软件，创建其他用户帐户，正确配置匿名软件，以及优化我们与终端的互动。我们可以采取一些措施来改善与操作系统的交互。&lt;br&gt;
    
    </summary>
    
      <category term="Translation" scheme="https://howiezhao.github.io/categories/Translation/"/>
    
    
      <category term="Kali" scheme="https://howiezhao.github.io/tags/Kali/"/>
    
  </entry>
  
  <entry>
    <title>说说VPS</title>
    <link href="https://howiezhao.github.io/2019/01/08/talk-about-vps/"/>
    <id>https://howiezhao.github.io/2019/01/08/talk-about-vps/</id>
    <published>2019-01-08T10:38:07.000Z</published>
    <updated>2019-07-09T03:38:31.845Z</updated>
    
    <content type="html"><![CDATA[<p><strong>VPS</strong>（Virtual Private Server）即<strong>虚拟专用服务器</strong>，它不等同于<strong>独立服务器</strong>，独立服务器是指货真价实的物理机器，而VPS则是在独立服务器上虚拟化的多个虚拟机器。与此类似的，<strong>虚拟空间</strong>（或虚拟主机）则是指VPS上某个特定的应用环境，它没有访问系统底层的权限。显然，独立服务器偏贵，虚拟空间限制又多，而VPS这一中间选择成为了广大爱好者的首选。<br><a id="more"></a></p><h2 id="虚拟化技术"><a href="#虚拟化技术" class="headerlink" title="虚拟化技术"></a>虚拟化技术</h2><p>VPS所使用的虚拟化技术主要有<strong>KVM</strong>和<strong>OpenVZ</strong>（简称OVZ），以下是两者的优缺点对比：<br>KVM：</p><ul><li>优点：独占内核、内存等</li><li>缺点：价格较贵</li></ul><p>OpenVZ：</p><ul><li>优点：价格低</li><li>缺点：共享内核、内存等</li></ul><p>简单来说，KVM拥有对内核更多的控制权，而OpenVZ因为共享资源的情况受<strong>超售</strong>影响较大，现在，越来越多的VPS商家也开始使用KVM架构来虚拟化VPS。个人建议，尽量选择KVM架构的VPS。</p><h2 id="收费方式"><a href="#收费方式" class="headerlink" title="收费方式"></a>收费方式</h2><p>VPS一般按两种方式收费，即<strong>按月收费</strong>或<strong>按小时收费</strong>，显然，按小时收费更加灵活，当不需要使用时，直接关机就能停止收费。除此之外，VPS一般会限制每月最多可使用的流量，当超过额度后，会收取流量费。</p><h2 id="VPS商家"><a href="#VPS商家" class="headerlink" title="VPS商家"></a>VPS商家</h2><p>当前主流的VPS商家有：<a href="https://bandwagonhost.com/index.php" target="_blank" rel="noopener">BandwagonHost</a>，<a href="https://www.vultr.com/" target="_blank" rel="noopener">Vultr</a>，<a href="https://www.digitalocean.com/" target="_blank" rel="noopener">DigitalOcean</a>。</p><p>BandwagonHost，中文又称搬瓦工，它们采用按月收费，支持支付宝付款，在2019年之前，它们推出过最低每年19.99美元的VPS，这应该是那时候最便宜且稳定的VPS商家了，但如今它们已经取消了这一方案，并全部使用KVM架构，现在它们的最低方案是每年49.99美元，配置1G内存，20G固态，每月1T的流量。</p><p>Vultr，它们采用按小时收费的方式，支持支付宝付款，全部采用KVM架构，现在最低的方案是每年42美元，配置512MB内存，10G固态，每月0.5T的流量，个人非常推荐。</p><p>DigitalOcean，它们同样采用按小时收费的方式，使用信用卡付款，全部采用KVM架构，现在最低的方案是每年60美元，配置1G内存，25G固态，每月1T的流量。</p><h2 id="测试VPS性能"><a href="#测试VPS性能" class="headerlink" title="测试VPS性能"></a>测试VPS性能</h2><p>一般在首次连接到VPS之后，建议进行一个性能测试，通常要测试的项目包括磁盘性能、网络性能以及一些基本参数等。这里推荐使用oldking开发的一键测试脚本<a href="https://www.oldking.net/350.html" target="_blank" rel="noopener">SuperBench.sh</a>，具体使用方法如下命令所示：<br><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget -qO- git.io/superbench.sh | bash</span><br></pre></td></tr></table></figure></p><h2 id="黑话"><a href="#黑话" class="headerlink" title="黑话"></a>黑话</h2><p>VPS相关的论坛中经常会有一些行业黑话，以下做简要说明：</p><ul><li>杜甫：即独服的意思，指前面提到的独立服务器。</li><li>母鸡：指用来虚拟化VPS的物理主机。</li><li>小鸡：即VPS，尤其指配置比较低的廉价VPS。</li><li>养鸡：续费VPS的过程。</li><li>CN2线路：指中国电信与美国日本韩国香港等地机房直连的服务器线路，速度快且稳定。</li><li>套路云：指阿里云。</li><li>良心云：指腾讯云。</li><li>雨林云：指AWS，取自亚马逊热带雨林。</li></ul><h2 id="一些建议"><a href="#一些建议" class="headerlink" title="一些建议"></a>一些建议</h2><p>如果你的VPS内存较小，比如512M内存以下，则建议安装32位操作系统。操作系统建议选择CentOS 7以上。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;VPS&lt;/strong&gt;（Virtual Private Server）即&lt;strong&gt;虚拟专用服务器&lt;/strong&gt;，它不等同于&lt;strong&gt;独立服务器&lt;/strong&gt;，独立服务器是指货真价实的物理机器，而VPS则是在独立服务器上虚拟化的多个虚拟机器。与此类似的，&lt;strong&gt;虚拟空间&lt;/strong&gt;（或虚拟主机）则是指VPS上某个特定的应用环境，它没有访问系统底层的权限。显然，独立服务器偏贵，虚拟空间限制又多，而VPS这一中间选择成为了广大爱好者的首选。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>说说MS Office</title>
    <link href="https://howiezhao.github.io/2019/01/08/talk-about-ms-office/"/>
    <id>https://howiezhao.github.io/2019/01/08/talk-about-ms-office/</id>
    <published>2019-01-08T10:37:56.000Z</published>
    <updated>2019-02-27T06:42:46.492Z</updated>
    
    <content type="html"><![CDATA[<p>Office是最常使用的<strong>办公套件</strong>，一般来说，提到Office，最先想到的是微软的Office，即<strong>MS Office</strong>，除此之外，还有<strong>WPS Office</strong>，这是由金山推出的。</p><p>Office原生支持Windows桌面版，这也是目前功能最全且<strong>收费</strong>的Office版本，时至今日，Office也可以用于UWP、Android、iOS、macOS以及Web等。一般来说，我们说的Office是指Windows桌面版的Office套件。</p><p>在本文写作之际，最新的Office版本为<strong>Office 2019</strong>，但据个人观察，<strong>Office 2010</strong>仍然被大多数人所使用。<br><a id="more"></a><br>Office套件一般包括以下软件：</p><ul><li><strong>Word</strong>：文档编辑工具</li><li><strong>Excel</strong>：表格编辑工具</li><li><strong>PowerPoint</strong>：幻灯片演示文稿制作工具</li><li><strong>Access</strong>：小型数据库</li><li><strong>OneNote</strong>：在线笔记应用</li><li><strong>Outlook</strong>：电子邮箱应用</li><li><strong>Publisher</strong>：桌面出版应用软件</li><li><strong>Visio</strong>：流程图制作工具</li></ul><p>以Office 2016为例，其中自带的OneNote全称为<strong>OneNote 2016</strong>（桌面版）；除此之外，还有Microsoft Store中<strong>UWP版</strong>的OneNote，即<strong>OneNote for Windows 10</strong>，简称为OneNote，此版本的OneNote是功能最全的OneNote，也是微软的主要开发版，并内置于所有的Windows 10电脑中，另外，Office 2019套件中也已替换成了此版本的OneNote。关于OneNote（OneNote for Windows 10）与OneNote 2016的详细区别请参考微软Office官方帮助信息：<a href="https://support.office.com/zh-cn/article/onenote-%E4%B8%8E-onenote-2016-%E6%9C%89%E4%BB%80%E4%B9%88%E5%8C%BA%E5%88%AB%EF%BC%9F-a624e692-b78b-4c09-b07f-46181958118f" target="_blank" rel="noopener">OneNote与OneNote 2016有什么区别？</a></p><h2 id="Office-365"><a href="#Office-365" class="headerlink" title="Office 365"></a>Office 365</h2><p>不同于Office 2016或Office 2019的一次性购买模式，<strong>Office 365</strong>采用订阅模式，即每月支付一定费用。它可以享受到更多的优惠，比如1TB的OneDrive空间和持续的软件更新等。具体可参考微软Office官方帮助信息：<a href="https://support.office.com/zh-cn/article/office-365-%E5%92%8C-office-2019-%E4%B9%8B%E9%97%B4%E7%9A%84%E5%8C%BA%E5%88%AB%E6%98%AF%E4%BB%80%E4%B9%88%EF%BC%9F-ed447ebf-6060-46f9-9e90-a239bd27eb96" target="_blank" rel="noopener">Office 365和Office 2019之间的区别是什么？</a></p><h2 id="G-Suite"><a href="#G-Suite" class="headerlink" title="G Suite"></a>G Suite</h2><p><strong>G Suite</strong>是由Google公司推出的办公套件，其中主要包括<strong>Google Docs（文档）</strong>、<strong>Google Sheets（表格）</strong>、<strong>Google Slides（幻灯片）</strong>等，适用于Android、iOS、Web平台。这些软件兼容Office的文件格式。</p><h2 id="iWork"><a href="#iWork" class="headerlink" title="iWork"></a>iWork</h2><p><strong>iWork</strong>是由苹果公司推出的办公套件，其中主要包括<strong>Pages文稿</strong>、<strong>Numbers表格</strong>、<strong>Keynote讲演</strong>，适用于macOS、iOS平台。这些软件生成的文件格式与Office中的Word、Excel、PowerPoint互不兼容。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Office是最常使用的&lt;strong&gt;办公套件&lt;/strong&gt;，一般来说，提到Office，最先想到的是微软的Office，即&lt;strong&gt;MS Office&lt;/strong&gt;，除此之外，还有&lt;strong&gt;WPS Office&lt;/strong&gt;，这是由金山推出的。&lt;/p&gt;
&lt;p&gt;Office原生支持Windows桌面版，这也是目前功能最全且&lt;strong&gt;收费&lt;/strong&gt;的Office版本，时至今日，Office也可以用于UWP、Android、iOS、macOS以及Web等。一般来说，我们说的Office是指Windows桌面版的Office套件。&lt;/p&gt;
&lt;p&gt;在本文写作之际，最新的Office版本为&lt;strong&gt;Office 2019&lt;/strong&gt;，但据个人观察，&lt;strong&gt;Office 2010&lt;/strong&gt;仍然被大多数人所使用。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>说说信用卡</title>
    <link href="https://howiezhao.github.io/2019/01/08/talk-about-credit-card/"/>
    <id>https://howiezhao.github.io/2019/01/08/talk-about-credit-card/</id>
    <published>2019-01-08T10:37:43.000Z</published>
    <updated>2019-03-11T02:03:19.566Z</updated>
    
    <content type="html"><![CDATA[<h2 id="年费"><a href="#年费" class="headerlink" title="年费"></a>年费</h2><p>所谓<strong>年费</strong>，即每年的管理费，几乎所有信用卡都有年费，年费一般可以通过两种方法免去，即<strong>刷够指定额度</strong>或<strong>刷够指定笔数</strong>，具体采用哪种方法依据特定的信用卡而定。有的信用卡是“<strong>终身免年费</strong>”的，这里的终身一般指信用卡的<strong>有效期</strong>内。</p><h2 id="有效期"><a href="#有效期" class="headerlink" title="有效期"></a>有效期</h2><p>为了保护信用卡的安全，信用卡是有有效期的，一般印在信用卡上的<strong>VALID THRU</strong>字段，比如05/26代表2026年5月过期，过期之后要重新去银行办理。<br><a id="more"></a></p><h2 id="等级"><a href="#等级" class="headerlink" title="等级"></a>等级</h2><p>信用卡的等级从低到高一般分为<strong>普卡</strong>、<strong>金卡</strong>（Gold）、<strong>白金卡</strong>（Platinum）等，等级越高，优惠越多，额度越大，但相应的，年费也会越高。</p><h2 id="溢缴款"><a href="#溢缴款" class="headerlink" title="溢缴款"></a>溢缴款</h2><p>信用卡不同于借记卡（或储蓄卡），信用卡的主要目的是用于消费，而不是存款，因此，存在信用卡里面的钱是没有利息的，这笔钱被叫做<strong>溢缴款</strong>，溢缴款取现是要收取手续费的。但在消费时，会优先扣除溢缴款，随后扣除额度。</p><h2 id="银行卡组织"><a href="#银行卡组织" class="headerlink" title="银行卡组织"></a>银行卡组织</h2><p>不同银行之间要实现互相转账就要靠<strong>银行卡组织</strong>的协调，在中国使用最多的卡组织是<strong>银联</strong>（UnionPay），在美国使用最多的卡组织是<strong>Visa</strong>，在欧洲使用最多的卡组织是<strong>MasterCard</strong>（万事达），在日本使用最多的卡组织是<strong>JCB</strong>。当你准备在海外购物时，就十分有必要办一张支持海外卡组织的信用卡，比如Visa信用卡。</p><h2 id="双标卡"><a href="#双标卡" class="headerlink" title="双标卡"></a>双标卡</h2><p>国内有一些信用卡上面既有银联的标志，也有海外卡组织的标志，这种卡就是<strong>双标卡</strong>。它可以在付款的时候选择指定的卡组织，比如在国内购物使用银联，在国外购物使用Visa。但是，按照国际惯例，一张卡只能归属于一个银行卡组织，这样看来，还是传统的两张单标卡更靠谱一点。</p><h2 id="信用卡安全码"><a href="#信用卡安全码" class="headerlink" title="信用卡安全码"></a>信用卡安全码</h2><p><strong>信用卡安全码</strong>常为3位数字，印在卡片背面卡号后四位处，Visa的安全码叫做<strong>CVV2</strong>（Card Verification Value 2），银联的安全码叫做CVN2（Card Validation Number 2），JCB的安全码叫做CAV2（Card Authentication Value 2）。安全码相当于信用卡的密码，常用于网络交易的过程中，所以，请保护好自己的安全码，不要被泄露。</p><h2 id="主卡副卡"><a href="#主卡副卡" class="headerlink" title="主卡副卡"></a>主卡副卡</h2><h2 id="币种"><a href="#币种" class="headerlink" title="币种"></a>币种</h2><h2 id="PayPal"><a href="#PayPal" class="headerlink" title="PayPal"></a>PayPal</h2><h2 id="借记卡和储蓄卡"><a href="#借记卡和储蓄卡" class="headerlink" title="借记卡和储蓄卡"></a>借记卡和储蓄卡</h2>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;年费&quot;&gt;&lt;a href=&quot;#年费&quot; class=&quot;headerlink&quot; title=&quot;年费&quot;&gt;&lt;/a&gt;年费&lt;/h2&gt;&lt;p&gt;所谓&lt;strong&gt;年费&lt;/strong&gt;，即每年的管理费，几乎所有信用卡都有年费，年费一般可以通过两种方法免去，即&lt;strong&gt;刷够指定额度&lt;/strong&gt;或&lt;strong&gt;刷够指定笔数&lt;/strong&gt;，具体采用哪种方法依据特定的信用卡而定。有的信用卡是“&lt;strong&gt;终身免年费&lt;/strong&gt;”的，这里的终身一般指信用卡的&lt;strong&gt;有效期&lt;/strong&gt;内。&lt;/p&gt;
&lt;h2 id=&quot;有效期&quot;&gt;&lt;a href=&quot;#有效期&quot; class=&quot;headerlink&quot; title=&quot;有效期&quot;&gt;&lt;/a&gt;有效期&lt;/h2&gt;&lt;p&gt;为了保护信用卡的安全，信用卡是有有效期的，一般印在信用卡上的&lt;strong&gt;VALID THRU&lt;/strong&gt;字段，比如05/26代表2026年5月过期，过期之后要重新去银行办理。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>树莓派初体验</title>
    <link href="https://howiezhao.github.io/2018/12/24/raspberry-pi-experience/"/>
    <id>https://howiezhao.github.io/2018/12/24/raspberry-pi-experience/</id>
    <published>2018-12-24T05:43:49.000Z</published>
    <updated>2019-01-08T11:44:38.198Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Raspbian"><a href="#Raspbian" class="headerlink" title="Raspbian"></a>Raspbian</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Raspbian&quot;&gt;&lt;a href=&quot;#Raspbian&quot; class=&quot;headerlink&quot; title=&quot;Raspbian&quot;&gt;&lt;/a&gt;Raspbian&lt;/h2&gt;
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>使用BOINC来挖掘格雷德币</title>
    <link href="https://howiezhao.github.io/2018/12/16/boinc-gridcoin/"/>
    <id>https://howiezhao.github.io/2018/12/16/boinc-gridcoin/</id>
    <published>2018-12-16T09:06:10.000Z</published>
    <updated>2018-12-16T09:06:44.572Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>数字货币中的相关术语</title>
    <link href="https://howiezhao.github.io/2018/12/16/digital-currency/"/>
    <id>https://howiezhao.github.io/2018/12/16/digital-currency/</id>
    <published>2018-12-16T09:04:51.000Z</published>
    <updated>2019-01-10T13:33:45.943Z</updated>
    
    <content type="html"><![CDATA[<h2 id="命名"><a href="#命名" class="headerlink" title="命名"></a>命名</h2><h2 id="挖矿"><a href="#挖矿" class="headerlink" title="挖矿"></a>挖矿</h2><h2 id="矿池"><a href="#矿池" class="headerlink" title="矿池"></a>矿池</h2><h2 id="钱包"><a href="#钱包" class="headerlink" title="钱包"></a>钱包</h2><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;命名&quot;&gt;&lt;a href=&quot;#命名&quot; class=&quot;headerlink&quot; title=&quot;命名&quot;&gt;&lt;/a&gt;命名&lt;/h2&gt;&lt;h2 id=&quot;挖矿&quot;&gt;&lt;a href=&quot;#挖矿&quot; class=&quot;headerlink&quot; title=&quot;挖矿&quot;&gt;&lt;/a&gt;挖矿&lt;/h2&gt;&lt;h2 id
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>编写Wikipedia的几点注意</title>
    <link href="https://howiezhao.github.io/2018/12/16/wikipedia/"/>
    <id>https://howiezhao.github.io/2018/12/16/wikipedia/</id>
    <published>2018-12-16T09:03:06.000Z</published>
    <updated>2018-12-16T09:03:36.121Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>使用GitBook编写电子书籍</title>
    <link href="https://howiezhao.github.io/2018/12/16/gitbook/"/>
    <id>https://howiezhao.github.io/2018/12/16/gitbook/</id>
    <published>2018-12-16T09:01:38.000Z</published>
    <updated>2018-12-16T09:02:17.360Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
</feed>
