<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Howie&#39;s Notes</title>
  
  <subtitle>Machine Learning and Cyber Security</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://howiezhao.github.io/"/>
  <updated>2018-11-17T12:12:42.797Z</updated>
  <id>https://howiezhao.github.io/</id>
  
  <author>
    <name>Howie Zhao</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title></title>
    <link href="https://howiezhao.github.io/2018/11/17/readme/"/>
    <id>https://howiezhao.github.io/2018/11/17/readme/</id>
    <published>2018-11-17T12:12:42.796Z</published>
    <updated>2018-11-17T12:12:42.797Z</updated>
    
    <content type="html"><![CDATA[<!DOCTYPE html><html><head><meta charset="utf-8"><meta name="viewport" content="width=device-width, initial-scale=1"><meta name="date" content="2018-11-02 16:59:24"><meta name="tags" content=""><meta name="categories" content="CheatSheet"><style>body {  max-width: 980px;  border: 1px solid #ddd;  outline: 1300px solid #fff;  margin: 16px auto;}body .markdown-body{  padding: 45px;}@font-face {  font-family: fontawesome-mini;  src: url(data:font/woff;charset=utf-8;base64,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) format('woff');}.markdown-body {  font-family: sans-serif;  -ms-text-size-adjust: 100%;  -webkit-text-size-adjust: 100%;  color: #333333;  overflow: hidden;  font-family: "Helvetica Neue", Helvetica, "Segoe UI", Arial, freesans, sans-serif;  font-size: 16px;  line-height: 1.6;  word-wrap: break-word;}.markdown-body a {  background: transparent;}.markdown-body a:active,.markdown-body a:hover {  outline: 0;}.markdown-body b,.markdown-body strong {  font-weight: bold;}.markdown-body mark {  background: #ff0;  color: #000;  font-style: italic;  font-weight: bold;}.markdown-body sub,.markdown-body sup {  font-size: 75%;  line-height: 0;  position: relative;  vertical-align: baseline;}.markdown-body sup {  top: -0.5em;}.markdown-body sub {  bottom: -0.25em;}.markdown-body h1 {  font-size: 2em;  margin: 0.67em 0;}.markdown-body img {  border: 0;}.markdown-body hr {  -moz-box-sizing: content-box;  box-sizing: content-box;  height: 0;}.markdown-body pre {  overflow: auto;}.markdown-body code,.markdown-body kbd,.markdown-body pre,.markdown-body samp {  font-family: monospace, monospace;  font-size: 1em;}.markdown-body input {  color: inherit;  font: inherit;  margin: 0;}.markdown-body html input[disabled] {  cursor: default;}.markdown-body input {  line-height: normal;}.markdown-body input[type="checkbox"] {  box-sizing: border-box;  padding: 0;}.markdown-body table {  border-collapse: collapse;  border-spacing: 0;}.markdown-body td,.markdown-body th {  padding: 0;}.markdown-body .codehilitetable {  border: 0;  border-spacing: 0;}.markdown-body .codehilitetable tr {  border: 0;}.markdown-body .codehilitetable pre,.markdown-body .codehilitetable div.codehilite {  margin: 0;}.markdown-body .linenos,.markdown-body .code,.markdown-body .codehilitetable td {  border: 0;  padding: 0;}.markdown-body td:not(.linenos) .linenodiv {  padding: 0 !important;}.markdown-body .code {  width: 100%;}.markdown-body .linenos div pre,.markdown-body .linenodiv pre,.markdown-body .linenodiv {  border: 0;  -webkit-border-radius: 0;  -moz-border-radius: 0;  border-radius: 0;  -webkit-border-top-left-radius: 3px;  -webkit-border-bottom-left-radius: 3px;  -moz-border-radius-topleft: 3px;  -moz-border-radius-bottomleft: 3px;  border-top-left-radius: 3px;  border-bottom-left-radius: 3px;}.markdown-body .code div pre,.markdown-body .code div {  border: 0;  -webkit-border-radius: 0;  -moz-border-radius: 0;  border-radius: 0;  -webkit-border-top-right-radius: 3px;  -webkit-border-bottom-right-radius: 3px;  -moz-border-radius-topright: 3px;  -moz-border-radius-bottomright: 3px;  border-top-right-radius: 3px;  border-bottom-right-radius: 3px;}.markdown-body * {  -moz-box-sizing: border-box;  box-sizing: border-box;}.markdown-body input {  font: 13px Helvetica, arial, freesans, clean, sans-serif, "Segoe UI Emoji", "Segoe UI Symbol";  line-height: 1.4;}.markdown-body a {  color: #4183c4;  text-decoration: none;}.markdown-body a:hover,.markdown-body a:focus,.markdown-body a:active {  text-decoration: underline;}.markdown-body hr {  height: 0;  margin: 15px 0;  overflow: hidden;  background: transparent;  border: 0;  border-bottom: 1px solid #ddd;}.markdown-body hr:before,.markdown-body hr:after {  display: table;  content: " ";}.markdown-body hr:after {  clear: both;}.markdown-body h1,.markdown-body h2,.markdown-body h3,.markdown-body h4,.markdown-body h5,.markdown-body h6 {  margin-top: 15px;  margin-bottom: 15px;  line-height: 1.1;}.markdown-body h1 {  font-size: 30px;}.markdown-body h2 {  font-size: 21px;}.markdown-body h3 {  font-size: 16px;}.markdown-body h4 {  font-size: 14px;}.markdown-body h5 {  font-size: 12px;}.markdown-body h6 {  font-size: 11px;}.markdown-body blockquote {  margin: 0;}.markdown-body ul,.markdown-body ol {  padding: 0;  margin-top: 0;  margin-bottom: 0;}.markdown-body ol ol,.markdown-body ul ol {  list-style-type: lower-roman;}.markdown-body ul ul ol,.markdown-body ul ol ol,.markdown-body ol ul ol,.markdown-body ol ol ol {  list-style-type: lower-alpha;}.markdown-body dd {  margin-left: 0;}.markdown-body code,.markdown-body pre,.markdown-body samp {  font-family: Consolas, "Liberation Mono", Menlo, Courier, monospace;  font-size: 12px;}.markdown-body pre {  margin-top: 0;  margin-bottom: 0;}.markdown-body kbd {  background-color: #e7e7e7;  background-image: -moz-linear-gradient(#fefefe, #e7e7e7);  background-image: -webkit-linear-gradient(#fefefe, #e7e7e7);  background-image: linear-gradient(#fefefe, #e7e7e7);  background-repeat: repeat-x;  border-radius: 2px;  border: 1px solid #cfcfcf;  color: #000;  padding: 3px 5px;  line-height: 10px;  font: 11px Consolas, "Liberation Mono", Menlo, Courier, monospace;  display: inline-block;}.markdown-body>*:first-child {  margin-top: 0 !important;}.markdown-body>*:last-child {  margin-bottom: 0 !important;}.markdown-body .headerlink {  font: normal 400 16px fontawesome-mini;  vertical-align: middle;  margin-left: -16px;  float: left;  display: inline-block;  text-decoration: none;  opacity: 0;  color: #333;}.markdown-body .headerlink:focus {  outline: none;}.markdown-body h1 .headerlink {  margin-top: 0.8rem;}.markdown-body h2 .headerlink,.markdown-body h3 .headerlink {  margin-top: 0.6rem;}.markdown-body h4 .headerlink {  margin-top: 0.2rem;}.markdown-body h5 .headerlink,.markdown-body h6 .headerlink {  margin-top: 0;}.markdown-body .headerlink:hover,.markdown-body h1:hover .headerlink,.markdown-body h2:hover .headerlink,.markdown-body h3:hover .headerlink,.markdown-body h4:hover .headerlink,.markdown-body h5:hover .headerlink,.markdown-body h6:hover .headerlink {  opacity: 1;  text-decoration: none;}.markdown-body h1 {  padding-bottom: 0.3em;  font-size: 2.25em;  line-height: 1.2;  border-bottom: 1px solid #eee;}.markdown-body h2 {  padding-bottom: 0.3em;  font-size: 1.75em;  line-height: 1.225;  border-bottom: 1px solid #eee;}.markdown-body h3 {  font-size: 1.5em;  line-height: 1.43;}.markdown-body h4 {  font-size: 1.25em;}.markdown-body h5 {  font-size: 1em;}.markdown-body h6 {  font-size: 1em;  color: #777;}.markdown-body p,.markdown-body blockquote,.markdown-body ul,.markdown-body ol,.markdown-body dl,.markdown-body table,.markdown-body pre,.markdown-body .admonition {  margin-top: 0;  margin-bottom: 16px;}.markdown-body hr {  height: 4px;  padding: 0;  margin: 16px 0;  background-color: #e7e7e7;  border: 0 none;}.markdown-body ul,.markdown-body ol {  padding-left: 2em;}.markdown-body ul ul,.markdown-body ul ol,.markdown-body ol ol,.markdown-body ol ul {  margin-top: 0;  margin-bottom: 0;}.markdown-body li>p {  margin-top: 16px;}.markdown-body dl {  padding: 0;}.markdown-body dl dt {  padding: 0;  margin-top: 16px;  font-size: 1em;  font-style: italic;  font-weight: bold;}.markdown-body dl dd {  padding: 0 16px;  margin-bottom: 16px;}.markdown-body blockquote {  padding: 0 15px;  color: #777;  border-left: 4px solid #ddd;}.markdown-body blockquote>:first-child {  margin-top: 0;}.markdown-body blockquote>:last-child {  margin-bottom: 0;}.markdown-body table {  display: block;  width: 100%;  overflow: auto;  word-break: normal;  word-break: keep-all;}.markdown-body table th {  font-weight: bold;}.markdown-body table th,.markdown-body table td {  padding: 6px 13px;  border: 1px solid #ddd;}.markdown-body table tr {  background-color: #fff;  border-top: 1px solid #ccc;}.markdown-body table tr:nth-child(2n) {  background-color: #f8f8f8;}.markdown-body img {  max-width: 100%;  -moz-box-sizing: border-box;  box-sizing: border-box;}.markdown-body code,.markdown-body samp {  padding: 0;  padding-top: 0.2em;  padding-bottom: 0.2em;  margin: 0;  font-size: 85%;  background-color: rgba(0,0,0,0.04);  border-radius: 3px;}.markdown-body code:before,.markdown-body code:after {  letter-spacing: -0.2em;  content: "\00a0";}.markdown-body pre>code {  padding: 0;  margin: 0;  font-size: 100%;  word-break: normal;  white-space: pre;  background: transparent;  border: 0;}.markdown-body .codehilite {  margin-bottom: 16px;}.markdown-body .codehilite pre,.markdown-body pre {  padding: 16px;  overflow: auto;  font-size: 85%;  line-height: 1.45;  background-color: #f7f7f7;  border-radius: 3px;}.markdown-body .codehilite pre {  margin-bottom: 0;  word-break: normal;}.markdown-body pre {  word-wrap: normal;}.markdown-body pre code {  display: inline;  max-width: initial;  padding: 0;  margin: 0;  overflow: initial;  line-height: inherit;  word-wrap: normal;  background-color: transparent;  border: 0;}.markdown-body pre code:before,.markdown-body pre code:after {  content: normal;}/* Admonition */.markdown-body .admonition {  -webkit-border-radius: 3px;  -moz-border-radius: 3px;  position: relative;  border-radius: 3px;  border: 1px solid #e0e0e0;  border-left: 6px solid #333;  padding: 10px 10px 10px 30px;}.markdown-body .admonition table {  color: #333;}.markdown-body .admonition p {  padding: 0;}.markdown-body .admonition-title {  font-weight: bold;  margin: 0;}.markdown-body .admonition>.admonition-title {  color: #333;}.markdown-body .attention>.admonition-title {  color: #a6d796;}.markdown-body .caution>.admonition-title {  color: #d7a796;}.markdown-body .hint>.admonition-title {  color: #96c6d7;}.markdown-body .danger>.admonition-title {  color: #c25f77;}.markdown-body .question>.admonition-title {  color: #96a6d7;}.markdown-body .note>.admonition-title {  color: #d7c896;}.markdown-body .admonition:before,.markdown-body .attention:before,.markdown-body .caution:before,.markdown-body .hint:before,.markdown-body .danger:before,.markdown-body .question:before,.markdown-body .note:before {  font: normal normal 16px fontawesome-mini;  -moz-osx-font-smoothing: grayscale;  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;  line-height: 1.5;  color: #333;  position: absolute;  left: 0;  top: 0;  padding-top: 10px;  padding-left: 10px;}.markdown-body .admonition:before {  content: "\f056\00a0";  color: 333;}.markdown-body .attention:before {  content: "\f058\00a0";  color: #a6d796;}.markdown-body .caution:before {  content: "\f06a\00a0";  color: #d7a796;}.markdown-body .hint:before {  content: "\f05a\00a0";  color: #96c6d7;}.markdown-body .danger:before {  content: "\f057\00a0";  color: #c25f77;}.markdown-body .question:before {  content: "\f059\00a0";  color: #96a6d7;}.markdown-body .note:before {  content: "\f040\00a0";  color: #d7c896;}.markdown-body .admonition::after {  content: normal;}.markdown-body .attention {  border-left: 6px solid #a6d796;}.markdown-body .caution {  border-left: 6px solid #d7a796;}.markdown-body .hint {  border-left: 6px solid #96c6d7;}.markdown-body .danger {  border-left: 6px solid #c25f77;}.markdown-body .question {  border-left: 6px solid #96a6d7;}.markdown-body .note {  border-left: 6px solid #d7c896;}.markdown-body .admonition>*:first-child {  margin-top: 0 !important;}.markdown-body .admonition>*:last-child {  margin-bottom: 0 !important;}/* progress bar*/.markdown-body .progress {  display: block;  width: 300px;  margin: 10px 0;  height: 24px;  -webkit-border-radius: 3px;  -moz-border-radius: 3px;  border-radius: 3px;  background-color: #ededed;  position: relative;  box-shadow: inset -1px 1px 3px rgba(0, 0, 0, .1);}.markdown-body .progress-label {  position: absolute;  text-align: center;  font-weight: bold;  width: 100%; margin: 0;  line-height: 24px;  color: #333;  text-shadow: 1px 1px 0 #fefefe, -1px -1px 0 #fefefe, -1px 1px 0 #fefefe, 1px -1px 0 #fefefe, 0 1px 0 #fefefe, 0 -1px 0 #fefefe, 1px 0 0 #fefefe, -1px 0 0 #fefefe, 1px 1px 2px #000;  -webkit-font-smoothing: antialiased !important;  white-space: nowrap;  overflow: hidden;}.markdown-body .progress-bar {  height: 24px;  float: left;  -webkit-border-radius: 3px;  -moz-border-radius: 3px;  border-radius: 3px;  background-color: #96c6d7;  box-shadow: inset 0 1px 0 rgba(255, 255, 255, .5), inset 0 -1px 0 rgba(0, 0, 0, .1);  background-size: 30px 30px;  background-image: -webkit-linear-gradient(    135deg, rgba(255, 255, 255, .4) 27%,    transparent 27%,    transparent 52%, rgba(255, 255, 255, .4) 52%,    rgba(255, 255, 255, .4) 77%,    transparent 77%, transparent  );  background-image: -moz-linear-gradient(    135deg,    rgba(255, 255, 255, .4) 27%, transparent 27%,    transparent 52%, rgba(255, 255, 255, .4) 52%,    rgba(255, 255, 255, .4) 77%, transparent 77%,    transparent  );  background-image: -ms-linear-gradient(    135deg,    rgba(255, 255, 255, .4) 27%, transparent 27%,    transparent 52%, rgba(255, 255, 255, .4) 52%,    rgba(255, 255, 255, .4) 77%, transparent 77%,    transparent  );  background-image: -o-linear-gradient(    135deg,    rgba(255, 255, 255, .4) 27%, transparent 27%,    transparent 52%, rgba(255, 255, 255, .4) 52%,    rgba(255, 255, 255, .4) 77%, transparent 77%,    transparent  );  background-image: linear-gradient(    135deg,    rgba(255, 255, 255, .4) 27%, transparent 27%,    transparent 52%, rgba(255, 255, 255, .4) 52%,    rgba(255, 255, 255, .4) 77%, transparent 77%,    transparent  );}.markdown-body .progress-100plus .progress-bar {  background-color: #a6d796;}.markdown-body .progress-80plus .progress-bar {  background-color: #c6d796;}.markdown-body .progress-60plus .progress-bar {  background-color: #d7c896;}.markdown-body .progress-40plus .progress-bar {  background-color: #d7a796;}.markdown-body .progress-20plus .progress-bar {  background-color: #d796a6;}.markdown-body .progress-0plus .progress-bar {  background-color: #c25f77;}.markdown-body .candystripe-animate .progress-bar{  -webkit-animation: animate-stripes 3s linear infinite;  -moz-animation: animate-stripes 3s linear infinite;  animation: animate-stripes 3s linear infinite;}@-webkit-keyframes animate-stripes {  0% {    background-position: 0 0;  }  100% {    background-position: 60px 0;  }}@-moz-keyframes animate-stripes {  0% {    background-position: 0 0;  }  100% {    background-position: 60px 0;  }}@keyframes animate-stripes {  0% {    background-position: 0 0;  }  100% {    background-position: 60px 0;  }}.markdown-body .gloss .progress-bar {  box-shadow:    inset 0 4px 12px rgba(255, 255, 255, .7),    inset 0 -12px 0 rgba(0, 0, 0, .05);}/* Multimarkdown Critic Blocks */.markdown-body .critic_mark {  background: #ff0;}.markdown-body .critic_delete {  color: #c82829;  text-decoration: line-through;}.markdown-body .critic_insert {  color: #718c00 ;  text-decoration: underline;}.markdown-body .critic_comment {  color: #8e908c;  font-style: italic;}.markdown-body .headeranchor {  font: normal normal 16px fontawesome-mini;  line-height: 1;  display: inline-block;  text-decoration: none;  -webkit-font-smoothing: antialiased;  -moz-osx-font-smoothing: grayscale;  -webkit-user-select: none;  -moz-user-select: none;  -ms-user-select: none;  user-select: none;}.headeranchor:before {  content: '\e157';}.markdown-body .task-list-item {  list-style-type: none;}.markdown-body .task-list-item+.task-list-item {  margin-top: 3px;}.markdown-body .task-list-item input {  margin: 0 4px 0.25em -20px;  vertical-align: middle;}/* Media */@media only screen and (min-width: 480px) {  .markdown-body {    font-size:14px;  }}@media only screen and (min-width: 768px) {  .markdown-body {    font-size:16px;  }}@media print {  .markdown-body * {    background: transparent !important;    color: black !important;    filter:none !important;    -ms-filter: none !important;  }  .markdown-body {    font-size:12pt;    max-width:100%;    outline:none;    border: 0;  }  .markdown-body a,  .markdown-body a:visited {    text-decoration: underline;  }  .markdown-body .headeranchor-link {    display: none;  }  .markdown-body a[href]:after {    content: " (" attr(href) ")";  }  .markdown-body abbr[title]:after {    content: " (" attr(title) ")";  }  .markdown-body .ir a:after,  .markdown-body a[href^="javascript:"]:after,  .markdown-body a[href^="#"]:after {    content: "";  }  .markdown-body pre {    white-space: pre;    white-space: pre-wrap;    word-wrap: break-word;  }  .markdown-body pre,  .markdown-body blockquote {    border: 1px solid #999;    padding-right: 1em;    page-break-inside: avoid;  }  .markdown-body .progress,  .markdown-body .progress-bar {    -moz-box-shadow: none;    -webkit-box-shadow: none;    box-shadow: none;  }  .markdown-body .progress {    border: 1px solid #ddd;  }  .markdown-body .progress-bar {    height: 22px;    border-right: 1px solid #ddd;  }  .markdown-body tr,  .markdown-body img {    page-break-inside: avoid;  }  .markdown-body img {    max-width: 100% !important;  }  .markdown-body p,  .markdown-body h2,  .markdown-body h3 {    orphans: 3;    widows: 3;  }  .markdown-body h2,  .markdown-body h3 {    page-break-after: avoid;  }}</style><style>/*github*/.codehilite {background-color:#fff;color:#333333;}.codehilite .hll {background-color:#ffffcc;}.codehilite .c{color:#999988;font-style:italic}.codehilite .err{color:#a61717;background-color:#e3d2d2}.codehilite .k{font-weight:bold}.codehilite .o{font-weight:bold}.codehilite .cm{color:#999988;font-style:italic}.codehilite .cp{color:#999999;font-weight:bold}.codehilite .c1{color:#999988;font-style:italic}.codehilite .cs{color:#999999;font-weight:bold;font-style:italic}.codehilite .gd{color:#000000;background-color:#ffdddd}.codehilite .ge{font-style:italic}.codehilite .gr{color:#aa0000}.codehilite .gh{color:#999999}.codehilite .gi{color:#000000;background-color:#ddffdd}.codehilite .go{color:#888888}.codehilite .gp{color:#555555}.codehilite .gs{font-weight:bold}.codehilite .gu{color:#800080;font-weight:bold}.codehilite .gt{color:#aa0000}.codehilite .kc{font-weight:bold}.codehilite .kd{font-weight:bold}.codehilite .kn{font-weight:bold}.codehilite .kp{font-weight:bold}.codehilite .kr{font-weight:bold}.codehilite .kt{color:#445588;font-weight:bold}.codehilite .m{color:#009999}.codehilite .s{color:#dd1144}.codehilite .n{color:#333333}.codehilite .na{color:teal}.codehilite .nb{color:#0086b3}.codehilite .nc{color:#445588;font-weight:bold}.codehilite .no{color:teal}.codehilite .ni{color:purple}.codehilite .ne{color:#990000;font-weight:bold}.codehilite .nf{color:#990000;font-weight:bold}.codehilite .nn{color:#555555}.codehilite .nt{color:navy}.codehilite .nv{color:teal}.codehilite .ow{font-weight:bold}.codehilite .w{color:#bbbbbb}.codehilite .mf{color:#009999}.codehilite .mh{color:#009999}.codehilite .mi{color:#009999}.codehilite .mo{color:#009999}.codehilite .sb{color:#dd1144}.codehilite .sc{color:#dd1144}.codehilite .sd{color:#dd1144}.codehilite .s2{color:#dd1144}.codehilite .se{color:#dd1144}.codehilite .sh{color:#dd1144}.codehilite .si{color:#dd1144}.codehilite .sx{color:#dd1144}.codehilite .sr{color:#009926}.codehilite .s1{color:#dd1144}.codehilite .ss{color:#990073}.codehilite .bp{color:#999999}.codehilite .vc{color:teal}.codehilite .vg{color:teal}.codehilite .vi{color:teal}.codehilite .il{color:#009999}.codehilite .gc{color:#999;background-color:#EAF2F5}</style><title>编写规范的README文档</title></head><body><article class="markdown-body"><p>代码不仅是写给计算机的，也是写给人的，一篇文档的好坏直接影响着使用此代码的人的心情，针对小的项目，一般使用<strong>README</strong>文件来做整体描述，README这个名字也极好的反映了此文件的目的，即“<strong>读我</strong>”。有趣的是，README这6个字母通常都是大写的，这是因为<strong>在Linux中大写的文件名往往意味着醒目和值得注意</strong>。实际上，并没有任何人规定README文档应该写成什么样子，但在本文中，我将介绍一些被公认的所谓优秀的README文档应该是什么样子的。</p><p>README文档通常是用<strong>Markdown</strong>编写的，但有时你也会看到其他格式的README文档，比如：有关Python的项目喜欢用<strong>reStructuredText</strong>编写README文档，这也是一种类似于Markdown的标记语言。一个优秀的README文档中应包含：<strong>简短的项目说明</strong>、<strong>安装说明</strong>、<strong>使用说明</strong>、<strong>如何参与贡献</strong>、<strong>许可协议</strong>等。此外，随着代码量的增加，<strong>已知BUG</strong>、<strong>常见问题</strong>等也可以加入到README文档中。</p><p>一个规范的README文档模板应该像下面这样的：<div class="codehilite"><pre># Project Name填写简短的项目说明# Installation填写安装说明# Usage填写使用说明# Contributing填写如何参与此项目的贡献方法# License填写许可协议</pre></div></p><p>有趣的是，在日常使用中，经常会见到各种各样的徽章或进度条，比如：<img alt="AppVeyor" src="https://img.shields.io/appveyor/ci/:user/:repo.svg"><img alt="GitHub release" src="https://img.shields.io/github/release/qubyte/rubidium.svg"></p><p>它们的本质就是一个个的图片而已，要想自定义这些图片可以访问<a href="https://shields.io/#/" target="_blank" rel="noopener">Shields.io</a>或<a href=""></a></p><p>最后，我将给出几个GitHub中项目的文档，它们的README文档都写得不错：- <a href="https://github.com/rails/rails" target="_blank" rel="noopener">Rails</a>- <a href="https://github.com/thoughtbot/factory_bot" target="_blank" rel="noopener">factory_bot</a>- <a href="https://github.com/meolu/walle-web" target="_blank" rel="noopener">Walle</a>- <a href="https://github.com/github/ledbetter" target="_blank" rel="noopener">Ledbetter</a>- <a href="https://github.com/udacity/create-your-own-adventure" target="_blank" rel="noopener">Create-Your-Own-Adventure</a>- <a href="https://github.com/zkat/can.viewify" target="_blank" rel="noopener">can.viewify</a></p></article></body></html>]]></content>
    
    <summary type="html">
    
      
      
        &lt;!DOCTYPE html&gt;&lt;html&gt;&lt;head&gt;&lt;meta charset=&quot;utf-8&quot;&gt;&lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;&lt;meta name=&quot;date&quot; conte
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>authentication</title>
    <link href="https://howiezhao.github.io/2018/11/16/authentication/"/>
    <id>https://howiezhao.github.io/2018/11/16/authentication/</id>
    <published>2018-11-16T09:26:53.000Z</published>
    <updated>2018-11-16T09:26:53.846Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>正则表达式小记</title>
    <link href="https://howiezhao.github.io/2018/11/12/regex/"/>
    <id>https://howiezhao.github.io/2018/11/12/regex/</id>
    <published>2018-11-12T10:43:19.000Z</published>
    <updated>2018-11-12T11:18:17.455Z</updated>
    
    <content type="html"><![CDATA[<p><strong>正则表达式</strong>，即<strong>Regular Expression</strong>，直译为<strong>描述某种规则的表达式</strong>，通常被简写为<strong>regex</strong>或<strong>RE</strong>，是指使用单个字符串来描述、匹配一系列符合某个句法规则的字符串。</p><h2 id="基本语法"><a href="#基本语法" class="headerlink" title="基本语法"></a>基本语法</h2><ul><li><code>?</code>：匹配前一个字符0次或1次</li><li><code>+</code>：匹配前一个字符1次或多次</li><li><code>*</code>：匹配前一个字符0次、1次或多次</li><li><code>|</code>：代表选择（即或集），具有最低优先级</li><li><code>()</code>：用来定义操作符的范围和优先级</li><li><code>[abc]</code>：匹配任何一个列在方括号中的字符，在这个例子中，要么匹配一个a，要么匹配一个b，要么匹配一个c</li><li><code>[0-9]</code>：如果在方括号中使用短划线分隔两个字符，表示所有在这两个字符范围内的都可以匹配，在这个例子中，表示匹配所有0到9的数字</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;正则表达式&lt;/strong&gt;，即&lt;strong&gt;Regular Expression&lt;/strong&gt;，直译为&lt;strong&gt;描述某种规则的表达式&lt;/strong&gt;，通常被简写为&lt;strong&gt;regex&lt;/strong&gt;或&lt;strong&gt;RE&lt;/stron
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>编写规范的README文档</title>
    <link href="https://howiezhao.github.io/2018/11/02/readme/"/>
    <id>https://howiezhao.github.io/2018/11/02/readme/</id>
    <published>2018-11-02T08:59:24.000Z</published>
    <updated>2018-11-17T12:31:29.247Z</updated>
    
    <content type="html"><![CDATA[<p>代码不仅是写给计算机的，也是写给人的，一篇文档的好坏直接影响着使用此代码的人的心情，针对小的项目，一般使用<strong>README</strong>文件来做整体描述，README这个名字也极好的反映了此文件的目的，即“<strong>读我</strong>”。有趣的是，README这6个字母通常都是大写的，这是因为<strong>在Linux中大写的文件名往往意味着醒目和值得注意</strong>。实际上，并没有任何人规定README文档应该写成什么样子，但在本文中，我将介绍一些被公认的所谓优秀的README文档应该是什么样子的。<br><a id="more"></a><br>README文档通常是用<strong>Markdown</strong>编写的，但有时你也会看到其他格式的README文档，比如：有关Python的项目喜欢用<strong>reStructuredText</strong>编写README文档，这也是一种类似于Markdown的标记语言。一个优秀的README文档中应包含：<strong>简短的项目说明</strong>、<strong>安装说明</strong>、<strong>使用说明</strong>、<strong>如何参与贡献</strong>、<strong>许可协议</strong>等。此外，随着代码量的增加，<strong>已知BUG</strong>、<strong>常见问题</strong>等也可以加入到README文档中。</p><p>一个规范的README文档模板应该像下面这样的：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># Project Name</span><br><span class="line">填写简短的项目说明</span><br><span class="line"># Installation</span><br><span class="line">填写安装说明</span><br><span class="line"># Usage</span><br><span class="line">填写使用说明</span><br><span class="line"># Contributing</span><br><span class="line">填写如何参与此项目的贡献方法</span><br><span class="line"># License</span><br><span class="line">填写许可协议</span><br></pre></td></tr></table></figure></p><p>有趣的是，在日常使用中，经常会见到各种各样的徽章或进度条，比如：<br><img src="https://img.shields.io/travis/rust-lang/rust.svg" alt="Travis (.org)"><img src="https://img.shields.io/github/release/qubyte/rubidium.svg" alt="GitHub release"><img src="https://img.shields.io/github/stars/git/git.svg" alt="GitHub stars"><img src="http://progressed.io/bar/71?title=done" alt="Progress"><br>它们的本质就是一个个的图片而已，要想自定义这些图片可以访问<a href="https://shields.io/#/" target="_blank" rel="noopener">Shields.io</a>或<a href="https://github.com/fehmicansaglam/progressed.io" target="_blank" rel="noopener">progressed.io</a>。</p><p>最后，我将给出几个GitHub中项目的文档，它们的README文档都写得不错：</p><ul><li><a href="https://github.com/rails/rails" target="_blank" rel="noopener">Rails</a></li><li><a href="https://github.com/thoughtbot/factory_bot" target="_blank" rel="noopener">factory_bot</a></li><li><a href="https://github.com/meolu/walle-web" target="_blank" rel="noopener">Walle</a></li><li><a href="https://github.com/github/ledbetter" target="_blank" rel="noopener">Ledbetter</a></li><li><a href="https://github.com/udacity/create-your-own-adventure" target="_blank" rel="noopener">Create-Your-Own-Adventure</a></li><li><a href="https://github.com/zkat/can.viewify" target="_blank" rel="noopener">can.viewify</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;代码不仅是写给计算机的，也是写给人的，一篇文档的好坏直接影响着使用此代码的人的心情，针对小的项目，一般使用&lt;strong&gt;README&lt;/strong&gt;文件来做整体描述，README这个名字也极好的反映了此文件的目的，即“&lt;strong&gt;读我&lt;/strong&gt;”。有趣的是，README这6个字母通常都是大写的，这是因为&lt;strong&gt;在Linux中大写的文件名往往意味着醒目和值得注意&lt;/strong&gt;。实际上，并没有任何人规定README文档应该写成什么样子，但在本文中，我将介绍一些被公认的所谓优秀的README文档应该是什么样子的。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>开源协议漫谈</title>
    <link href="https://howiezhao.github.io/2018/11/02/open-sourse-license/"/>
    <id>https://howiezhao.github.io/2018/11/02/open-sourse-license/</id>
    <published>2018-11-02T02:32:10.000Z</published>
    <updated>2018-11-02T08:55:23.638Z</updated>
    
    <content type="html"><![CDATA[<p><strong>开源协议</strong>（Open Source License）往往又被称为<strong>开源许可证</strong>，世界上的开源协议大约有上百种，但最常见的也无非6种而已，即GPL、LGPL、Mozilla、Apache、BSD和MIT，下文将逐个介绍，此外，本文还介绍了CC BY-NC-SA协议。</p><h2 id="GPL"><a href="#GPL" class="headerlink" title="GPL"></a>GPL</h2><p><a href="https://www.gnu.org/licenses/gpl.html" target="_blank" rel="noopener">GPL</a>全称GNU General Public License，即<strong>GNU通用公共许可协议</strong>，这是由GNU开源组织发起的，目前最新版是3.0。</p><h2 id="LGPL"><a href="#LGPL" class="headerlink" title="LGPL"></a>LGPL</h2><p><a href="https://www.gnu.org/licenses/lgpl-3.0.en.html" target="_blank" rel="noopener">LGPL</a>全称GNU Lesser General Public License，即<strong>GNU宽通用公共许可证</strong>，这也是由GNU开源组织发起的，目前最新版是3.0。</p><h2 id="Mozilla"><a href="#Mozilla" class="headerlink" title="Mozilla"></a>Mozilla</h2><p><a href="https://www.mozilla.org/en-US/MPL/" target="_blank" rel="noopener">Mozilla Public License</a>简称MPL，这是由Mozilla开源组织发起的，目前最新版是2.0。</p><h2 id="Apache"><a href="#Apache" class="headerlink" title="Apache"></a>Apache</h2><p><a href="https://www.apache.org/licenses/" target="_blank" rel="noopener">Apache License</a>是由Apache开源组织发起的，目前最新版是2.0。</p><h2 id="BSD"><a href="#BSD" class="headerlink" title="BSD"></a>BSD</h2><p>BSD License是由加州大学伯克利分校发起的，</p><h2 id="MIT"><a href="#MIT" class="headerlink" title="MIT"></a>MIT</h2><p>MIT License是由麻省理工学院发起的</p><h2 id="CC-BY-NC-SA"><a href="#CC-BY-NC-SA" class="headerlink" title="CC BY-NC-SA"></a>CC BY-NC-SA</h2><p><a href="https://creativecommons.org/licenses/by-nc-sa/4.0/deed.zh" target="_blank" rel="noopener">CC BY-NC-SA 4.0</a>全称Creative Commons-Attribution-Noncommercial-ShareAlike，即<strong>创作共享-署名-非商业性-相同方式共享</strong>，这是由<strong>创作共享</strong>组织发起的，目前最新版是4.0。</p><h2 id="作何选择？"><a href="#作何选择？" class="headerlink" title="作何选择？"></a>作何选择？</h2><p>如何简单快速的选择自己所需的开源协议呢？乌克兰程序员Paul Bagwell制作了一张分析图，国内程序员阮一峰根据此图制作出了中文版，图片如下（摘选自阮一峰博客<a href="http://www.ruanyifeng.com/blog/2011/05/how_to_choose_free_software_licenses.html" target="_blank" rel="noopener">如何选择开源许可证？</a>）：<img src="/images/license.png" alt="license">此外，<a href="https://choosealicense.com/" target="_blank" rel="noopener">https://choosealicense.com/</a> 是一个不错的网站，它使你通过回答一些问题来选择合适的开源协议。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;开源协议&lt;/strong&gt;（Open Source License）往往又被称为&lt;strong&gt;开源许可证&lt;/strong&gt;，世界上的开源协议大约有上百种，但最常见的也无非6种而已，即GPL、LGPL、Mozilla、Apache、BSD和MIT，下文将逐个
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>如何比较两个文件之间的差异</title>
    <link href="https://howiezhao.github.io/2018/10/19/diff/"/>
    <id>https://howiezhao.github.io/2018/10/19/diff/</id>
    <published>2018-10-19T06:05:51.000Z</published>
    <updated>2018-10-25T08:36:20.313Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>在Windows下，可以使用系统自带的<code>fc</code>命令（即file compare的缩写），比如<code>fc game_old.js game_new.js</code>，结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">正在比较文件 game_old.js 和 GAME_NEW.JS</span><br><span class="line">***** game_old.js</span><br><span class="line">KEY_CODES = &#123;</span><br><span class="line">  32: &apos;space&apos;,</span><br><span class="line">***** GAME_NEW.JS</span><br><span class="line">KEY_CODES = &#123;</span><br><span class="line">  13: &apos;enter&apos;,</span><br><span class="line">  32: &apos;space&apos;,</span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">***** game_old.js</span><br><span class="line">  37: &apos;left&apos;,</span><br><span class="line">  38: &apos;up&apos;,</span><br><span class="line">  39: &apos;right&apos;,</span><br><span class="line">***** GAME_NEW.JS</span><br><span class="line">  37: &apos;left&apos;,</span><br><span class="line">  39: &apos;right&apos;,</span><br><span class="line">*****</span><br><span class="line"></span><br><span class="line">***** game_old.js</span><br><span class="line"></span><br><span class="line">    if (KEY_STATUS.up) &#123;</span><br><span class="line">      var rad = ((this.rot-90) * Math.PI)/180;</span><br><span class="line">***** GAME_NEW.JS</span><br><span class="line"></span><br><span class="line">    if (KEY_STATUS.spacr) &#123;</span><br><span class="line">      var rad = ((this.rot-90) * Math.PI)/180;</span><br><span class="line">*****</span><br></pre></td></tr></table></figure></p><p>可见，<code>fc</code>命令会把两个文件中不同的片段显示出来，并分别标注属于哪个文件。输入<code>fc /?</code>可以查看<code>fc</code>命令的更多参数。<br><a id="more"></a></p><h2 id="Linux"><a href="#Linux" class="headerlink" title="Linux"></a>Linux</h2><p>在Linux下，可以使用系统自带的<code>diff</code>命令（即difference的缩写），它要比Windows中的<code>fc</code>命令更为强大，比如<code>diff -u game_old.js game_new.js</code>，其中<code>-u</code>参数表示使用标准区别格式，这将使输出内容更容易阅读，结果如下：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">--- game_old.js 2018-10-19 11:31:58.054834600 +0800</span><br><span class="line">+++ game_new.js 2018-10-19 11:32:19.667759500 +0800</span><br><span class="line">@@ -4,9 +4,9 @@</span><br><span class="line"> //</span><br><span class="line"></span><br><span class="line"> KEY_CODES = &#123;</span><br><span class="line">+  13: &apos;enter&apos;,</span><br><span class="line">   32: &apos;space&apos;,</span><br><span class="line">   37: &apos;left&apos;,</span><br><span class="line">-  38: &apos;up&apos;,</span><br><span class="line">   39: &apos;right&apos;,</span><br><span class="line">   40: &apos;down&apos;,</span><br><span class="line">   70: &apos;f&apos;,</span><br><span class="line">@@ -392,7 +392,7 @@</span><br><span class="line">       this.vel.rot = 0;</span><br><span class="line">     &#125;</span><br><span class="line"></span><br><span class="line">-    if (KEY_STATUS.up) &#123;</span><br><span class="line">+    if (KEY_STATUS.spacr) &#123;</span><br><span class="line">       var rad = ((this.rot-90) * Math.PI)/180;</span><br><span class="line">       this.acc.x = 0.5 * Math.cos(rad);</span><br><span class="line">       this.acc.y = 0.5 * Math.sin(rad);</span><br></pre></td></tr></table></figure></p><p>可见，<code>diff</code>命令的输出结果更加丰富，开始它展示了正在比较的2个文件，紧接着它显示了不同之处，其中<code>-</code>开始的段落代表只存在于前一个文件中，不存在于后一个文件中，同理，<code>+</code>开始的段落代表只存在于后一个文件中，不存在于前一个文件中，除此之外的所有段落代表共同存在于2个文件中。一般而言，我们将前一个文件表示为旧文件，后一个文件表示为新文件。输入<code>diff --help</code>可以查看<code>diff</code>命令的更多参数。</p><h2 id="图形化程序"><a href="#图形化程序" class="headerlink" title="图形化程序"></a>图形化程序</h2><p>或许使用像前面所述的命令行程序观察结果不是很方便，因此有些人可能会倾向于使用图形化程序，而<a href="http://meldmerge.org/" target="_blank" rel="noopener">Meld</a>就是个不错的选择，它开源且跨平台，可用来可视化的观察文件之间的差异。使用Meld比较两文件差异的结果如下：<img src="/images/meld.PNG" alt="Meld结果">可见，Meld用高亮显示文件之间的差异，同时它还提供了前往上一个/下一个差异的按钮，方便用户快速跳转。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;p&gt;在Windows下，可以使用系统自带的&lt;code&gt;fc&lt;/code&gt;命令（即file compare的缩写），比如&lt;code&gt;fc game_old.js game_new.js&lt;/code&gt;，结果如下：&lt;br&gt;&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;正在比较文件 game_old.js 和 GAME_NEW.JS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** game_old.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEY_CODES = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  32: &amp;apos;space&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** GAME_NEW.JS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;KEY_CODES = &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  13: &amp;apos;enter&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  32: &amp;apos;space&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*****&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** game_old.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  37: &amp;apos;left&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  38: &amp;apos;up&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  39: &amp;apos;right&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** GAME_NEW.JS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  37: &amp;apos;left&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  39: &amp;apos;right&amp;apos;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*****&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** game_old.js&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (KEY_STATUS.up) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var rad = ((this.rot-90) * Math.PI)/180;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;***** GAME_NEW.JS&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    if (KEY_STATUS.spacr) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      var rad = ((this.rot-90) * Math.PI)/180;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*****&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;可见，&lt;code&gt;fc&lt;/code&gt;命令会把两个文件中不同的片段显示出来，并分别标注属于哪个文件。输入&lt;code&gt;fc /?&lt;/code&gt;可以查看&lt;code&gt;fc&lt;/code&gt;命令的更多参数。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>RSA加密算法</title>
    <link href="https://howiezhao.github.io/2018/10/18/rsa/"/>
    <id>https://howiezhao.github.io/2018/10/18/rsa/</id>
    <published>2018-10-18T08:03:58.000Z</published>
    <updated>2018-10-19T01:58:56.556Z</updated>
    
    <content type="html"><![CDATA[<p>RSA加密算法中的3个字母分别是由此算法的3位发明者：Ron Rivest，Adi Shamir，Leonard Adleman的姓氏首字母组成的，RSA加密算法可以说是<strong>现代密码学</strong>中<strong>非对称加密</strong>的一个典型，所谓非对称加密其实就是<strong>公钥用于加密，私钥用于解密</strong>而已。在介绍RSA之前，先要理解一个基本常识，就是几乎所有的现代密码学算法背后都是基于<strong>因数分解难题</strong>发明的，所谓因数分解难题就是指目前没有一个<strong>快速</strong>的计算机算法可以对极大整数做因数分解。<br><a id="more"></a></p><h2 id="公钥与私钥"><a href="#公钥与私钥" class="headerlink" title="公钥与私钥"></a>公钥与私钥</h2><p>RSA加密算法通过如下步骤生成公钥和私钥：</p><ol><li>随机选择2个不相等的质数p和q，计算p和q的乘积n<br>取p=61，q=53，则n=3233</li><li>计算n的欧拉函数φ(n)<br>φ(3233)=60×52=3120</li><li>随机选择一个整数e，条件是1&lt; e &lt; φ(n)，且e与φ(n)互质，并计算e对于φ(n)的模反元素d<br>取e=17，d=2753</li><li>将n和e封装成公钥，n和d封装成私钥<br>公钥位(n, e)，私钥为(n, d)</li></ol><h2 id="加密与解密"><a href="#加密与解密" class="headerlink" title="加密与解密"></a>加密与解密</h2>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;RSA加密算法中的3个字母分别是由此算法的3位发明者：Ron Rivest，Adi Shamir，Leonard Adleman的姓氏首字母组成的，RSA加密算法可以说是&lt;strong&gt;现代密码学&lt;/strong&gt;中&lt;strong&gt;非对称加密&lt;/strong&gt;的一个典型，所谓非对称加密其实就是&lt;strong&gt;公钥用于加密，私钥用于解密&lt;/strong&gt;而已。在介绍RSA之前，先要理解一个基本常识，就是几乎所有的现代密码学算法背后都是基于&lt;strong&gt;因数分解难题&lt;/strong&gt;发明的，所谓因数分解难题就是指目前没有一个&lt;strong&gt;快速&lt;/strong&gt;的计算机算法可以对极大整数做因数分解。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="密码学" scheme="https://howiezhao.github.io/tags/%E5%AF%86%E7%A0%81%E5%AD%A6/"/>
    
  </entry>
  
  <entry>
    <title>代理链工具：proxychains</title>
    <link href="https://howiezhao.github.io/2018/10/18/proxychains/"/>
    <id>https://howiezhao.github.io/2018/10/18/proxychains/</id>
    <published>2018-10-18T02:21:58.000Z</published>
    <updated>2018-10-18T07:36:11.736Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/haad/proxychains" target="_blank" rel="noopener">proxychains</a>，顾名思义，是一种代理链工具，它可以强制任何Linux下的命令行应用使用其提供的代理连接到网络。Linux中有的应用本身并不支持代理，这时便可以使用proxychains强制其使用代理。<br><a id="more"></a></p><h2 id="安装及使用"><a href="#安装及使用" class="headerlink" title="安装及使用"></a>安装及使用</h2><p>在Ubuntu下可以使用<code>sudo apt install proxychains</code>直接安装，安装完成后会在<code>/etc</code>文件夹下生成<code>proxychains.conf</code>配置文件，在这个配置文件下可以配置代理链的工作模式和代理地址等。<br>proxychains提供了3种代理模式，分别是<strong>动态链</strong>（dynamic_chain）、<strong>严格链</strong>（strict_chain）、<strong>随机链</strong>（random_chain），建议选择动态链。此外，proxychains默认设置的代理地址未为Tor的地址，但其实最新版的Tor已经更改端口为9150，用户可以根据自己的需求按照示例格式配置地址。<br>配置完成后，要使用proxychains，只需在相应命令前加上<code>proxychains</code>即可，例如<code>proxychains nmap -sS 192.168.1.1</code>，即可强制nmap使用proxychains中设置的代理进行扫描。</p><h2 id="与proxychains-ng"><a href="#与proxychains-ng" class="headerlink" title="与proxychains-ng"></a>与proxychains-ng</h2><p><a href="https://github.com/rofl0r/proxychains-ng" target="_blank" rel="noopener">proxychains-ng</a>是proxychains的升级版，其中ng寓意为new generation（新一代），目前并不知晓proxychains-ng与proxychains是否为同一组织开发，但二者的配置与使用极为相似。<br>在Ubuntu下可以使用<code>sudo apt install proxychains-ng</code>直接安装，要使用proxychains-ng，只需在相应命令前加上<code>proxychains4</code>即可。</p><h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>由于Windows与Linux的设计哲学不同，Linux偏向使用命令行，Windows偏向使用图形界面，所以proxychains并未提供Windows版。在Windows下可以使用另一款代理工具<a href="https://www.proxifier.com/" target="_blank" rel="noopener">Proxifier</a>，它可以看作是proxychains的图形界面版，值得注意的是，Proxifier是收费的，但你可以免费体验31天。</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;https://github.com/haad/proxychains&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;proxychains&lt;/a&gt;，顾名思义，是一种代理链工具，它可以强制任何Linux下的命令行应用使用其提供的代理连接到网络。Linux中有的应用本身并不支持代理，这时便可以使用proxychains强制其使用代理。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>盘点那些互联网公司的学生优惠</title>
    <link href="https://howiezhao.github.io/2018/09/26/it-student-discount/"/>
    <id>https://howiezhao.github.io/2018/09/26/it-student-discount/</id>
    <published>2018-09-26T14:33:32.000Z</published>
    <updated>2018-09-28T05:42:30.842Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JetBrains"><a href="#JetBrains" class="headerlink" title="JetBrains"></a><a href="https://www.jetbrains.com/" target="_blank" rel="noopener">JetBrains</a></h2><p>JetBrains是捷克的一家软件公司，该公司专业生产各种编程语言的IDE，其中包括Java的IDE —— <a href="https://www.jetbrains.com/idea/" target="_blank" rel="noopener">Intellij IDEA</a>，Python的IDE —— <a href="https://www.jetbrains.com/pycharm/" target="_blank" rel="noopener">PyCharm</a>，JavaScript的IDE —— <a href="https://www.jetbrains.com/webstorm/" target="_blank" rel="noopener">WebStorm</a>，C/C++的IDE —— <a href="https://www.jetbrains.com/clion/" target="_blank" rel="noopener">CLion</a>等等。JetBrains系列的IDE一直以强大易用著称，甚至有人说，一个优秀的程序员应该使用JetBrains全家桶。<br>JetBrains的大多数IDE都是收费的，有的分为社区版（Community Edition）和专业版（Professional Edition）两种，专业版相比社区版有更多的功能，但也会收取相应的费用，然而，JetBrains对学生提供<a href="https://www.jetbrains.com/zh/student/" target="_blank" rel="noopener">免费授权计划</a>，学生只要验证学生身份即可免费使用JetBrains的所有IDE。<br><a id="more"></a></p><h2 id="Microsoft-Imagine"><a href="#Microsoft-Imagine" class="headerlink" title="Microsoft Imagine"></a><a href="https://imagine.microsoft.com/zh-CN" target="_blank" rel="noopener">Microsoft Imagine</a></h2><p>Microsoft Imagine原名为DreamSpark，是微软为学生提供的一个资源集合，它包括了一些<a href="https://imagine.microsoft.com/zh-cn/catalog" target="_blank" rel="noopener">软件和服务</a>，学生只要验证学生身份即可使用其中的工具。<br>个人认为，Imagine相比之前的DreamSpark，为学生提供的免费资源少了许多。具体而言，它提供如下资源：</p><ul><li>Parallels Desktop for Mac Pro Edition：macOS上最好的虚拟机产品，提供免费试用3个月</li><li>Visual Studio Community 2017：原本就是免费的</li><li>面向学生的 Microsoft Azure 入门版</li><li>Microsoft虚拟学院课程：原本就是免费的</li><li>Pluralsight</li><li>SQL Server 2017 Developer Edition</li><li>Visual Studio Code：微软推出的编辑器，原本就是开源免费的</li><li>Visual Studio for Mac：原本就是免费的</li><li>Windows Embedded 8.1 Industry Pro Update</li><li>Windows Server 2016</li><li>Windows应用商店免费开发人员帐户</li><li>WintellectNow</li><li>Xamarin Studio Community Edition：原本就是免费的</li><li>Visual Studio的PHP Tools插件</li></ul><h2 id="GitHub-Student-Developer-Pack"><a href="#GitHub-Student-Developer-Pack" class="headerlink" title="GitHub Student Developer Pack"></a><a href="https://education.github.com/pack" target="_blank" rel="noopener">GitHub Student Developer Pack</a></h2><p>GitHub学生开发者包（GitHub Student Developer Pack）是GitHub与其他公司一起创建的，旨在让学生从一个地方免费访问最好的开发者工具，这样他们就可以边做边学。其中包括的工具有：</p><ul><li>Algolia</li><li>Atom：GitHub推出的编辑器，原本就是开源免费的</li><li>AWS</li><li>Bitnami</li><li>CARTO</li><li>CrowdFlower</li><li>Datadog</li><li>DigitalOcean：美国一家VPS提供商，提供50美元优惠劵</li><li>Flatiron School</li><li>GitHub无限制的私人仓库</li><li>Gitkraken：跨平台的Git GUI客户端，提供免费一年的专业帐户</li><li>HackHands</li><li>Heroku：美国的一家PaaS厂商，提供一个长达2年的Hobby类型Dyno，Dyno是Heroku上所有应用程序的基本运行环境，Hobby类型的Dyno比免费的要稍微好一些，详细配置信息请参考<a href="https://devcenter.heroku.com/articles/dyno-types" target="_blank" rel="noopener">官方文档</a></li><li>JetBrains系列IDE</li><li>Namecheap：美国的一家域名注册商，提供免费一年SSL证书、一年.me后缀域名优惠</li><li>SendGrid</li><li>Sentry</li><li>Stripe</li><li>Taplytics</li><li>Thinkful</li><li>Transifex</li><li>Travis CI</li><li>Unreal Engine</li></ul><p>学生只要验证学生身份就可以使用GitHub学生开发者包中提供的工具。</p><h2 id="阿里云云翼计划"><a href="#阿里云云翼计划" class="headerlink" title="阿里云云翼计划"></a><a href="https://promotion.aliyun.com/ntms/act/campus2018.html" target="_blank" rel="noopener">阿里云云翼计划</a></h2><p>学生验证学生身份后，每月仅需9.9元即可租用一台阿里云服务器。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JetBrains&quot;&gt;&lt;a href=&quot;#JetBrains&quot; class=&quot;headerlink&quot; title=&quot;JetBrains&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://www.jetbrains.com/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;JetBrains&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;JetBrains是捷克的一家软件公司，该公司专业生产各种编程语言的IDE，其中包括Java的IDE —— &lt;a href=&quot;https://www.jetbrains.com/idea/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Intellij IDEA&lt;/a&gt;，Python的IDE —— &lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;PyCharm&lt;/a&gt;，JavaScript的IDE —— &lt;a href=&quot;https://www.jetbrains.com/webstorm/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;WebStorm&lt;/a&gt;，C/C++的IDE —— &lt;a href=&quot;https://www.jetbrains.com/clion/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;CLion&lt;/a&gt;等等。JetBrains系列的IDE一直以强大易用著称，甚至有人说，一个优秀的程序员应该使用JetBrains全家桶。&lt;br&gt;JetBrains的大多数IDE都是收费的，有的分为社区版（Community Edition）和专业版（Professional Edition）两种，专业版相比社区版有更多的功能，但也会收取相应的费用，然而，JetBrains对学生提供&lt;a href=&quot;https://www.jetbrains.com/zh/student/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;免费授权计划&lt;/a&gt;，学生只要验证学生身份即可免费使用JetBrains的所有IDE。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>Jupyter Notebook常用扩展</title>
    <link href="https://howiezhao.github.io/2018/09/25/jupyter-notebook-extensions/"/>
    <id>https://howiezhao.github.io/2018/09/25/jupyter-notebook-extensions/</id>
    <published>2018-09-25T09:01:20.000Z</published>
    <updated>2018-11-14T13:57:01.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="扩展机制"><a href="#扩展机制" class="headerlink" title="扩展机制"></a>扩展机制</h2><p>在介绍常用扩展之前，有必要先来介绍一下Jupyter Notebook的扩展机制：本质上来说，所有的Jupyter Notebook扩展都是一个个的Python包，所以大部分可以通过<code>pip</code>快速安装，另外，Jupyter Notebook是一个典型的B/S架构的应用，用户通过访问浏览器来使用Jupyter Notebook，因此，Jupyter Notebook的插件可以只针对服务器端，也可以扩展前端资源页面，而如果一个插件扩展了Jupyter Notebook的前端资源页面，则它还必须使用如下命令安装资源：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbextension install helpful_package --py # or --sys-prefix if using virtualenv or conda</span><br></pre></td></tr></table></figure></p><p>安装完资源后，如果这个资源需要在每次Jupyter Notebook启动后被加载，则还应使用如下命令启用资源：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jupyter nbextension enable helpful_package --py # or --sys-prefix if using virtualenv or conda</span><br></pre></td></tr></table></figure></p><h2 id="jupyter-contrib-nbextensions"><a href="#jupyter-contrib-nbextensions" class="headerlink" title="jupyter_contrib_nbextensions"></a><a href="https://github.com/ipython-contrib/jupyter_contrib_nbextensions" target="_blank" rel="noopener">jupyter_contrib_nbextensions</a></h2><p>与其说这是一个插件，倒不如说这是一群插件，该插件集合了大多数的Jupyter Notebook常用扩展。<br>使用<code>pip install jupyter_contrib_nbextensions</code>命令即可安装，安装完成后使用<code>jupyter contrib nbextension install --user</code>命令进行些许配置，参数<code>--user</code>指定安装到当前用户家目录下的<code>.jupyter</code>文件夹下。<br>等到安装并配置完成后，打开Jupyter Notebook网页，会出现<code>Nbextensions</code>选项卡，点击进入此选项卡中，可以启用或禁用相应的插件。</p><h2 id="RISE"><a href="#RISE" class="headerlink" title="RISE"></a><a href="https://github.com/damianavila/RISE" target="_blank" rel="noopener">RISE</a></h2><p>该插件可以将Jupyter Notebook中的一个个单元格转换为一张张的幻灯片。<br>使用<code>pip install RISE</code>命令即可安装，安装完成后使用<code>jupyter-nbextension install rise --py --sys-prefix</code>命令安装前端资源，接着使用<code>jupyter-nbextension enable rise --py --sys-prefix</code>命令启用前端资源。</p><p>##</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;扩展机制&quot;&gt;&lt;a href=&quot;#扩展机制&quot; class=&quot;headerlink&quot; title=&quot;扩展机制&quot;&gt;&lt;/a&gt;扩展机制&lt;/h2&gt;&lt;p&gt;在介绍常用扩展之前，有必要先来介绍一下Jupyter Notebook的扩展机制：本质上来说，所有的Jupyter Note
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>editorconfig 是什么</title>
    <link href="https://howiezhao.github.io/2018/09/23/what-is-editorconfig/"/>
    <id>https://howiezhao.github.io/2018/09/23/what-is-editorconfig/</id>
    <published>2018-09-23T09:55:34.000Z</published>
    <updated>2018-09-23T10:56:54.074Z</updated>
    
    <content type="html"><![CDATA[<p>开发同一项目的不同的人，可能会使用不同的编辑器，又会有不同的设置，这就会造成不同的代码格式，为了统一同一项目的代码格式，由此诞生了<a href="https://editorconfig.org/" target="_blank" rel="noopener">EditorConfig</a>，它包含了<strong>一个用于定义代码格式的文件</strong>和<strong>一批编辑器插件</strong>，这些插件可以让编辑器读取配置文件并依此格式化代码。<br>一个典型的 EditorConfig 配置文件如下所示：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"># 这是一行注释，以#开头</span><br><span class="line"></span><br><span class="line"># 表示此文件为最顶级</span><br><span class="line">root = true</span><br><span class="line"></span><br><span class="line"># 设定每个文件每行以换行（LF）结束，文件末尾添加一个新行</span><br><span class="line">[*]</span><br><span class="line">end_of_line = lf</span><br><span class="line">insert_final_newline = true</span><br><span class="line"></span><br><span class="line"># 匹配所有以 js 和 py 为后缀名的文件</span><br><span class="line"># 设定其编码为 UTF-8</span><br><span class="line">[*.&#123;js,py&#125;]</span><br><span class="line">charset = utf-8</span><br><span class="line"></span><br><span class="line"># 匹配所有以 py 为后缀名的文件，设定其缩进为 4 个空格</span><br><span class="line">[*.py]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 4</span><br><span class="line"></span><br><span class="line"># 设定 Makefile 文件的缩进为 Tab</span><br><span class="line">[Makefile]</span><br><span class="line">indent_style = tab</span><br><span class="line"></span><br><span class="line"># 匹配lib目录下所有以 js 为后缀名的文件，设定其缩进为 2 个空格</span><br><span class="line">[lib/**.js]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br><span class="line"></span><br><span class="line"># 设定 package.json 和 .travis.yml 的缩进为 2 个空格</span><br><span class="line">[&#123;package.json,.travis.yml&#125;]</span><br><span class="line">indent_style = space</span><br><span class="line">indent_size = 2</span><br></pre></td></tr></table></figure></p><p>此配置文件应该保存为<code>.editorconfig</code>并放置在项目目录中，编辑器的 EditorConfig 插件会从文件打开目录开始依次向其父级目录查找并读取配置文件，直到遇见<code>root = true</code>为止。<br>有很多项目在初始化时都会生成相应的<code>.editorconfig</code>文件，比如 Angular。<br>另外，Visual Studio 和 JetBrains 家的大部分 IDE 都已经原生支持了 EditorConfig，因此不用再安装插件；对于 Sublime Text 和 Vim 等未原生支持的编辑器，EditorConfig 官网提供了相应的插件下载地址。要了解详细的支持列表，请访问 EditorConfig 官网。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;开发同一项目的不同的人，可能会使用不同的编辑器，又会有不同的设置，这就会造成不同的代码格式，为了统一同一项目的代码格式，由此诞生了&lt;a href=&quot;https://editorconfig.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Edito
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>写代码应该用哪种字体</title>
    <link href="https://howiezhao.github.io/2018/09/23/code-font/"/>
    <id>https://howiezhao.github.io/2018/09/23/code-font/</id>
    <published>2018-09-23T09:52:35.000Z</published>
    <updated>2018-09-24T04:34:46.724Z</updated>
    
    <content type="html"><![CDATA[<h2 id="等宽字体与比例字体"><a href="#等宽字体与比例字体" class="headerlink" title="等宽字体与比例字体"></a>等宽字体与比例字体</h2><p>等宽字体（Monospaced）是指字符宽度相同的电脑字体，与此相对，字符宽度不尽相同的电脑字体称为比例字体（Proportional）。一图胜千言，如下：<br><img src="/images/monospaced.PNG" alt="等宽字体与比例字体">在早期的电脑中，由于技术的局限，无法进行字母宽度的比例调整，因此只能将每个字符都制作成一样的宽度，从而形成了等宽字体。在等宽字体中，字母 i，j 显得两侧余白较多，而字母 w，m 等的笔画显得相当拥挤。但是随着图形用户界面主流的更新和计算机技术的提高，处理比例字体的局限性得到了突破，因此现在排版上显得比较自然的比例字体的使用已经相当普及。这里所讨论的都是英文字体，对于中文字体而言，一般认为它们都是等宽的。<br>Windows 中常用的等宽字体为 <strong>Consolas</strong>；macOS 中常用的等宽字体为 <strong>Menlo</strong>；Linux 中常用的等宽字体为 <strong>Mono</strong>。<br><a id="more"></a></p><h2 id="衬线字体与非衬线字体"><a href="#衬线字体与非衬线字体" class="headerlink" title="衬线字体与非衬线字体"></a>衬线字体与非衬线字体</h2><p>顾名思义，衬线体（Serif）和无衬线体（Sans-Serif）的区别就在于有无<strong>衬线</strong>，而衬线则指的是字形笔画末端的装饰细节部分。一图胜千言，如下：<br><img src="/images/serif.PNG" alt="衬线字体与非衬线字体">这里所讨论的都是英文字体，对于简体中文字体而言，习惯性称衬线字体为<strong>宋体</strong>，非衬线字体为<strong>黑体</strong>，如下：<br><img src="/images/song-hei.png" alt="宋体与黑体">衬线字体常用于印刷业，而且特别适用于长篇文章段落；非衬线字体简洁大方，适用于广告、标志、牌子等短句。另外，系统、程序和网页中的字体也几乎都是非衬线字体，即使是很长的段落，这是因为显示器分辨率低，字体不能减小，如果用衬线字体，那些边边角角就很难用像素显示清楚，结果反而不利于阅读。<br>Google 在 2015 年就将其原本的衬线体 Logo 换成了无衬线体 Logo:<br><img src="/images/google.gif" alt="Google Logo 变化">我们在写 Word 文档时，常用的英文衬线字体就是 <strong>Times New Roman</strong>；而在做 PPT 时，个人倾向于使用非衬线字体<strong>微软雅黑</strong>。</p><h2 id="编程"><a href="#编程" class="headerlink" title="编程"></a>编程</h2><p>写代码应该使用的字体对于衬线或非衬线要求不大，但强烈建议使用等宽字体，这样可以便于代码对齐，因为比例字体的宽度不定，这会对代码对齐造成极大的困难。另外，还应该对特殊字符有较高的辨识度，比如 I（大写i）、l（小写L）、1（数字1），0（数字0）、O（大写o） 等。<br>基于以上，个人倾向于使用 Consolas，它是 Windows 中自带的一款等宽、非衬线字体。</p><h2 id="术语"><a href="#术语" class="headerlink" title="术语"></a>术语</h2><p>在下载别的字体时，可能会遇到相关术语，如下：</p><ul><li>sans：无衬线体</li><li>gothic：哥特体，即无衬线体</li><li>mono：等宽字体</li><li>bold：粗体</li><li>italic：斜体</li><li>bolditalic：加粗斜体</li><li>regular：常规体</li><li>sc：即 Simplified Chinese，简体中文</li><li>ts：即 Traditional Chinese，繁体中文</li></ul><h2 id="配色"><a href="#配色" class="headerlink" title="配色"></a>配色</h2><p>关于代码配色，就真是个“仁者见仁，智者见智”的问题了，个人要求满足以下两点：</p><ol><li>采用黑色背景</li><li>官网提供多种编辑器的支持</li></ol><p>综上，个人倾向于使用<a href="https://draculatheme.com/" target="_blank" rel="noopener">Dracula</a>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;等宽字体与比例字体&quot;&gt;&lt;a href=&quot;#等宽字体与比例字体&quot; class=&quot;headerlink&quot; title=&quot;等宽字体与比例字体&quot;&gt;&lt;/a&gt;等宽字体与比例字体&lt;/h2&gt;&lt;p&gt;等宽字体（Monospaced）是指字符宽度相同的电脑字体，与此相对，字符宽度不尽相同的电脑字体称为比例字体（Proportional）。一图胜千言，如下：&lt;br&gt;&lt;img src=&quot;/images/monospaced.PNG&quot; alt=&quot;等宽字体与比例字体&quot;&gt;在早期的电脑中，由于技术的局限，无法进行字母宽度的比例调整，因此只能将每个字符都制作成一样的宽度，从而形成了等宽字体。在等宽字体中，字母 i，j 显得两侧余白较多，而字母 w，m 等的笔画显得相当拥挤。但是随着图形用户界面主流的更新和计算机技术的提高，处理比例字体的局限性得到了突破，因此现在排版上显得比较自然的比例字体的使用已经相当普及。这里所讨论的都是英文字体，对于中文字体而言，一般认为它们都是等宽的。&lt;br&gt;Windows 中常用的等宽字体为 &lt;strong&gt;Consolas&lt;/strong&gt;；macOS 中常用的等宽字体为 &lt;strong&gt;Menlo&lt;/strong&gt;；Linux 中常用的等宽字体为 &lt;strong&gt;Mono&lt;/strong&gt;。&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>开发环境代表什么</title>
    <link href="https://howiezhao.github.io/2018/09/23/what-is-development-environment/"/>
    <id>https://howiezhao.github.io/2018/09/23/what-is-development-environment/</id>
    <published>2018-09-23T09:41:59.000Z</published>
    <updated>2018-09-24T05:40:11.478Z</updated>
    
    <content type="html"><![CDATA[<p>按照编程语言的执行原理，一般将其分为<strong>编译型语言</strong>（如 C）和<strong>解释型语言</strong>（如 Python），对于编译型语言来说，它的开发环境就代表该语言的<strong>编译器</strong>和其<strong>基本类库</strong>，对于解释型语言来说，它的开发环境就代表该语言的<strong>解释器</strong>和其<strong>基本类库</strong>。请注意，这里我并没有提到<strong>编辑器</strong>，因为编辑器并不属于每种语言所特有的范畴。<br>对于解释型语言来说，它的开发环境就等于运行环境，而对于编译型语言，可以说它不需要运行环境。请注意，Java 可以理解为是一种<strong>先编译后解释</strong>的语言，所以运行 Java 程序之前需要安装 JRE（Java 运行环境）。<br>如今许多语言的 IDE（集成开发环境），已经集编辑器、该语言的编译器/解释器、基本类库等于一体。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;按照编程语言的执行原理，一般将其分为&lt;strong&gt;编译型语言&lt;/strong&gt;（如 C）和&lt;strong&gt;解释型语言&lt;/strong&gt;（如 Python），对于编译型语言来说，它的开发环境就代表该语言的&lt;strong&gt;编译器&lt;/strong&gt;和其&lt;strong&gt;基本类库&lt;
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>谈谈SEO</title>
    <link href="https://howiezhao.github.io/2018/09/23/talk-about-seo/"/>
    <id>https://howiezhao.github.io/2018/09/23/talk-about-seo/</id>
    <published>2018-09-23T04:34:47.000Z</published>
    <updated>2018-09-23T09:42:52.739Z</updated>
    
    <content type="html"><![CDATA[<p>SEO，即搜索引擎优化(Search Engine Optimization)，下面列出几点SEO方面的建议：</p><ul><li>页面的URL应该足够反映页面的内容</li><li></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;SEO，即搜索引擎优化(Search Engine Optimization)，下面列出几点SEO方面的建议：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;页面的URL应该足够反映页面的内容&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;

      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Web" scheme="https://howiezhao.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>隐写术</title>
    <link href="https://howiezhao.github.io/2018/09/22/steganography/"/>
    <id>https://howiezhao.github.io/2018/09/22/steganography/</id>
    <published>2018-09-22T15:45:31.000Z</published>
    <updated>2018-09-24T12:20:34.058Z</updated>
    
    <content type="html"><![CDATA[<h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><p>拿到一个被隐写的文件，第一步当然是判断该文件是哪种类型的文件，一般可以通过文件后缀名判断之，若不能通过文件后缀名判断，则可以使用 Linux 中的 <code>file</code> 命令，直接输入 <code>file a</code>即可检查 a 文件的类型。<br>知道文件类型后，就可以对症下药，依据相应的类型使用相应的办法，此时，不妨再查看一下文件对应的二进制数据，所有电子信息的本质无非是二进制，可以在二进制数据中搜索<code>CTF</code>或<code>FLAG</code>等关键字，发现是否存在隐藏信息。Windows下可以使用Sublime Text 3 的插件<a href="http://facelessuser.github.io/HexViewer/" target="_blank" rel="noopener">HexViewer</a>查看二进制信息。Linux 下可以使用 <code>xxd</code> 命令查看文件二进制数据。</p><h2 id="图片隐写"><a href="#图片隐写" class="headerlink" title="图片隐写"></a>图片隐写</h2><h3 id="图片内容"><a href="#图片内容" class="headerlink" title="图片内容"></a>图片内容</h3><p>首先应该检查图片内容本身是否存在某些隐藏信息，遇到不熟悉的图片可以尝试<a href="https://www.google.com/imghp" target="_blank" rel="noopener">谷歌搜图</a>，或许可以发现更多信息。</p><h3 id="Exif"><a href="#Exif" class="headerlink" title="Exif"></a>Exif</h3><p>Exif，即可交换图像文件格式(Exchangeable image file format)，可以记录JPEG格式图片的属性信息和拍摄数据。有的JPEG格式图片会具有Exif信息，在Windows中查看属性选项卡中的详细信息项即可查看。别的格式的图片不具备Exif信息。如下图片：<br><img src="/images/meinv.jpg" alt="exif"><br><a id="more"></a></p><h3 id="JPEG"><a href="#JPEG" class="headerlink" title="JPEG"></a>JPEG</h3><h3 id="PNG"><a href="#PNG" class="headerlink" title="PNG"></a>PNG</h3><h3 id="GIF"><a href="#GIF" class="headerlink" title="GIF"></a>GIF</h3><h3 id="BMP"><a href="#BMP" class="headerlink" title="BMP"></a>BMP</h3><h2 id="音频隐写"><a href="#音频隐写" class="headerlink" title="音频隐写"></a>音频隐写</h2><p>音频隐写一般会用到<a href="http://www.petitcolas.net/steganography/mp3stego/" target="_blank" rel="noopener">MP3stego</a>，该软件会将信息编码到 MP3 文件中，同时也可以从被隐写的 MP3 文件中解码所需信息。下载该软件后在其<code>MP3Stego</code>文件夹下会有 2 个命令：<code>Encode</code>和<code>Decode</code>，<code>Encode</code>命令用于隐写信息，<code>Decode</code>命令用于解密被隐写的信息，使用<code>decode -X -P pass svega_stego.mp3</code>即可从<code>svega_stego.mp3</code>文件中解码所需信息，<code>-P</code>指定解密密码。</p><h2 id="视频隐写"><a href="#视频隐写" class="headerlink" title="视频隐写"></a>视频隐写</h2><h2 id="其他隐写"><a href="#其他隐写" class="headerlink" title="其他隐写"></a>其他隐写</h2><h3 id="Word-文档"><a href="#Word-文档" class="headerlink" title="Word 文档"></a>Word 文档</h3><p>Word 文档可能会隐藏某些信息，遇到 <code>doc</code> 文档可以尝试在 <code>Word 选项</code>中选择<code>显示</code>并打开<code>隐藏文字</code>选项。如下所示：<br><img src="/images/word.PNG" alt="word"><br>像 Word 文档或 Excel 表格这样的富文本文件，可以直接解压之，查看其中是否包含某些特殊文件。<br>类似的题可以参考<a href="http://www.shiyanbar.com/ctf/1927" target="_blank" rel="noopener">Fonts</a>,<a href="http://www.shiyanbar.com/ctf/1849" target="_blank" rel="noopener">认真你就输了</a>等等。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;第一步&quot;&gt;&lt;a href=&quot;#第一步&quot; class=&quot;headerlink&quot; title=&quot;第一步&quot;&gt;&lt;/a&gt;第一步&lt;/h2&gt;&lt;p&gt;拿到一个被隐写的文件，第一步当然是判断该文件是哪种类型的文件，一般可以通过文件后缀名判断之，若不能通过文件后缀名判断，则可以使用 Linux 中的 &lt;code&gt;file&lt;/code&gt; 命令，直接输入 &lt;code&gt;file a&lt;/code&gt;即可检查 a 文件的类型。&lt;br&gt;知道文件类型后，就可以对症下药，依据相应的类型使用相应的办法，此时，不妨再查看一下文件对应的二进制数据，所有电子信息的本质无非是二进制，可以在二进制数据中搜索&lt;code&gt;CTF&lt;/code&gt;或&lt;code&gt;FLAG&lt;/code&gt;等关键字，发现是否存在隐藏信息。Windows下可以使用Sublime Text 3 的插件&lt;a href=&quot;http://facelessuser.github.io/HexViewer/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;HexViewer&lt;/a&gt;查看二进制信息。Linux 下可以使用 &lt;code&gt;xxd&lt;/code&gt; 命令查看文件二进制数据。&lt;/p&gt;
&lt;h2 id=&quot;图片隐写&quot;&gt;&lt;a href=&quot;#图片隐写&quot; class=&quot;headerlink&quot; title=&quot;图片隐写&quot;&gt;&lt;/a&gt;图片隐写&lt;/h2&gt;&lt;h3 id=&quot;图片内容&quot;&gt;&lt;a href=&quot;#图片内容&quot; class=&quot;headerlink&quot; title=&quot;图片内容&quot;&gt;&lt;/a&gt;图片内容&lt;/h3&gt;&lt;p&gt;首先应该检查图片内容本身是否存在某些隐藏信息，遇到不熟悉的图片可以尝试&lt;a href=&quot;https://www.google.com/imghp&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;谷歌搜图&lt;/a&gt;，或许可以发现更多信息。&lt;/p&gt;
&lt;h3 id=&quot;Exif&quot;&gt;&lt;a href=&quot;#Exif&quot; class=&quot;headerlink&quot; title=&quot;Exif&quot;&gt;&lt;/a&gt;Exif&lt;/h3&gt;&lt;p&gt;Exif，即可交换图像文件格式(Exchangeable image file format)，可以记录JPEG格式图片的属性信息和拍摄数据。有的JPEG格式图片会具有Exif信息，在Windows中查看属性选项卡中的详细信息项即可查看。别的格式的图片不具备Exif信息。如下图片：&lt;br&gt;&lt;img src=&quot;/images/meinv.jpg&quot; alt=&quot;exif&quot;&gt;&lt;br&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="CTF" scheme="https://howiezhao.github.io/tags/CTF/"/>
    
  </entry>
  
  <entry>
    <title>微软平台技术简介</title>
    <link href="https://howiezhao.github.io/2018/09/22/microsoft-technology/"/>
    <id>https://howiezhao.github.io/2018/09/22/microsoft-technology/</id>
    <published>2018-09-22T12:30:09.000Z</published>
    <updated>2018-09-22T16:13:05.530Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h2><p>微软最初的操作系统的DOS，DOS只是一个命令行形式，后来</p><h2 id="NET"><a href="#NET" class="headerlink" title=".NET"></a>.NET</h2><h2 id="Windows-Phone"><a href="#Windows-Phone" class="headerlink" title="Windows Phone"></a>Windows Phone</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Windows&quot;&gt;&lt;a href=&quot;#Windows&quot; class=&quot;headerlink&quot; title=&quot;Windows&quot;&gt;&lt;/a&gt;Windows&lt;/h2&gt;&lt;p&gt;微软最初的操作系统的DOS，DOS只是一个命令行形式，后来&lt;/p&gt;
&lt;h2 id=&quot;NET&quot;&gt;&lt;a 
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>网站统计与分析</title>
    <link href="https://howiezhao.github.io/2018/09/22/web-analytics/"/>
    <id>https://howiezhao.github.io/2018/09/22/web-analytics/</id>
    <published>2018-09-22T09:59:29.000Z</published>
    <updated>2018-09-22T11:02:32.435Z</updated>
    
    <content type="html"><![CDATA[<h2 id="几个术语"><a href="#几个术语" class="headerlink" title="几个术语"></a>几个术语</h2><ul><li>PV：Page View，即页面浏览量或点击量，用户每次刷新即被计算一次。</li><li>UV：Unique Visitor，指独立访客数，以cookie为依据，访问网站的一台电脑客户端为一个访客。一天内相同的客户端只会被计算一次。</li><li>IP：指独立IP数。一天内相同IP地址只被计算一次。</li></ul><h2 id="相关工具"><a href="#相关工具" class="headerlink" title="相关工具"></a>相关工具</h2><p>有许多第三方的工具可以帮助站长统计和分析网站流量，比如<a href="https://tongji.baidu.com" target="_blank" rel="noopener">百度统计</a>、<a href="http://ta.qq.com/" target="_blank" rel="noopener">腾讯分析</a>、<a href="https://analytics.google.com/analytics/web" target="_blank" rel="noopener">Google Analytics(GA)</a>等。个人经常使用Google Analytics。<br>这类工具的原理大致为：它们会生成一段特定的JS代码，站长需要将这段代码插入到自己网站的页面中，当访客访问网站时，这段代码会收集访客的行为信息，并上传到它们的服务器上。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;几个术语&quot;&gt;&lt;a href=&quot;#几个术语&quot; class=&quot;headerlink&quot; title=&quot;几个术语&quot;&gt;&lt;/a&gt;几个术语&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;PV：Page View，即页面浏览量或点击量，用户每次刷新即被计算一次。&lt;/li&gt;
&lt;li&gt;UV：Unique
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Web" scheme="https://howiezhao.github.io/tags/Web/"/>
    
  </entry>
  
  <entry>
    <title>版本号的意义</title>
    <link href="https://howiezhao.github.io/2018/09/21/version-number/"/>
    <id>https://howiezhao.github.io/2018/09/21/version-number/</id>
    <published>2018-09-21T12:51:08.000Z</published>
    <updated>2018-09-22T09:54:42.867Z</updated>
    
    <content type="html"><![CDATA[<p>软件版本号的确定没有一个统一的规范，但大都遵循一个固定的格式，即<code>X.Y.Z</code>格式，其中：</p><ul><li>X代表<strong>主版本号</strong>，一般当软件整体重写，或出现不向后兼容的改变等重大更新时，增加X，同时重置Y、Z为0，X为0时表示软件还在开发阶段；</li><li>Y代表<strong>次版本号</strong>，增删功能时增加Y，同时重置Z为0；</li><li>Z代表<strong>修订号</strong>，修复Bug时增加Z。</li></ul><p>除此之外，还会有一些修饰词，比如：</p><ul><li><code>alpha</code>表示内部测试版；</li><li><code>beta</code>表示公开测试版；</li><li><code>rc</code>即Release Candidate，表示候选版本，即将作为正式版发布；</li><li><code>release</code>表示正式发行版；</li><li><code>lts</code>即Long Term Support，表示长期支持版。</li></ul><p>有的项目有自己的一套规则，比如Ubuntu、Visual Studio等，它们采用发布年份作为版本号；Node.js规定X为偶数的是稳定版，X为奇数的是开发版；TeX的版本号不断趋近于π。<br>随着版本号定义的越来越混乱，GitHub起草了一个<a href="https://semver.org/lang/zh-CN/" target="_blank" rel="noopener">语义化版本(Semantic Versioning)</a>规范，为开源项目做出了一定指导意义。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;软件版本号的确定没有一个统一的规范，但大都遵循一个固定的格式，即&lt;code&gt;X.Y.Z&lt;/code&gt;格式，其中：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;X代表&lt;strong&gt;主版本号&lt;/strong&gt;，一般当软件整体重写，或出现不向后兼容的改变等重大更新时，增加X，同时重置Y、Z为0，
      
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
  </entry>
  
  <entry>
    <title>top的增强版：htop</title>
    <link href="https://howiezhao.github.io/2018/09/19/htop-top/"/>
    <id>https://howiezhao.github.io/2018/09/19/htop-top/</id>
    <published>2018-09-19T09:50:14.000Z</published>
    <updated>2018-09-19T12:39:04.595Z</updated>
    
    <content type="html"><![CDATA[<h2 id="top"><a href="#top" class="headerlink" title="top"></a>top</h2><p>top是Linux下一个常用命令，用来监视系统的运行状况，类似于Windows的任务管理器，下图是<code>top</code>命令的运行界面：<br><img src="/images/top.PNG" alt="top">top的运行结果可以大致分为7个部分：</p><ul><li>第1行显示了<strong>系统</strong>概况</li><li>第2行显示了<strong>进程</strong>概况</li><li>第3行显示了<strong>CPU</strong>概况</li><li>第4行显示了<strong>内存</strong>概况</li><li>第5行显示了<strong>Swap分区</strong>概况</li><li>第6行为空行，用以显示运行命令时输入的<strong>参数</strong></li><li>剩下部分则为<strong>每个进程的详细信息</strong><a id="more"></a><h3 id="第1行"><a href="#第1行" class="headerlink" title="第1行"></a>第1行</h3></li></ul><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>top -</td><td>系统概况</td></tr><tr><td>18:37:24</td><td>当前系统时间</td></tr><tr><td>up 130 days, 6:22,</td><td>系统已运行时间</td></tr><tr><td>1 user,</td><td>当前登录用户数</td></tr><tr><td>load average: 0.02, 0.04, 0.00</td><td>系统平均负载，三个数值分别为1分钟、5分钟、15分钟前到现在的平均值。</td></tr></tbody></table><h3 id="第2行"><a href="#第2行" class="headerlink" title="第2行"></a>第2行</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>Tasks:</td><td>进程(任务)概况</td></tr><tr><td>23 total,</td><td>总进程数</td></tr><tr><td>1 running,</td><td>运行的进程数</td></tr><tr><td>22 sleeping,</td><td>睡眠的进程数</td></tr><tr><td>0 stopped,</td><td>停止的进程数</td></tr><tr><td>0 zombie</td><td>僵尸进程数</td></tr></tbody></table><h3 id="第3行"><a href="#第3行" class="headerlink" title="第3行"></a>第3行</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>Cpu(s):</td><td>CPU概况</td></tr><tr><td>3.7%us,</td><td>用户(user)进程占用CPU百分率</td></tr><tr><td>0.7%sy,</td><td>系统(system)进程占用CPU百分率</td></tr><tr><td>0.0%ni,</td><td>用户进程空间内改变过优先级(niced)的进程占用CPU百分比</td></tr><tr><td>95.7%id,</td><td>CPU空闲(idle)率</td></tr><tr><td>0.0%wa,</td><td>等待(wait)IO的CPU时间百分比</td></tr><tr><td>0.0%hi,</td><td>硬中断(hardware interrupt)占用CPU的百分比</td></tr><tr><td>0.0%si,</td><td>软中断(software interrupt)占用CPU的百分比</td></tr><tr><td>0.0%st</td><td></td></tr></tbody></table><h3 id="第4行"><a href="#第4行" class="headerlink" title="第4行"></a>第4行</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>Mem:</td><td>内存(memory)概况，数值以kb为单位</td></tr><tr><td>524288k total,</td><td>内存总量</td></tr><tr><td>278140k used,</td><td>内存使用量</td></tr><tr><td>246148k free,</td><td>内存空闲量</td></tr><tr><td>0k buffers</td><td>缓冲的内存量</td></tr></tbody></table><h3 id="第5行"><a href="#第5行" class="headerlink" title="第5行"></a>第5行</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>Swap:</td><td>Swap分区概况，数值以kb为单位</td></tr><tr><td>65536k total,</td><td>Swap分区总量</td></tr><tr><td>65536k used,</td><td>Swap分区使用量</td></tr><tr><td>0k free,</td><td>Swap分区空闲量</td></tr><tr><td>28800k cached</td><td>缓冲的Swap分区量</td></tr></tbody></table><h3 id="剩下部分"><a href="#剩下部分" class="headerlink" title="剩下部分"></a>剩下部分</h3><table><thead><tr><th>字符</th><th>含义</th></tr></thead><tbody><tr><td>PID</td><td>进程号</td></tr><tr><td>USER</td><td>进程创建者</td></tr><tr><td>PR</td><td>进程优先级</td></tr><tr><td>NI</td><td>nice值。越小优先级越高，最小-20，最大20（用户设置最大19）</td></tr><tr><td>VIRT</td><td>进程使用的虚拟(virtual)内存总量，单位kb。VIRT=SWAP+RES</td></tr><tr><td>RES</td><td>进程使用的、未被换出的物理内存大小，单位kb。RES=CODE+DATA</td></tr><tr><td>SHR</td><td>共享(share)内存大小，单位kb</td></tr><tr><td>S</td><td>进程状态。D=不可中断的睡眠状态，R=运行态，S=睡眠态，T=跟踪/停止态，Z=僵尸态</td></tr><tr><td>%CPU</td><td>进程占用CPU百分比</td></tr><tr><td>%MEM</td><td>进程占用内存百分比</td></tr><tr><td>TIME+</td><td>进程运行时间</td></tr><tr><td>COMMAND</td><td>运行进程时所使用的命令</td></tr></tbody></table><h3 id="命令"><a href="#命令" class="headerlink" title="命令"></a>命令</h3><p>在<code>top</code>命令运行界面也可以输入相关命令，具体如下：</p><ul><li><code>q</code>：退出<code>top</code>运行界面</li><li><code>P</code>：以占据CPU百分比排序</li><li><code>M</code>：以占据内存百分比排序</li><li><code>T</code>：以累积占用CPU时间排序</li><li><code>s</code>：修改刷新时间间隔，默认每隔3秒刷新信息。按下s键，然后按下数字，即可修改刷新时间间隔为你输入的数字，单位为秒。例如：按下s键，在按数字1键，即可实现每秒刷新一次</li><li>回车或空格：手动立即刷新</li><li><code>k</code>：终止指定的进程。按下k键，再输入要杀死的进程的pid，再按回车键，选择信号类型，以数字标示，默认15为杀死，本步可省略直接按回车键（常用为-9）</li><li><code>h</code>：显示可输入的命令帮助菜单</li></ul><h2 id="htop"><a href="#htop" class="headerlink" title="htop"></a>htop</h2><p>htop是一款第三方的命令行工具，它可以被视为是top的增强版，在Ubuntu下可使用<code>apt install htop</code>命令安装，下图是<code>htop</code>命令的运行界面：<br><img src="/images/htop.PNG" alt="htop">当了解了<code>top</code>运行界面的各种参数的含义后，<code>htop</code>运行界面就变得不言而喻了，下面简要介绍一下可以在htop运行界面执行的相关命令：</p><h2 id="优势"><a href="#优势" class="headerlink" title="优势"></a>优势</h2><p>综上所述，htop相比top有以下优势：</p><ul><li>彩色标识CPU、内存、Swap分区</li><li>CPU、内存、Swap分区使用情况直观易懂</li><li>底部有命令提示</li><li>支持方向键选择进程</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;top&quot;&gt;&lt;a href=&quot;#top&quot; class=&quot;headerlink&quot; title=&quot;top&quot;&gt;&lt;/a&gt;top&lt;/h2&gt;&lt;p&gt;top是Linux下一个常用命令，用来监视系统的运行状况，类似于Windows的任务管理器，下图是&lt;code&gt;top&lt;/code&gt;命令的运行界面：&lt;br&gt;&lt;img src=&quot;/images/top.PNG&quot; alt=&quot;top&quot;&gt;top的运行结果可以大致分为7个部分：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第1行显示了&lt;strong&gt;系统&lt;/strong&gt;概况&lt;/li&gt;
&lt;li&gt;第2行显示了&lt;strong&gt;进程&lt;/strong&gt;概况&lt;/li&gt;
&lt;li&gt;第3行显示了&lt;strong&gt;CPU&lt;/strong&gt;概况&lt;/li&gt;
&lt;li&gt;第4行显示了&lt;strong&gt;内存&lt;/strong&gt;概况&lt;/li&gt;
&lt;li&gt;第5行显示了&lt;strong&gt;Swap分区&lt;/strong&gt;概况&lt;/li&gt;
&lt;li&gt;第6行为空行，用以显示运行命令时输入的&lt;strong&gt;参数&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;剩下部分则为&lt;strong&gt;每个进程的详细信息&lt;/strong&gt;
    
    </summary>
    
      <category term="CheatSheet" scheme="https://howiezhao.github.io/categories/CheatSheet/"/>
    
    
      <category term="Linux" scheme="https://howiezhao.github.io/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>curl wget</title>
    <link href="https://howiezhao.github.io/2018/09/19/curl-wget/"/>
    <id>https://howiezhao.github.io/2018/09/19/curl-wget/</id>
    <published>2018-09-19T09:50:05.000Z</published>
    <updated>2018-09-19T09:50:05.128Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
</feed>
